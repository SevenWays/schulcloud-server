var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.141,1,2.791]],["body/classes/ApiValidationError.html",[0,0.172,1,4.315,2,1.057,3,0.223,4,0.182,5,0.129,6,6.086,7,4.803,8,2.107,9,5.396,10,0.45,11,1.147,12,3.688,13,2.775,14,3.626,15,2.873,16,0.636,17,1.764,18,6.086,19,1.62,20,5.453,21,6.398,22,0.911,23,5.453,24,1.14,25,0.01,26,0.882,27,0.836,28,6.681,29,2.065,30,3.512,31,4.803,32,1.132,33,4.803,34,4.803,35,4.803,36,4.803,37,1.392,38,2.977,39,0.391,40,4.055,41,1.169,42,5.453,43,0.223,44,4.803,45,2.257,46,4.375,47,3.626,48,3.934,49,2.257,50,3.8,51,4.055,52,3.104,53,3.405,54,5.453,55,0.006,56,0.007,57,0.006]],["title/classes/ApiValidationErrorResponse.html",[0,0.141,58,3.585]],["body/classes/ApiValidationErrorResponse.html",[0,0.172,1,5.245,2,1.053,3,0.222,4,0.181,5,0.128,8,2.102,10,0.449,11,1.145,13,2.768,14,3.617,15,2.611,16,0.558,19,1.614,22,0.747,24,1.135,25,0.01,26,0.879,27,0.833,28,6.669,38,4.134,39,0.429,43,0.222,47,3.617,48,4.858,49,2.248,51,4.04,55,0.006,56,0.007,57,0.006,58,5.53,59,6.669,60,4.785,61,1.792,62,4.535,63,4.103,64,4.535,65,3.881,66,6.893,67,5.432,68,5.631,69,5.432,70,4.358,71,4.358,72,5.432,73,5.432,74,2.37,75,5.432,76,5.432,77,5.432,78,6.893,79,6.893,80,5.432,81,1.515,82,1.592,83,6.893,84,5.432]],["title/controllers/AuthController.html",[85,2.103,86,3.323]],["body/controllers/AuthController.html",[0,0.209,3,0.27,4,0.22,5,0.156,25,0.01,39,0.441,41,1.418,43,0.27,55,0.007,56,0.008,57,0.007,85,3.113,86,5.782,87,3.342,88,5.826,89,4.919,90,6.615,91,4.609,92,5.307,93,3.01,94,4.609,95,5.433,96,5.826,97,6.615,98,3.113]],["title/classes/AuthEntity.html",[0,0.141,99,3.323]],["body/classes/AuthEntity.html",[0,0.209,2,1.282,3,0.27,4,0.22,5,0.156,10,0.546,11,1.291,16,0.487,22,0.717,25,0.01,32,1.16,39,0.375,43,0.27,55,0.007,56,0.008,57,0.007,99,5.782,100,5.826,101,8.258,102,1.647,103,4.333,104,6.615,105,2.914]],["title/modules/AuthModule.html",[106,1.328,107,3.114]],["body/modules/AuthModule.html",[0,0.17,3,0.219,4,0.179,5,0.127,25,0.01,39,0.493,41,1.151,43,0.219,55,0.006,56,0.007,57,0.006,86,5.089,87,2.714,95,5.836,96,4.731,106,2.238,107,6.148,108,2.157,109,2.444,110,2.932,111,2.932,112,2.714,113,3.428,114,3.545,115,4.731,116,4.731,117,4.731,118,4.731,119,5.509,120,5.836,121,3.736,122,2.818,123,2.444,124,5.371,125,3.896,126,6.844,127,3.994,128,5.371,129,4.309,130,3.533,131,4.731,132,5.371,133,5.371,134,5.371,135,5.371,136,5.371,137,5.371,138,3.743,139,4.309,140,4.731,141,4.309,142,4.731]],["title/injectables/AuthService.html",[95,2.94,143,1.058]],["body/injectables/AuthService.html",[0,0.166,3,0.215,4,0.175,5,0.124,10,0.435,16,0.549,17,1.724,19,1.564,22,0.809,24,1.559,25,0.01,26,1.206,27,1.144,32,1.243,37,1.724,39,0.446,41,1.128,43,0.215,55,0.008,56,0.007,57,0.006,74,2.114,81,1.484,82,1.216,95,4.444,98,2.477,99,3.913,129,4.222,143,1.6,144,2.178,145,4.635,146,3.345,147,5.419,148,6.755,149,5.262,150,5.202,151,8.471,152,5.262,153,6.755,154,5.262,155,2.607,156,3.257,157,6.755,158,5.355,159,5.262,160,3.667,161,6.755,162,5.262,163,5.262,164,2.318,165,2.761,166,5.262,167,5.262,168,4.222,169,2.996,170,5.262,171,3.913,172,3.132]],["title/modules/AuthorizationModule.html",[106,1.328,173,2.94]],["body/modules/AuthorizationModule.html",[0,0.185,3,0.239,4,0.195,5,0.138,25,0.01,39,0.464,41,1.255,43,0.239,55,0.006,56,0.008,57,0.006,106,2.328,108,2.351,109,2.665,110,3.197,111,3.197,112,2.959,113,3.566,114,3.688,121,3.944,122,3.073,123,2.665,125,4.113,173,5.877,174,5.157,175,5.157,176,5.157,177,5.157,178,5.63,179,5.603,180,5.345,181,5.855,182,5.855,183,5.855,184,2.853,185,5.157]],["title/injectables/AuthorizationService.html",[143,1.058,179,2.791]],["body/injectables/AuthorizationService.html",[0,0.124,3,0.16,4,0.131,5,0.093,10,0.324,16,0.514,17,1.413,19,1.165,22,0.756,24,1.458,25,0.01,26,1.128,27,1.07,32,1.14,37,1.879,39,0.395,41,0.84,43,0.16,55,0.004,56,0.006,57,0.004,74,2.184,81,1.217,82,0.905,98,1.845,143,1.311,144,1.622,146,3.275,155,2.587,156,3.161,165,3.862,172,2.333,179,3.458,180,4.77,184,1.91,185,3.452,186,3.452,187,6.42,188,6.42,189,6.42,190,3.919,191,3.919,192,3.919,193,3.587,194,3.836,195,4.029,196,4.76,197,4.49,198,3.919,199,3.296,200,5.537,201,3.595,202,1.597,203,4.279,204,3.858,205,3.919,206,3.919,207,5.188,208,3.919,209,3.919,210,4.153,211,4.118,212,4.877,213,3.458,214,4.877,215,1.293,216,1.845,217,2.731,218,4.706,219,3.642,220,3.919,221,3.919,222,3.144,223,3.919,224,3.919,225,3.919,226,5.537,227,3.919,228,3.919,229,3.919,230,5.537,231,3.919,232,3.919]],["title/classes/BaseEntity.html",[0,0.141,233,1.794]],["body/classes/BaseEntity.html",[0,0.241,2,1.071,3,0.226,4,0.184,5,0.131,8,1.685,10,0.457,11,1.267,13,2.219,16,0.513,22,0.755,25,0.01,32,1.139,39,0.395,43,0.285,55,0.006,56,0.007,57,0.006,82,1.763,102,1.9,202,1.675,233,3.218,234,4.434,235,3.316,236,1.995,237,3.316,238,3.647,239,5.527,240,3.647,241,5.527,242,2.976,243,2.495,244,2.219,245,3.636,246,4.868,247,4.11,248,3.28,249,4.434,250,4.434,251,4.868,252,3.451,253,2.9,254,4.868,255,2.601,256,4.434,257,3.451,258,2.287,259,3.017,260,2.155,261,4.868,262,4.434,263,4.868,264,4.11,265,3.636,266,4.434,267,4.434,268,2.693,269,2.81,270,4.868,271,2.693]],["title/classes/BaseEntityWithTimestamps.html",[0,0.141,248,2.103]],["body/classes/BaseEntityWithTimestamps.html",[0,0.231,2,0.975,3,0.205,4,0.168,5,0.119,8,2.001,10,0.416,11,1.212,13,2.02,16,0.57,22,0.892,25,0.01,30,2.8,32,1.155,39,0.372,43,0.268,55,0.005,56,0.007,57,0.005,82,1.854,102,2.087,202,1.617,233,3.304,234,4.036,235,3.406,236,2.049,237,3.321,238,3.652,240,3.652,242,3.017,243,2.349,244,2.02,245,3.309,246,4.431,247,3.741,248,3.436,249,4.036,250,4.036,251,4.431,252,3.141,253,2.64,254,4.431,255,2.368,256,4.036,257,3.141,258,2.082,259,2.746,260,1.961,261,4.431,262,4.036,263,4.431,264,3.741,265,3.309,266,4.036,267,4.036,268,3.558,269,2.955,270,4.431,271,3.558,272,5.03,273,1.675,274,2.349,275,5.03,276,5.03,277,2.746,278,2.289,279,5.03,280,2.368,281,2.368]],["title/classes/BusinessError.html",[0,0.141,9,2.791]],["body/classes/BusinessError.html",[0,0.238,2,0.905,3,0.191,4,0.155,5,0.11,8,2.146,9,4.395,10,0.386,11,1.037,12,3.709,13,3.401,14,4.229,15,3.117,16,0.64,17,1.594,18,6.028,19,1.856,22,0.873,24,0.976,25,0.01,26,0.755,27,0.716,29,2.365,32,1.228,37,1.192,38,3.842,39,0.399,40,5.588,41,1.001,43,0.255,45,2.584,49,2.912,50,5.236,55,0.005,56,0.007,57,0.005,61,1.54,65,3.662,81,1.026,82,1.078,273,1.192,282,3.746,283,3.842,284,4.352,285,3.842,286,4.108,287,3.555,288,3.555,289,4.108,290,2.842,291,5.233,292,4.669,293,4.943,294,6.245,295,4.669,296,4.669,297,4.669,298,4.669,299,4.112,300,4.112,301,3.746,302,5.501,303,4.112,304,3.9,305,5.501,306,4.112,307,4.904,308,2.915,309,3.472,310,4.112,311,4.112,312,4.112]],["title/modules/CoreModule.html",[106,1.328,313,3.114]],["body/modules/CoreModule.html",[0,0.171,3,0.221,4,0.181,5,0.128,25,0.01,39,0.465,41,1.162,43,0.221,49,2.849,55,0.006,56,0.007,57,0.006,61,1.789,106,2.441,108,2.177,109,2.467,110,2.96,111,2.96,112,2.74,113,2.467,114,2.552,121,3.759,122,2.845,123,2.467,125,3.92,290,3.133,313,6.189,314,4.776,315,4.776,316,5.85,317,5.85,318,5.242,319,5.85,320,5.422,321,4.529,322,6.885,323,4.299,324,5.524,325,6.064,326,6.885,327,4.529,328,5.12,329,4.529,330,6.885,331,4.098,332,5.524,333,6.064,334,6.885,335,5.12,336,5.422,337,5.422,338,5.422,339,5.422]],["title/classes/Course.html",[0,0.141,340,1.794]],["body/classes/Course.html",[0,0.154,2,0.942,3,0.198,4,0.162,5,0.115,8,1.956,10,0.401,11,1.065,16,0.629,19,1.444,22,0.934,24,1.016,25,0.01,26,1.235,27,0.745,30,3.479,32,1.216,39,0.407,43,0.198,45,2.011,55,0.005,56,0.007,57,0.005,82,1.763,102,2.125,202,1.341,215,1.603,217,3.386,233,2.575,235,3.159,236,1.901,237,2.654,238,2.919,240,2.919,242,3.178,243,1.74,244,1.951,248,3.912,268,3.125,269,2.361,271,3.125,273,1.832,274,2.57,277,2.653,278,2.211,280,2.287,281,2.287,340,2.575,341,4.28,342,7.179,343,5.338,344,5.649,345,4.956,346,4.859,347,4.859,348,4.859,349,6.413,350,4.859,351,6.413,352,3.498,353,4.859,354,2.766,355,2.766,356,2.766,357,2.766,358,2.766,359,5.649,360,2.766,361,3.034,362,3.034,363,2.653]],["title/classes/CourseInfo.html",[0,0.141,364,2.544]],["body/classes/CourseInfo.html",[0,0.181,2,1.11,3,0.234,4,0.191,5,0.135,8,2.173,10,0.473,11,1.183,16,0.627,19,1.702,22,0.88,24,1.197,25,0.01,26,1.35,27,0.878,30,3.041,32,1.211,39,0.404,43,0.234,45,2.37,55,0.006,56,0.008,57,0.006,102,1.931,202,1.489,215,1.889,233,3.352,235,2.949,236,1.774,237,2.37,238,2.606,240,2.606,242,3.024,243,2.05,244,2.299,280,2.695,281,2.695,360,3.26,361,3.576,364,4.057,365,6.832,366,3.99,367,4.057,368,4.45,369,5.299,370,3.005,371,4.594,372,4.594]],["title/classes/CourseNews.html",[0,0.141,373,2.66]],["body/classes/CourseNews.html",[0,0.182,2,0.514,3,0.108,4,0.208,5,0.063,8,1.902,10,0.219,11,0.687,15,2.504,16,0.622,17,1.056,22,0.93,24,0.554,25,0.01,26,0.823,27,1.126,30,3.651,32,1.232,37,0.676,39,0.391,43,0.255,45,1.097,55,0.003,56,0.004,57,0.003,81,0.582,82,1.595,102,2.121,155,0.829,193,2.581,194,3.042,195,3.222,197,2.572,202,1.304,215,0.874,216,1.247,219,1.743,233,2.505,235,2.956,236,1.869,237,2.38,238,2.617,240,2.617,242,3.195,243,0.949,244,1.064,248,3.111,255,2.395,260,1.984,268,2.803,269,2.542,271,2.803,273,1.592,274,2.233,277,2.259,278,1.883,280,1.247,281,1.247,283,2.259,304,1.655,340,1.064,352,3.04,354,1.509,355,1.509,356,1.509,357,1.509,358,3.274,362,1.655,363,2.779,364,2.897,367,1.509,370,2.671,373,2.463,374,1.743,375,3.263,376,3.216,377,2.912,378,3.406,379,2.803,380,4.008,381,2.654,382,3.783,383,3.591,384,2.572,385,3.077,386,4.275,387,2.65,388,2.126,389,2.722,390,3.178,391,2.722,392,2.126,393,2.126,394,2.883,395,3.783,396,2.883,397,2.722,398,2.091,399,2.584,400,2.883,401,2.126,402,2.126,403,3.14,404,2.091,405,2.126,406,2.779,407,3.03,408,2.126,409,2.126,410,2.126,411,2.584,412,2.126,413,2.584,414,2.126,415,2.883,416,2.126,417,2.126,418,2.126,419,2.126,420,2.126,421,2.126,422,2.126,423,2.883,424,3.895,425,2.126,426,3.783,427,1.847,428,2.355,429,1.447,430,0.597,431,1.847,432,1.447,433,1.847,434,1.847,435,1.847,436,1.847,437,1.847,438,1.847,439,1.847,440,1.847,441,2.883,442,2.572,443,2.572,444,2.48,445,2.48,446,2.48,447,3.178,448,2.779,449,1.847,450,2.883,451,1.847,452,1.847,453,3.546,454,1.577,455,1.577]],["title/classes/CreateNewsParams.html",[0,0.141,456,2.94]],["body/classes/CreateNewsParams.html",[0,0.202,2,0.934,3,0.197,4,0.16,5,0.114,10,0.398,11,1.059,15,2.998,16,0.583,22,0.858,25,0.01,32,1.257,39,0.405,43,0.197,55,0.005,56,0.007,57,0.005,61,2.779,74,1.508,102,1.97,103,4.267,105,2.122,194,3.149,196,4.07,201,3.002,202,1.813,216,3.365,236,1.588,269,2.348,375,3.215,376,3.149,377,3.486,379,3.484,456,4.196,457,6.524,458,3.583,459,3.347,460,4.743,461,3.631,462,6.377,463,4.244,464,4.818,465,5.117,466,3.796,467,5.117,468,4.743,469,4.818,470,4.818,471,4.444,472,4.444,473,4.751,474,4.818,475,4.818,476,4.981,477,5.117,478,3.631,479,4.818,480,4.818,481,5.617,482,6.35,483,2.868,484,3.358,485,3.866,486,3.17]],["title/injectables/DurationLoggingInterceptor.html",[143,1.058,487,3.585]],["body/injectables/DurationLoggingInterceptor.html",[0,0.175,3,0.226,4,0.184,5,0.131,10,0.457,11,1.159,12,3.26,16,0.408,17,1.781,22,0.756,24,1.157,25,0.01,26,0.896,27,0.849,37,1.414,39,0.454,41,1.187,43,0.226,55,0.006,56,0.007,57,0.006,61,1.827,74,1.733,81,1.217,82,1.612,143,1.652,144,2.292,164,3.365,273,1.414,274,1.982,329,4.59,444,3.723,487,5.598,488,6.729,489,4.877,490,5.189,491,6.977,492,5.598,493,5.189,494,4.052,495,6.146,496,6.146,497,6.434,498,7.064,499,5.537,500,2.798,501,6.729,502,6.977,503,5.537,504,6.146,505,4.443,506,5.537,507,4.877,508,4.118,509,3.859,510,5.537,511,3.859,512,6.977,513,5.537,514,5.537,515,5.537]],["title/modules/ErrorModule.html",[106,1.328,316,3.114]],["body/modules/ErrorModule.html",[0,0.198,3,0.255,4,0.208,5,0.148,25,0.01,39,0.457,41,1.34,43,0.255,55,0.007,56,0.008,57,0.007,61,2.063,106,2.234,108,2.511,113,2.846,213,4.696,273,1.919,316,5.24,331,4.476,335,6.222,516,6.253,517,6.623,518,4.476,519,4.476,520,4.105,521,4.113,522,5.24,523,6.253,524,6.253,525,3.722,526,5.017]],["title/classes/ErrorResponse.html",[0,0.141,38,2.44]],["body/classes/ErrorResponse.html",[0,0.18,2,1.105,3,0.233,4,0.19,5,0.135,12,3.459,13,3.255,14,4.063,15,2.933,16,0.614,19,2.112,22,0.618,24,1.192,25,0.01,26,0.922,27,0.874,29,2.933,32,1.312,38,3.88,39,0.323,40,4.241,41,1.222,43,0.233,49,3.204,55,0.006,56,0.008,57,0.006,61,2.345,62,5.094,63,4.231,64,4.676,65,3.464,301,4.576,527,5.024,528,5.703,529,5.703,530,5.703,531,4.576,532,4.953,533,5.703,534,5.024,535,5.703,536,3.562,537,2.512,538,3.562,539,3.752,540,4.241]],["title/injectables/FeathersAuthProvider.html",[143,1.058,180,2.791]],["body/injectables/FeathersAuthProvider.html",[0,0.123,3,0.159,4,0.129,5,0.092,10,0.321,16,0.561,17,1.404,19,1.154,22,0.825,24,1.592,25,0.01,26,1.232,27,1.168,32,1.094,37,1.872,39,0.415,41,0.832,43,0.159,55,0.004,56,0.006,57,0.004,74,2.582,81,1.673,82,0.897,98,1.827,143,1.302,144,1.606,146,3.457,155,2.504,156,3.414,164,2.813,165,3.848,171,2.887,172,2.311,180,3.434,193,3.674,194,3.355,195,3.816,196,3.955,197,3.705,203,4.109,204,3.832,215,1.281,217,2.705,233,2.208,235,1.606,237,2.643,243,1.39,245,2.554,381,1.559,404,3.51,430,0.875,541,6.897,542,3.114,543,5.499,544,5.625,545,5.499,546,5.499,547,5.625,548,3.882,549,4.533,550,3.882,551,5.499,552,3.882,553,3.419,554,3.882,555,5.499,556,3.882,557,5.499,558,3.882,559,3.882,560,3.882,561,4.844,562,3.882,563,3.419,564,5.499,565,2.037,566,3.419,567,5.499,568,3.882,569,3.882,570,3.882,571,3.006,572,3.882,573,5.499,574,5.499,575,3.832,576,5.499,577,3.882,578,2.887,579,3.882,580,3.882,581,1.961,582,3.882,583,2.424,584,4.412,585,3.419,586,3.882,587,3.882,588,3.882]],["title/interfaces/FeathersError.html",[430,1.007,589,3.114]],["body/interfaces/FeathersError.html",[3,0.262,4,0.213,5,0.151,8,2.327,10,0.529,11,1.267,13,3.387,16,0.65,25,0.009,29,3.086,32,1.304,43,0.262,49,3.157,55,0.007,56,0.008,57,0.007,430,1.444,589,5.317,590,2.573,591,5.643,592,5.643,593,7.429]],["title/modules/FeathersModule.html",[106,1.328,178,2.94]],["body/modules/FeathersModule.html",[0,0.182,3,0.235,4,0.192,5,0.136,25,0.01,39,0.405,41,1.235,43,0.235,55,0.006,56,0.008,57,0.006,61,1.901,93,3.255,106,2.485,108,3.123,109,2.622,110,3.145,111,3.145,112,2.911,113,3.54,114,3.661,121,3.905,122,3.023,123,2.622,178,5.686,184,3.791,549,5.33,563,5.074,571,3.366,594,5.074,595,5.074,596,5.074,597,5.761,598,4.705,599,3.905,600,4.072,601,3.905,602,4.257,603,4.705,604,4.705,605,4.705,606,4.705,607,5.738,608,3.485]],["title/interfaces/FeathersService.html",[430,1.007,609,3.323]],["body/interfaces/FeathersService.html",[0,0.152,3,0.197,4,0.16,5,0.114,10,0.398,16,0.56,17,1.628,22,0.691,24,1.333,25,0.01,26,1.031,27,0.978,32,0.719,37,1.628,39,0.448,41,1.033,43,0.311,55,0.005,56,0.007,57,0.005,74,1.508,81,1.059,93,3.602,108,1.935,143,1.51,156,3.149,164,2.122,184,2.348,193,3.149,215,1.59,218,4.07,236,1.588,290,2.193,430,1.086,442,3.222,443,3.222,444,3.108,445,3.108,446,3.108,447,3.983,521,3.17,549,2.868,571,3.827,590,1.935,598,3.17,599,3.903,600,4.07,601,2.631,602,2.868,603,3.17,604,3.17,605,3.17,606,3.17,607,3.866,608,2.348,609,5.658,610,5.316,611,3.358,612,3.484,613,5.617,614,6.655,615,4.818,616,4.841,617,4.196,618,5.617,619,4.818,620,3.482,621,3.583,622,3.009,623,3.866,624,5.117,625,5.617,626,4.196,627,5.617,628,5.117,629,3.866,630,3.583,631,4.244,632,4.244,633,4.244,634,4.244,635,4.244]],["title/injectables/FeathersServiceProvider.html",[143,1.058,549,2.66]],["body/injectables/FeathersServiceProvider.html",[0,0.15,3,0.193,4,0.158,5,0.112,10,0.391,16,0.557,17,1.61,19,1.408,22,0.684,24,1.318,25,0.01,26,1.02,27,0.967,32,1.058,37,1.21,39,0.446,41,1.016,43,0.309,55,0.005,56,0.007,57,0.005,61,1.563,74,1.483,81,1.041,93,3.866,108,2.533,143,1.494,144,1.961,156,2.61,164,2.087,184,3.074,193,2.61,215,1.563,218,4.036,236,1.18,290,2.156,430,1.068,442,3.187,443,3.187,444,3.074,445,3.074,446,3.074,447,3.939,521,3.117,549,3.754,571,3.949,598,4.149,599,4.127,600,4.303,601,3.443,602,3.754,603,4.149,604,4.149,605,4.149,606,4.149,607,5.06,608,3.074,609,5.621,610,5.272,611,3.302,612,2.309,613,4.173,614,5.688,616,4.22,618,4.173,620,3.443,621,3.524,622,2.959,623,3.802,624,5.06,625,5.555,626,4.149,627,5.555,628,5.06,629,3.802,630,4.69,631,4.173,632,4.173,633,5.555,634,4.173,635,4.173,636,6.307,637,4.738,638,4.738,639,4.738,640,3.524]],["title/classes/GlobalErrorFilter.html",[0,0.141,522,3.114]],["body/classes/GlobalErrorFilter.html",[0,0.149,1,3.523,2,0.606,3,0.128,4,0.104,5,0.074,9,3.917,10,0.258,11,0.78,12,2.408,13,2.518,14,2.466,15,2.137,16,0.495,17,1.44,22,0.612,24,0.982,25,0.01,26,0.913,27,0.72,37,1.601,38,4.351,39,0.427,41,0.671,43,0.128,49,3.71,55,0.003,56,0.005,57,0.003,62,2.058,63,4.672,65,1.525,70,2.51,71,2.51,74,2.714,81,1.812,82,1.553,164,2.485,184,2.75,218,2.675,242,1.22,260,1.22,273,0.799,274,1.12,278,1.424,285,2.565,291,4.664,384,2.851,430,0.705,442,2.374,443,2.374,444,2.29,445,2.29,446,1.525,494,4.027,509,3.274,518,4.002,520,2.565,522,3.274,583,1.954,589,4.371,593,2.756,601,1.708,608,1.525,622,1.954,641,4.664,642,2.18,643,5.642,644,5.393,645,4.527,646,4.699,647,3.129,648,4.699,649,4.92,650,5.642,651,6.272,652,3.129,653,4.196,654,5.642,655,3.129,656,3.129,657,2.756,658,2.756,659,3.129,660,3.129,661,3.129,662,2.51,663,2.756,664,2.51,665,5.664,666,2.51,667,2.51,668,2.756,669,3.091,670,2.51,671,2.18,672,3.523,673,1.954,674,2.51,675,2.756,676,4.139,677,2.756,678,2.51,679,2.756,680,2.756,681,2.756,682,2.756,683,2.756,684,4.196,685,3.77,686,3.129,687,3.77,688,3.129,689,3.129,690,3.129,691,3.77,692,3.129,693,3.129,694,4.699,695,3.129,696,3.129,697,2.058,698,4.139,699,2.327,700,2.756,701,2.18,702,2.18,703,4.139,704,3.081,705,2.51,706,4.139,707,2.756,708,3.77,709,3.77,710,2.756,711,2.756,712,2.327,713,2.51,714,2.756,715,2.756,716,2.756,717,2.756,718,2.756,719,2.327,720,2.51,721,2.756,722,2.756,723,2.756,724,2.756,725,5.921,726,2.51,727,5.921,728,2.756,729,2.51,730,2.756,731,3.129,732,3.129,733,3.129,734,4.699,735,3.129,736,3.129]],["title/classes/GlobalValidationPipe.html",[0,0.141,737,3.323]],["body/classes/GlobalValidationPipe.html",[0,0.238,1,3.348,2,1.039,3,0.219,4,0.179,5,0.127,8,2.084,11,0.89,16,0.554,19,2.236,21,5.484,22,0.581,25,0.01,39,0.387,41,1.149,43,0.219,45,2.218,48,4.512,55,0.006,56,0.007,57,0.006,61,1.769,65,2.612,70,4.301,71,4.301,81,1.178,82,1.238,102,1.702,103,2.813,260,2.665,273,1.745,284,4.763,331,4.069,432,4.109,459,3.949,483,4.069,537,2.361,581,2.709,583,3.348,616,3.191,737,5.083,738,6.021,739,4.722,740,5.484,741,4.269,742,5.083,743,6.021,744,5.484,745,4.497,746,7.525,747,5.361,748,5.484,749,3.987,750,4.301,751,5.361,752,2.709,753,3.736,754,5.361,755,5.361,756,3.987,757,5.361,758,5.361,759,5.361,760,3.987,761,4.301,762,5.361,763,3.052,764,3.987,765,5.361,766,3.736,767,3.527,768,5.361,769,3.987,770,3.052,771,5.361,772,5.361]],["title/interfaces/ICreateNews.html",[430,1.007,773,2.94]],["body/interfaces/ICreateNews.html",[3,0.211,4,0.172,5,0.122,10,0.427,11,1.108,15,2.961,16,0.636,25,0.01,32,1.237,39,0.293,43,0.344,55,0.006,56,0.007,57,0.006,61,1.705,74,2.089,193,3.06,194,2.941,195,3.604,196,3.801,201,2.432,202,1.08,215,1.705,216,2.432,255,3.142,258,2.138,269,2.723,340,2.075,345,3.227,361,3.227,375,3.207,376,3.491,377,3.443,379,3.809,381,2.075,429,2.821,430,1.868,590,2.075,612,2.518,649,3.6,773,4.392,774,3.6,775,5.88,776,6.272,777,3.399,778,3.6,779,3.227,780,3.227,781,3.399,782,5.356,783,4.551,784,5.356,785,3.6,786,3.6,787,4.551,788,3.399,789,3.227,790,2.821]],["title/interfaces/ICurrentUser.html",[430,1.007,791,2.66]],["body/interfaces/ICurrentUser.html",[3,0.224,4,0.183,5,0.13,8,1.672,10,0.453,11,1.152,16,0.588,25,0.01,29,2.627,32,1.362,43,0.283,55,0.006,56,0.007,57,0.006,203,4.194,211,5.157,236,1.99,258,2.87,404,4.254,430,1.563,590,2.202,791,4.527,792,4.4,793,4.4,794,7.039,795,5.569,796,5.564,797,4.597,798,5.157,799,4.562,800,3.425,801,4.078,802,4.831,803,4.831,804,4.831,805,4.831,806,4.4,807,4.831,808,4.831,809,3.822]],["title/interfaces/IErrorType.html",[293,2.94,430,1.007]],["body/interfaces/IErrorType.html",[3,0.262,4,0.214,5,0.152,10,0.53,11,1.269,12,3.481,15,3.197,16,0.651,25,0.009,32,1.337,43,0.262,50,5.882,55,0.007,56,0.008,57,0.007,293,5.026,430,1.447,590,2.578,810,5.656,811,5.656]],["title/interfaces/ILogger.html",[430,1.007,812,3.323]],["body/interfaces/ILogger.html",[3,0.22,4,0.18,5,0.127,10,0.445,14,4.303,16,0.604,17,1.751,22,0.889,24,1.714,25,0.01,26,1.326,27,1.335,32,1.351,37,2.093,43,0.22,49,2.839,55,0.006,56,0.007,57,0.006,430,1.215,500,4.538,590,2.165,617,5.515,812,5.102,813,4.749,814,6.042,815,4.513,816,6.86,817,6.86,818,5.391,819,5.391,820,6.042,821,6.054,822,5.391,823,6.042,824,5.391,825,5.391,826,5.391,827,6.042,828,5.391,829,4.749,830,4.749]],["title/interfaces/INewsProperties.html",[424,2.791,430,1.007]],["body/interfaces/INewsProperties.html",[0,0.213,3,0.148,4,0.248,5,0.086,8,2.054,10,0.3,11,0.87,15,2.819,16,0.598,25,0.01,26,0.586,27,1.205,32,1.286,39,0.435,43,0.292,45,1.5,55,0.004,56,0.006,57,0.004,81,0.797,82,1.42,155,1.135,193,3.474,194,2.966,195,2.996,197,1.832,202,1.493,215,1.196,216,1.706,219,2.385,233,2.103,236,0.903,242,3.063,243,1.298,244,1.456,248,2.465,255,2.894,260,2.397,269,2.479,283,2.859,304,2.264,340,1.456,352,2.996,358,2.982,362,2.264,363,3.357,364,2.982,367,2.064,370,1.902,373,2.158,374,2.385,375,3.137,376,3.363,377,3.279,378,4.064,379,3.481,380,4.977,381,3.081,382,4.699,383,4.46,384,1.832,386,4.473,389,2.385,391,2.385,394,2.526,395,3.445,396,2.526,397,2.385,398,1.832,399,2.264,400,2.526,403,3.357,404,1.832,406,3.677,407,4.009,411,2.264,413,2.264,415,2.526,423,2.526,424,4.205,426,4.43,427,2.526,428,2.982,429,1.979,430,0.817,431,2.526,432,1.979,433,2.526,434,2.526,435,2.526,436,2.526,437,2.526,438,2.526,439,2.526,440,2.526,441,3.65,442,3.107,443,3.107,444,2.996,445,2.996,446,2.996,447,3.84,448,3.357,449,2.526,450,3.65,451,2.526,452,2.526,453,4.284,454,2.158,455,2.158,590,1.456]],["title/interfaces/INewsScope.html",[430,1.007,788,2.94]],["body/interfaces/INewsScope.html",[3,0.215,4,0.175,5,0.124,10,0.435,11,1.122,15,1.993,16,0.624,25,0.01,27,1.207,32,1.008,39,0.298,43,0.346,55,0.006,56,0.007,57,0.006,61,1.736,74,2.114,193,3.087,194,2.975,195,3.635,196,3.846,201,2.477,202,1.1,215,1.736,216,2.477,255,3.179,258,2.178,269,1.937,340,2.113,345,3.286,361,3.286,375,3.217,376,3.505,377,2.318,379,2.564,381,2.113,429,2.873,430,1.877,590,2.113,612,2.564,649,3.667,773,3.462,774,3.667,775,4.635,776,5.419,777,3.462,778,3.667,779,3.286,780,3.286,781,3.462,782,5.419,783,4.635,784,6.315,785,3.667,786,3.667,787,5.949,788,4.444,789,4.915,790,4.073]],["title/interfaces/IPagination.html",[430,1.007,831,3.323]],["body/interfaces/IPagination.html",[3,0.268,4,0.218,5,0.155,10,0.541,11,1.284,16,0.569,25,0.009,27,1.303,29,3.328,43,0.268,55,0.007,56,0.008,57,0.007,430,1.477,590,2.632,831,5.751,832,5.773,833,5.306,834,5.306]],["title/classes/ITaskMetadata.html",[0,0.141,835,2.94]],["body/classes/ITaskMetadata.html",[0,0.202,2,0.939,3,0.198,4,0.161,5,0.114,8,2.185,10,0.4,11,1.063,16,0.621,19,1.439,22,0.934,25,0.01,26,1.233,30,3.476,32,1.273,39,0.432,43,0.261,45,2.004,55,0.005,56,0.007,57,0.005,82,1.478,102,2.027,164,2.133,202,1.338,215,1.598,233,2.569,235,3.155,236,1.898,237,2.648,238,2.912,240,2.912,242,3.091,243,1.734,244,1.945,248,3.968,268,3.118,269,2.918,271,3.118,273,1.633,274,2.291,277,2.644,278,2.204,280,2.279,281,2.279,340,2.878,354,2.757,355,2.757,356,2.757,357,2.757,360,2.757,363,3.494,386,4.08,790,2.644,835,4.21,836,3.885,837,5.33,838,5.33,839,5.67,840,4.843,841,4.843,842,4.843,843,4.843,844,3.885,845,4.266,846,4.265,847,3.885,848,2.447,849,3.885,850,4.265]],["title/modules/InterceptorModule.html",[106,1.328,317,3.114]],["body/modules/InterceptorModule.html",[0,0.186,3,0.241,4,0.196,5,0.139,25,0.01,39,0.445,41,1.263,43,0.241,55,0.006,56,0.008,57,0.006,61,1.944,106,2.155,108,2.366,113,2.681,257,4.529,317,5.053,331,4.317,332,6.303,490,5.393,521,3.876,525,4.317,526,5.818,608,3.995,741,4.529,752,3.664,851,5.892,852,6.388,853,5.393,854,5.393,855,4.771,856,8.198,857,4.129,858,5.393,859,5.818,860,6.097,861,5.892]],["title/injectables/JwtAuthGuard.html",[143,1.058,862,3.323]],["body/injectables/JwtAuthGuard.html",[0,0.213,3,0.275,4,0.224,5,0.159,8,2.055,25,0.01,39,0.445,41,1.444,43,0.275,55,0.007,56,0.008,57,0.007,127,5.012,143,1.862,144,2.789,862,5.846,863,5.936,864,5.936,865,6.74,866,6.74]],["title/interfaces/JwtConstants.html",[130,2.94,430,1.007]],["body/interfaces/JwtConstants.html",[3,0.248,4,0.202,5,0.144,10,0.502,11,1.228,16,0.61,25,0.01,32,1.326,39,0.344,43,0.302,55,0.007,56,0.008,57,0.007,74,2.314,130,5.452,138,5.918,141,4.878,368,4.617,430,1.37,590,2.441,801,4.521,806,4.878,867,4.878,868,7.481,869,6.512,870,6.08,871,6.08,872,4.878,873,6.08,874,6.08,875,5.355,876,5.355]],["title/interfaces/JwtPayload.html",[430,1.007,800,2.791]],["body/interfaces/JwtPayload.html",[3,0.22,4,0.179,5,0.127,8,2.089,10,0.445,11,1.138,16,0.617,25,0.01,29,3.173,32,1.353,43,0.28,55,0.006,56,0.007,57,0.006,203,2.824,211,4.002,236,1.706,258,3.284,404,3.462,430,1.544,590,2.161,791,4.488,792,4.317,793,4.317,794,4.74,795,3.75,796,4.317,797,4.116,798,4.002,799,3.54,800,4.279,801,5.095,802,6.99,803,6.035,804,6.99,805,6.99,806,5.497,807,6.99,808,6.99,809,5.53]],["title/injectables/JwtStrategy.html",[120,3.114,143,1.058]],["body/injectables/JwtStrategy.html",[0,0.182,3,0.235,4,0.191,5,0.136,8,1.753,10,0.475,16,0.423,17,1.823,19,2.309,22,0.774,24,1.202,25,0.01,26,0.93,27,0.881,37,1.468,39,0.474,41,1.232,43,0.235,45,2.379,55,0.006,56,0.008,57,0.006,81,1.263,120,4.978,127,4.276,130,3.782,131,5.064,139,4.613,143,1.692,144,2.379,146,3.12,155,1.799,168,4.613,258,2.956,259,3.9,583,3.59,800,5.076,854,5.312,877,5.064,878,5.749,879,7.143,880,5.749,881,5.112,882,5.749,883,5.064,884,4.978,885,5.749,886,5.749,887,5.749,888,5.749,889,5.749,890,5.749,891,5.749,892,5.749,893,5.749,894,5.749,895,5.749]],["title/classes/Lesson.html",[0,0.141,845,2.66]],["body/classes/Lesson.html",[0,0.163,2,1,3,0.211,4,0.172,5,0.122,8,2.033,10,0.426,11,1.107,16,0.61,22,0.926,25,0.01,30,3.536,32,0.995,39,0.443,43,0.211,55,0.006,56,0.007,57,0.006,82,1.54,102,2.127,202,1.394,215,1.702,217,3.594,233,2.677,235,3.233,236,1.945,237,2.759,238,3.035,240,3.035,242,3.045,243,1.846,244,2.071,248,3.968,268,3.249,269,2.455,271,3.249,273,1.702,274,2.387,277,2.816,278,2.347,280,2.427,281,2.427,340,3.327,352,2.513,354,2.936,355,2.936,356,2.936,357,2.936,358,2.936,359,4.543,360,2.936,363,2.816,386,3.796,390,3.221,790,3.64,844,4.138,845,3.969,849,5.35,896,4.543,897,5.495,898,5.157,899,5.157,900,4.543]],["title/injectables/Logger.html",[143,1.058,494,2.258]],["body/injectables/Logger.html",[0,0.183,3,0.236,4,0.193,5,0.137,8,2.186,17,1.476,25,0.01,39,0.406,41,1.24,43,0.236,55,0.006,56,0.008,57,0.006,143,1.698,144,2.394,213,3.612,218,4.082,260,2.255,273,1.476,290,2.632,494,4.312,500,3.937,509,4.996,538,3.612,571,2.722,603,3.805,620,3.915,745,3.805,749,4.301,752,3.623,812,6.058,815,5.126,901,5.095,902,8.146,903,5.784,904,5.784,905,3.293,906,4.031,907,4.031,908,5.095,909,4.641,910,5.784,911,3.612,912,3.805,913,6.315,914,3.293,915,4.641,916,5.784,917,5.784,918,5.095,919,4.301,920,5.095,921,4.031,922,5.784,923,5.784,924,5.784]],["title/modules/LoggerModule.html",[106,1.328,318,2.791]],["body/modules/LoggerModule.html",[0,0.197,3,0.255,4,0.208,5,0.147,25,0.01,39,0.425,41,1.337,43,0.255,55,0.007,56,0.008,57,0.007,106,2.394,108,2.505,109,2.839,110,3.406,111,3.406,112,3.153,113,3.666,114,3.792,121,4.1,122,3.274,123,2.839,318,5.487,494,4.57,925,5.495,926,5.495,927,5.495,928,6.239,929,6.239]],["title/injectables/MongoMemoryDatabaseProvider.html",[143,1.058,930,3.585]],["body/injectables/MongoMemoryDatabaseProvider.html",[0,0.162,3,0.209,4,0.171,5,0.121,10,0.423,16,0.489,17,1.694,19,1.522,22,0.844,24,1.387,25,0.01,26,1.073,27,1.018,32,1.099,37,1.88,39,0.417,41,1.097,43,0.209,55,0.005,56,0.007,57,0.005,74,1.603,81,1.125,82,1.183,98,2.41,143,1.572,144,2.119,146,3.462,156,3.422,165,3.864,258,2.119,494,4.253,508,3.808,617,3.369,704,2.796,790,4.02,905,2.915,911,3.198,930,5.325,931,7.109,932,6.514,933,7.109,934,4.51,935,6.862,936,6.637,937,7.79,938,5.12,939,7.79,940,5.12,941,5.846,942,5.12,943,6.637,944,5.12,945,5.12,946,5.12,947,3.369,948,4.51,949,5.12,950,6.862,951,5.12,952,5.12,953,3.808,954,5.12,955,5.12]],["title/classes/News.html",[0,0.141,375,1.645]],["body/classes/News.html",[0,0.192,2,0.567,3,0.119,4,0.217,5,0.069,8,1.99,10,0.242,11,0.741,15,2.605,16,0.618,17,1.139,19,0.869,22,0.92,24,0.933,25,0.01,26,0.98,27,1.183,30,2.936,32,1.235,37,0.746,39,0.405,43,0.266,45,1.21,55,0.003,56,0.005,57,0.003,81,0.643,82,1.507,102,2.076,155,0.915,193,2.7,194,3.152,195,3.352,197,2.736,202,1.364,215,0.965,216,1.376,219,1.924,233,2.62,235,2.507,236,1.712,237,1.847,238,2.031,240,2.031,242,3.227,243,1.047,244,1.174,248,3.368,255,2.548,260,2.111,268,2.175,269,2.402,271,2.175,273,1.382,274,1.938,277,1.596,278,1.331,280,1.376,281,1.376,283,2.437,304,1.826,340,1.174,352,3.18,354,1.665,355,1.665,356,1.665,357,1.665,358,3.45,362,1.826,363,2.956,364,2.541,367,2.541,370,3.179,373,1.741,374,1.924,375,3.139,376,3.192,377,3.03,378,3.563,379,2.953,380,4.222,381,2.762,382,3.986,383,3.784,384,2.736,385,3.32,386,4.304,389,2.937,390,3.381,391,2.937,394,3.111,395,3.986,396,3.111,397,2.937,398,2.256,399,2.788,400,3.111,403,3.308,404,2.256,406,2.956,407,3.223,411,2.788,413,2.788,415,3.111,423,3.111,424,4.468,426,3.986,427,2.038,428,2.541,429,1.596,430,0.659,431,2.038,432,1.596,433,2.038,434,2.038,435,2.038,436,2.038,437,2.038,438,2.038,439,2.038,440,2.038,441,3.111,442,2.736,443,2.736,444,2.638,445,2.638,446,2.638,447,3.381,448,2.956,449,2.038,450,3.111,451,2.038,452,2.038,453,3.773,454,1.741,455,1.741,956,4.464,957,2.924,958,2.924,959,2.924,960,2.924,961,2.924,962,2.924,963,2.924,964,2.924,965,2.924,966,2.924,967,2.924,968,2.924]],["title/controllers/NewsController.html",[85,2.103,969,3.323]],["body/controllers/NewsController.html",[0,0.113,3,0.146,4,0.119,5,0.084,10,0.295,12,1.524,16,0.523,17,1.322,22,0.769,24,1.484,25,0.01,26,1.148,27,1.089,32,1.19,37,1.812,39,0.459,41,0.765,43,0.146,55,0.004,56,0.006,57,0.004,74,2.496,81,1.56,82,0.825,85,1.681,87,1.804,89,2.656,91,4.248,94,4.248,98,1.681,102,1.768,105,1.573,146,3.413,155,2.093,156,3.352,165,3.726,201,2.438,202,1.083,218,2.949,236,1.29,375,2.982,381,2.08,398,2.618,456,4.399,459,4.008,581,3.08,598,2.349,616,4.408,620,3.328,704,2.828,740,2.865,791,5.091,881,2.349,969,3.852,970,3.145,971,4.973,972,4.891,973,5.369,974,4.533,975,3.571,976,3.571,977,5.685,978,3.571,979,5.18,980,3.571,981,7.405,982,3.145,983,4.66,984,4.399,985,4.66,986,3.571,987,3.571,988,5.18,989,3.571,990,4.563,991,5.18,992,4.399,993,5.18,994,3.408,995,4.563,996,3.571,997,4.66,998,5.18,999,3.571,1000,3.145,1001,3.145,1002,4.947,1003,3.571,1004,3.571,1005,2.656,1006,3.571,1007,4.01,1008,3.145,1009,2.489,1010,2.865,1011,2.656,1012,2.489,1013,2.656,1014,3.571,1015,3.571,1016,2.865,1017,3.571,1018,3.145,1019,3.145,1020,6.254,1021,3.145,1022,3.145,1023,5.89,1024,2.865,1025,4.563,1026,3.571,1027,3.571,1028,3.571,1029,3.571,1030,3.571,1031,2.656,1032,2.865,1033,3.571,1034,6.096,1035,3.571,1036,3.571,1037,3.571,1038,5.18,1039,3.571]],["title/classes/NewsFilterQuery.html",[0,0.141,983,3.114]],["body/classes/NewsFilterQuery.html",[0,0.211,2,1.003,3,0.211,4,0.172,5,0.122,10,0.428,11,1.11,16,0.545,22,0.802,25,0.01,27,1.272,32,1.167,39,0.443,43,0.211,55,0.006,56,0.007,57,0.006,61,2.672,74,1.62,102,1.843,105,2.28,194,3.567,196,4.214,201,3.146,202,1.082,216,3.484,236,1.664,375,3.053,376,3.237,471,4.657,472,4.657,473,4.885,476,5.158,477,5.362,478,3.805,482,5.362,483,3.081,484,3.607,485,4.153,486,3.405,789,4.622,790,3.649,983,4.657,1040,6.276,1041,4.153,1042,5.176,1043,5.362,1044,6.683,1045,5.176,1046,5.176,1047,5.176,1048,5.176,1049,5.887,1050,6.683,1051,4.97,1052,5.176,1053,5.817,1054,6.683,1055,5.176,1056,6.683,1057,6.276,1058,5.362,1059,5.176,1060,5.176]],["title/classes/NewsMapper.html",[0,0.141,1013,3.323]],["body/classes/NewsMapper.html",[0,0.139,2,0.851,3,0.179,4,0.146,5,0.104,10,0.363,15,2.269,16,0.539,17,1.529,22,0.794,24,1.531,25,0.01,26,1.185,27,1.123,37,1.87,39,0.415,43,0.179,55,0.005,56,0.006,57,0.005,74,2.293,81,1.61,82,1.014,155,1.374,194,2.639,195,3.323,196,3.41,202,0.917,375,2.823,376,1.816,377,2.639,379,2.919,381,1.762,384,4.348,456,4.819,459,4.327,581,3.026,616,3.565,773,4.486,786,4.752,788,4.819,789,2.741,983,5.105,997,5.105,1012,5.105,1013,4.454,1061,3.866,1062,5.99,1063,5.99,1064,4.805,1065,5.99,1066,5.99,1067,4.389,1068,5.99,1069,4.389,1070,5.99,1071,4.389,1072,5.99,1073,4.389,1074,3.264,1075,3.264,1076,5.99,1077,3.264,1078,3.521,1079,3.866,1080,4.389,1081,4.389,1082,4.389,1083,4.389,1084,4.389,1085,3.866,1086,4.389,1087,4.389,1088,4.389,1089,4.389,1090,4.389,1091,4.389,1092,4.389,1093,3.866,1094,4.389,1095,4.389,1096,4.389,1097,4.389,1098,4.389,1099,4.389,1100,4.389,1101,4.389,1102,4.389,1103,4.389,1104,4.389,1105,4.389,1106,3.866,1107,5.99,1108,4.389,1109,4.389,1110,4.389,1111,4.389,1112,5.99,1113,5.99,1114,5.99,1115,4.389,1116,4.389]],["title/modules/NewsModule.html",[106,1.328,1117,3.114]],["body/modules/NewsModule.html",[0,0.177,3,0.229,4,0.187,5,0.133,25,0.01,39,0.48,41,1.203,43,0.229,55,0.006,56,0.008,57,0.006,87,3.556,106,2.284,108,2.254,109,2.555,110,3.065,111,3.065,112,2.837,113,3.499,114,3.618,121,3.842,122,2.946,123,2.555,125,4.007,173,5.572,318,5.289,969,5.717,1007,5.871,1008,4.945,1117,6.244,1118,4.945,1119,5.614,1120,4.945,1121,4.945,1122,5.572,1123,5.614,1124,4.945,1125,5.614,1126,5.614,1127,4.945]],["title/injectables/NewsRepo.html",[143,1.058,1122,2.94]],["body/injectables/NewsRepo.html",[0,0.127,3,0.164,4,0.134,5,0.095,10,0.332,12,1.717,16,0.567,17,1.44,19,1.196,22,0.835,24,1.61,25,0.01,26,1.246,27,1.181,37,1.897,39,0.457,41,0.862,43,0.164,55,0.004,56,0.006,57,0.004,74,2.326,81,1.551,82,0.93,98,1.894,143,1.336,144,1.665,146,3.475,156,3.44,164,2.869,165,4.043,193,2.921,202,0.841,215,1.328,218,3.708,236,1.404,243,1.441,245,2.647,273,1.027,274,1.441,375,3.23,376,1.665,378,3.08,381,2.834,383,3.522,461,3.211,519,2.395,578,4.843,581,2.85,612,2.749,620,3.08,789,4.408,790,3.556,971,4.195,972,5.225,984,5.397,994,3.711,995,4.968,1024,4.526,1025,4.968,1122,3.711,1128,3.544,1129,5.641,1130,5.641,1131,4.968,1132,3.544,1133,6.217,1134,4.024,1135,4.526,1136,5.641,1137,4.024,1138,4.024,1139,4.644,1140,5.883,1141,4.024,1142,5.641,1143,4.024,1144,5.641,1145,4.024,1146,5.641,1147,4.195,1148,5.641,1149,3.931,1150,5.641,1151,4.024,1152,4.024,1153,3.228,1154,3.544,1155,4.195,1156,4.024,1157,4.024,1158,4.024,1159,5.641,1160,4.024,1161,4.024,1162,4.024,1163,4.024,1164,4.024,1165,4.024]],["title/classes/NewsResponse.html",[0,0.141,1012,3.114]],["body/classes/NewsResponse.html",[0,0.112,2,0.685,3,0.144,4,0.26,5,0.084,10,0.292,11,0.854,15,2.678,16,0.635,22,0.913,25,0.01,27,1.131,32,1.274,39,0.377,43,0.144,55,0.004,56,0.006,57,0.004,61,2.86,74,1.897,102,2.098,103,4.344,105,1.558,155,2.384,194,2.67,196,3.451,197,3.573,201,2.421,202,1.838,207,3.825,216,2.853,236,1.896,268,2.954,269,2.717,271,2.954,375,3.227,376,2.754,377,3.115,378,3.309,379,2.954,381,2.963,382,3.988,383,3.785,406,1.93,407,2.105,411,4.156,465,4.126,466,3.061,467,4.126,468,3.825,471,4.638,472,4.638,473,4.156,476,4.224,477,4.126,478,2.928,484,2.464,485,4.863,486,3.988,750,4.126,912,3.383,974,3.825,1012,3.584,1053,4.95,1166,2.629,1167,5.916,1168,3.536,1169,6.656,1170,3.536,1171,4.928,1172,3.536,1173,3.536,1174,3.536,1175,3.825,1176,3.536,1177,4.224,1178,4.53,1179,3.536,1180,5.339,1181,3.536,1182,4.863,1183,3.536,1184,5.143,1185,3.536,1186,2.837,1187,3.536,1188,3.536,1189,3.536,1190,3.536,1191,3.536,1192,4.126,1193,3.536,1194,5.143,1195,3.536,1196,3.536]],["title/classes/NewsScope.html",[0,0.141,1155,3.323]],["body/classes/NewsScope.html",[0,0.146,2,0.895,3,0.188,4,0.154,5,0.109,10,0.381,11,1.029,16,0.551,17,1.582,22,0.846,24,1.463,25,0.01,26,1.132,27,1.073,37,1.786,39,0.424,43,0.188,55,0.007,56,0.007,57,0.005,74,2.19,81,1.644,82,1.066,164,3.539,194,2.033,199,2.748,202,0.965,243,1.652,244,1.853,269,1.699,273,1.178,274,1.652,375,2.282,376,1.91,379,2.249,511,4.876,519,2.748,578,3.433,581,4.215,585,4.066,653,3.433,789,3.87,790,3.82,1139,4.92,1155,5.974,1197,6.445,1198,4.066,1199,6.997,1200,6.198,1201,6.198,1202,6.198,1203,6.198,1204,8.342,1205,4.616,1206,6.198,1207,4.616,1208,6.198,1209,4.616,1210,6.198,1211,4.616,1212,4.616,1213,4.616,1214,3.703,1215,4.616,1216,4.616,1217,3.689,1218,4.616,1219,4.616,1220,4.319,1221,4.616,1222,4.616,1223,4.616,1224,6.198,1225,3.037,1226,4.616,1227,4.616,1228,3.216,1229,4.616,1230,4.616,1231,6.198,1232,4.616,1233,4.616,1234,4.616]],["title/interfaces/NewsTargetFilter.html",[430,1.007,1139,2.94]],["body/interfaces/NewsTargetFilter.html",[3,0.263,4,0.214,5,0.152,10,0.532,11,1.27,16,0.563,25,0.01,39,0.433,43,0.263,55,0.007,56,0.008,57,0.007,193,3.495,194,3.721,195,4.116,202,1.345,215,2.124,376,2.663,430,1.45,584,6.777,590,2.584,1139,5.033,1197,5.164,1235,5.669]],["title/injectables/NewsUc.html",[143,1.058,1007,2.94]],["body/injectables/NewsUc.html",[0,0.075,3,0.097,4,0.079,5,0.056,10,0.196,16,0.547,17,0.97,19,0.707,22,0.788,24,1.52,25,0.01,26,1.176,27,1.115,32,0.708,37,1.986,39,0.39,41,0.51,43,0.097,55,0.003,56,0.004,57,0.003,61,0.785,74,2.513,81,1.598,82,0.549,98,1.119,143,0.9,144,0.984,146,3.37,155,1.695,156,3.22,164,3.428,165,4.336,171,1.769,179,4.137,193,3.612,194,3.204,195,2.639,196,3.771,197,3.88,201,1.119,202,0.497,203,4.441,215,0.785,216,1.119,218,4.43,236,1.811,269,1.746,273,0.607,274,1.698,278,2.158,370,1.993,375,3.139,376,2.612,378,1.299,379,1.851,381,0.955,384,2.397,398,3.476,399,2.372,404,2.991,442,1.202,443,1.202,444,1.159,445,1.159,478,1.354,484,1.657,494,3.347,508,1.769,519,1.416,544,3.346,553,3.346,578,4.926,584,3.048,612,1.851,616,4.222,617,2.499,620,3.756,704,2.074,763,1.354,770,1.354,773,3.563,786,3.774,788,4.358,789,3.697,790,2.589,797,2.074,831,4.027,857,2.163,912,1.565,971,2.825,974,3.527,984,3.894,1007,2.499,1024,3.048,1051,3.527,1079,2.095,1085,2.095,1093,4.77,1106,3.346,1122,4.152,1124,2.095,1139,2.499,1153,1.908,1154,2.095,1225,1.565,1236,1.908,1237,3.799,1238,3.799,1239,3.799,1240,3.799,1241,4.743,1242,2.379,1243,2.379,1244,3.799,1245,2.379,1246,3.799,1247,2.379,1248,3.799,1249,2.379,1250,3.799,1251,2.379,1252,3.799,1253,2.379,1254,2.379,1255,3.799,1256,2.379,1257,2.647,1258,2.379,1259,4.743,1260,2.379,1261,3.799,1262,2.379,1263,2.379,1264,2.379,1265,3.346,1266,4.77,1267,2.379,1268,2.095,1269,2.379,1270,5.416,1271,2.379,1272,2.379,1273,3.799,1274,2.379,1275,4.77,1276,2.379,1277,2.379,1278,2.379,1279,3.799,1280,2.379,1281,3.799,1282,2.379,1283,3.799,1284,2.379,1285,2.379,1286,1.354,1287,4.743,1288,2.379,1289,3.799,1290,2.379,1291,2.379,1292,5.416,1293,2.379,1294,2.095,1295,1.908,1296,2.379,1297,2.379,1298,2.379,1299,2.379,1300,2.095,1301,3.799,1302,2.379,1303,2.379,1304,2.379,1305,3.799,1306,2.379,1307,2.379,1308,2.379,1309,2.379,1310,2.379]],["title/interfaces/PaginationModel.html",[430,1.007,1140,3.323]],["body/interfaces/PaginationModel.html",[3,0.266,4,0.217,5,0.154,10,0.539,11,1.281,12,3.291,16,0.568,25,0.009,27,1.301,29,3.325,43,0.266,55,0.007,56,0.008,57,0.007,430,1.47,590,2.62,833,5.298,834,5.298,1140,5.735,1311,5.746]],["title/classes/PaginationQuery.html",[0,0.141,985,3.114]],["body/classes/PaginationQuery.html",[0,0.224,2,1.103,3,0.232,4,0.19,5,0.135,10,0.47,11,1.179,16,0.523,22,0.769,25,0.01,27,1.242,29,3.219,39,0.402,43,0.232,55,0.006,56,0.008,57,0.006,61,2.342,102,1.767,105,2.507,273,1.812,274,2.541,483,3.388,766,4.947,833,5.205,834,4.831,985,4.947,1053,5.753,1147,5.279,1217,4.226,1225,4.67,1312,5.014,1313,5.644,1314,5.692,1315,3.459,1316,5.279,1317,5.695,1318,5.695,1319,5.695,1320,5.692,1321,5.692,1322,5.695,1323,5.692,1324,6.814,1325,4.567,1326,5.014,1327,5.014,1328,5.014,1329,5.014]],["title/classes/PaginationResponse.html",[0,0.141,1005,3.323]],["body/classes/PaginationResponse.html",[0,0.191,2,1.171,3,0.247,4,0.201,5,0.143,10,0.499,11,1.223,16,0.585,19,1.795,22,0.861,24,1.263,25,0.01,26,0.977,27,0.926,29,3.211,39,0.342,43,0.247,55,0.006,56,0.008,57,0.006,102,1.833,103,4.449,105,2.661,649,5.908,752,4.284,1005,5.476,1330,5.321,1331,7.004,1332,7.364,1333,6.041,1334,6.041,1335,6.041,1336,6.041,1337,6.041]],["title/injectables/ParseObjectIdPipe.html",[143,1.058,1002,3.114]],["body/injectables/ParseObjectIdPipe.html",[0,0.195,3,0.251,4,0.205,5,0.146,10,0.509,16,0.453,17,1.902,22,0.667,24,1.287,25,0.01,26,0.996,27,0.944,37,1.572,39,0.422,41,1.32,43,0.251,55,0.007,56,0.008,57,0.007,74,1.927,81,1.353,82,1.423,143,1.765,144,2.548,172,3.666,237,2.548,274,2.667,509,4.291,753,5.192,781,4.051,1002,5.192,1338,6.562,1339,4.435,1340,4.941,1341,7.45,1342,6.158,1343,7.45,1344,7.45,1345,6.158,1346,3.846,1347,7.45,1348,6.158,1349,6.158]],["title/classes/SampleError.html",[0,0.141,309,3.323]],["body/classes/SampleError.html",[0,0.222,2,0.903,3,0.19,4,0.155,5,0.11,8,2.144,9,5.221,10,0.385,11,1.036,12,3.708,13,3.303,14,4.317,15,3.116,16,0.64,17,1.592,18,6.024,19,1.854,22,0.873,24,0.974,25,0.01,26,0.754,27,0.715,29,2.363,30,3.341,31,4.105,32,1.263,33,4.105,34,4.105,35,4.105,36,4.105,37,1.19,38,3.839,39,0.398,40,4.639,41,0.999,43,0.255,45,2.581,49,3.107,50,5.232,55,0.005,56,0.007,57,0.005,61,1.538,65,3.04,81,1.024,82,1.077,273,1.19,282,3.739,283,3.406,284,3.248,285,3.839,286,3.066,287,2.654,288,2.654,289,3.066,290,2.121,291,4.639,293,4.104,299,4.105,300,4.105,301,3.739,302,5.495,303,4.105,304,3.896,305,5.495,306,4.105,307,5.232,308,3.896,309,4.639,310,5.495,311,4.105,312,4.105,617,3.066,1350,4.661]],["title/classes/SchoolInfo.html",[0,0.141,403,2.44]],["body/classes/SchoolInfo.html",[0,0.181,2,1.11,3,0.234,4,0.191,5,0.135,8,2.173,10,0.473,11,1.183,16,0.627,19,1.702,22,0.88,24,1.197,25,0.01,26,1.35,27,0.878,30,3.041,32,1.211,39,0.404,43,0.234,45,2.37,55,0.006,56,0.008,57,0.006,102,1.931,202,1.489,215,1.889,233,3.352,235,2.949,236,1.774,237,2.37,238,2.606,240,2.606,242,3.024,243,2.05,244,2.299,280,2.695,281,2.695,360,3.26,366,3.99,367,4.057,368,4.45,369,5.299,370,3.005,371,4.594,372,4.594,403,3.89,777,3.767,1351,6.832]],["title/classes/SchoolInfoMapper.html",[0,0.141,1075,3.323]],["body/classes/SchoolInfoMapper.html",[0,0.195,2,1.196,3,0.252,4,0.206,5,0.146,10,0.51,16,0.454,17,1.904,22,0.669,24,1.29,25,0.01,26,0.998,27,0.946,37,1.575,39,0.423,43,0.252,55,0.007,56,0.008,57,0.007,74,1.932,81,1.356,82,1.426,202,1.29,384,4.052,403,4.656,459,3.915,1064,5.985,1074,4.59,1075,5.548,1078,4.952,1177,5.805,1352,6.571,1353,4.952,1354,7.46,1355,5.436,1356,6.172,1357,6.172,1358,6.172]],["title/classes/SchoolInfoResponse.html",[0,0.141,1177,3.114]],["body/classes/SchoolInfoResponse.html",[0,0.192,2,1.178,3,0.248,4,0.202,5,0.144,10,0.502,11,1.228,16,0.544,22,0.801,25,0.01,26,1.374,32,1.237,39,0.344,43,0.248,55,0.007,56,0.008,57,0.007,61,2.629,102,1.84,103,4.18,105,2.678,202,1.732,236,2.114,381,3.328,471,5.152,472,5.152,486,4,1167,4.521,1177,5.152,1186,4.878,1359,7.017,1360,4.878,1361,5.355,1362,5.355]],["title/classes/SchoolNews.html",[0,0.141,454,2.66]],["body/classes/SchoolNews.html",[0,0.182,2,0.514,3,0.108,4,0.208,5,0.063,8,1.902,10,0.219,11,0.687,15,2.504,16,0.622,17,1.056,22,0.93,24,0.554,25,0.01,26,0.823,27,1.126,30,3.651,32,1.232,37,0.676,39,0.391,43,0.255,45,1.097,55,0.003,56,0.004,57,0.003,81,0.582,82,1.595,102,2.121,155,0.829,193,2.581,194,3.042,195,3.222,197,2.572,202,1.304,215,0.874,216,1.247,219,1.743,233,2.505,235,2.956,236,1.869,237,2.38,238,2.617,240,2.617,242,3.195,243,0.949,244,1.064,248,3.111,255,2.395,260,1.984,268,2.803,269,2.542,271,2.803,273,1.592,274,2.233,277,2.259,278,1.883,280,1.247,281,1.247,283,2.259,304,1.655,340,1.064,352,3.04,354,1.509,355,1.509,356,1.509,357,1.509,358,3.274,362,1.655,363,2.779,364,2.355,367,1.509,370,2.671,373,1.577,374,1.743,375,3.263,376,3.216,377,2.912,378,3.406,379,2.803,380,4.008,381,2.654,382,3.783,383,3.591,384,2.572,385,3.077,386,4.275,388,2.126,389,2.722,390,3.178,391,2.722,392,2.126,393,2.126,394,2.883,395,3.783,396,2.883,397,2.722,398,2.091,399,2.584,400,2.883,401,2.126,402,2.126,403,3.406,404,2.091,405,2.126,406,2.779,407,3.03,408,2.126,409,2.126,410,2.126,411,2.584,412,2.126,413,2.584,414,2.126,415,2.883,416,2.126,417,2.126,418,2.126,419,2.126,420,2.126,421,2.126,422,2.126,423,2.883,424,3.895,425,2.126,426,3.783,427,1.847,428,2.355,429,1.447,430,0.597,431,1.847,432,1.447,433,1.847,434,1.847,435,1.847,436,1.847,437,1.847,438,1.847,439,1.847,440,1.847,441,2.883,442,2.572,443,2.572,444,2.48,445,2.48,446,2.48,447,3.178,448,2.779,449,1.847,450,2.883,451,1.847,452,1.847,453,3.546,454,2.463,455,1.577,1363,2.65]],["title/controllers/ServerController.html",[85,2.103,1364,3.323]],["body/controllers/ServerController.html",[0,0.196,3,0.253,4,0.206,5,0.146,10,0.512,12,2.645,17,1.909,22,0.672,25,0.01,32,1.116,37,1.582,39,0.424,41,1.328,43,0.253,55,0.007,56,0.008,57,0.007,81,1.362,85,3.52,87,3.132,91,4.319,92,4.973,93,2.821,98,2.917,102,1.543,273,1.909,565,3.925,575,5.212,599,4.084,1364,5.562,1365,5.46,1366,7.348,1367,6.198,1368,5.562,1369,5.285,1370,5.46,1371,6.198]],["title/modules/ServerModule.html",[106,1.328,1372,3.323]],["body/modules/ServerModule.html",[0,0.146,3,0.188,4,0.153,5,0.109,16,0.339,25,0.01,32,0.688,39,0.499,41,0.988,43,0.188,52,2.624,55,0.005,56,0.007,57,0.005,81,1.013,82,1.065,87,3.128,106,2.078,107,5.595,108,1.85,109,2.097,110,2.516,111,2.516,112,2.329,113,3.182,114,2.169,119,5.282,121,3.38,122,2.418,123,2.097,125,3.525,169,2.624,210,2.743,243,2.216,244,1.85,258,1.907,313,5.595,340,2.486,352,3.017,364,3.525,373,3.685,375,2.279,403,3.38,426,4.073,428,3.525,454,3.685,455,3.685,561,4.059,845,3.685,848,3.128,953,4.604,1117,5.595,1346,2.878,1364,5.199,1369,5.282,1370,4.059,1372,6.582,1373,4.059,1374,4.059,1375,4.059,1376,5.595,1377,4.608,1378,4.608,1379,4.059,1380,6.191,1381,6.191,1382,4.608,1383,4.608,1384,4.608,1385,4.608,1386,6.191,1387,3.032,1388,4.608,1389,4.608,1390,4.073,1391,4.608,1392,4.608,1393,4.608,1394,4.608,1395,4.608,1396,4.604,1397,4.608,1398,4.608,1399,4.608,1400,6.191,1401,4.608,1402,3.211,1403,3.211]],["title/injectables/ServerService.html",[143,1.058,1369,2.94]],["body/injectables/ServerService.html",[0,0.208,3,0.268,4,0.219,5,0.155,10,0.543,17,1.977,22,0.712,25,0.01,32,1.156,37,1.677,39,0.372,41,1.408,43,0.268,55,0.007,56,0.008,57,0.007,81,1.444,143,1.834,144,2.718,1366,7.49,1369,5.094,1404,5.786,1405,6.569,1406,6.569,1407,5.27]],["title/classes/Submission.html",[0,0.141,1390,2.94]],["body/classes/Submission.html",[0,0.162,2,0.996,3,0.21,4,0.171,5,0.121,8,2.029,10,0.425,11,1.105,16,0.609,22,0.925,25,0.01,30,3.533,32,0.993,39,0.442,43,0.21,55,0.006,56,0.007,57,0.006,82,1.537,102,2.126,202,1.39,215,1.696,217,3.581,233,2.671,235,3.228,236,1.942,237,2.753,238,3.027,240,3.027,242,2.593,243,1.84,244,2.063,248,3.965,268,3.242,269,2.449,271,3.242,273,1.698,274,2.382,277,2.806,278,2.339,280,2.419,281,2.419,352,3.595,354,2.926,355,2.926,356,2.926,357,2.926,360,2.926,363,3.632,386,4.2,390,4.154,848,3.727,1390,4.376,1408,4.526,1409,5.918,1410,5.486,1411,6.652,1412,5.139,1413,6.652,1414,5.139,1415,5.139,1416,4.526]],["title/classes/Task.html",[0,0.141,848,2.258]],["body/classes/Task.html",[0,0.195,2,0.887,3,0.187,4,0.153,5,0.108,8,2.125,10,0.378,11,1.024,16,0.621,19,2.071,22,0.939,25,0.01,26,1.206,27,1.229,30,3.42,32,1.222,39,0.422,43,0.252,45,1.895,55,0.005,56,0.007,57,0.005,82,1.424,102,2.141,164,3.07,202,1.288,215,1.511,233,2.475,235,3.085,236,1.856,237,2.551,238,2.805,240,2.805,242,3.246,243,1.639,244,1.839,248,3.919,268,3.004,269,2.864,271,3.004,273,1.573,274,2.207,277,2.5,278,2.084,280,2.155,281,2.155,340,3.218,354,2.607,355,2.607,356,2.607,357,2.607,360,2.607,363,3.365,386,3.967,390,3.849,790,3.365,835,3.012,836,3.674,837,3.405,838,3.405,839,5.544,844,3.674,845,4.771,846,4.033,847,3.674,848,3.115,849,4.946,850,5.429,1417,6.164,1418,4.579,1419,4.579,1420,4.579,1421,4.579]],["title/controllers/TaskController.html",[85,2.103,1422,3.323]],["body/controllers/TaskController.html",[0,0.174,3,0.225,4,0.184,5,0.13,10,0.456,12,2.354,16,0.406,17,1.777,22,0.598,24,1.153,25,0.01,26,0.892,27,1.067,37,1.408,39,0.478,41,1.182,43,0.225,55,0.006,56,0.007,57,0.006,63,4.143,74,1.726,81,1.212,85,2.596,87,2.787,89,4.102,98,2.596,102,1.373,105,2.43,146,3.062,156,2.88,258,2.283,459,2.895,581,4.376,767,3.629,770,3.14,791,4.767,848,2.787,881,3.629,972,5.584,977,5.017,982,4.859,992,3.629,1001,4.859,1009,3.844,1010,4.426,1011,4.102,1016,4.426,1031,4.102,1339,3.284,1422,5.176,1423,4.859,1424,5.581,1425,6.96,1426,5.516,1427,5.017,1428,4.859,1429,4.102,1430,4.102,1431,5.516,1432,4.859,1433,5.516,1434,3.629,1435,6.96,1436,5.516,1437,5.516,1438,5.516,1439,5.516]],["title/modules/TaskModule.html",[106,1.328,1376,3.114]],["body/modules/TaskModule.html",[0,0.193,3,0.249,4,0.203,5,0.144,25,0.01,39,0.47,41,1.306,43,0.249,55,0.007,56,0.008,57,0.007,87,3.74,106,2.369,108,2.446,109,2.773,110,3.326,111,3.326,112,3.079,113,3.629,114,2.868,121,4.041,122,3.197,123,2.773,1376,6.15,1422,5.93,1427,5.684,1428,5.366,1440,5.366,1441,5.366,1442,5.684,1443,6.093,1444,6.093,1445,5.366]],["title/classes/TaskOptionsEntry.html",[0,0.141,1446,3.323]],["body/classes/TaskOptionsEntry.html",[0,0.188,2,1.154,3,0.243,4,0.198,5,0.141,8,2.226,10,0.492,11,1.212,16,0.438,22,0.855,25,0.009,27,1.317,29,2.255,30,3.368,39,0.337,43,0.243,55,0.006,56,0.008,57,0.006,102,1.965,273,1.52,766,4.148,833,4.929,834,4.558,1074,4.427,1147,4.427,1217,3.544,1313,4.148,1315,2.901,1316,4.427,1317,5.855,1318,5.855,1319,4.776,1322,4.776,1402,4.148,1424,5.988,1446,5.87,1447,4.776,1448,5.87,1449,5.243,1450,5.953,1451,5.243,1452,5.953,1453,5.243,1454,4.148,1455,3.124,1456,5.243,1457,5.243,1458,5.953,1459,4.427]],["title/classes/TaskQueryDto.html",[0,0.141,1424,3.114]],["body/classes/TaskQueryDto.html",[0,0.218,2,1.057,3,0.223,4,0.182,5,0.129,10,0.45,11,1.147,22,0.822,25,0.01,27,1.289,29,2.617,39,0.391,43,0.223,55,0.006,56,0.007,57,0.006,61,2.503,102,1.888,103,4.185,105,2.402,273,1.764,483,3.246,766,4.815,833,5.139,834,4.737,1057,6.398,1147,5.139,1217,4.113,1313,4.815,1315,3.367,1316,5.139,1317,6.398,1318,6.398,1319,5.544,1322,5.544,1324,7.025,1325,4.375,1326,4.803,1327,4.803,1328,4.803,1329,4.803,1402,4.815,1424,4.815,1448,6.12,1449,4.803,1451,4.803,1453,4.803,1454,4.815,1455,3.626,1456,6.086,1457,6.086,1460,6.398,1461,4.803,1462,5.453,1463,5.453,1464,5.453,1465,5.453,1466,5.453]],["title/injectables/TaskRepo.html",[143,1.058,1442,2.94]],["body/injectables/TaskRepo.html",[0,0.143,3,0.185,4,0.151,5,0.107,10,0.374,12,1.932,16,0.45,17,1.562,19,1.346,22,0.663,24,1.279,25,0.01,26,1.121,27,0.938,37,1.156,39,0.42,41,0.97,43,0.185,55,0.005,56,0.007,57,0.005,74,2.5,81,1.344,98,2.131,143,1.449,144,1.874,146,2.782,156,2.532,164,1.995,165,3.894,171,3.367,193,3.071,202,0.946,203,3.636,215,1.494,235,1.874,236,1.523,237,1.874,243,1.621,245,2.979,258,2.867,268,2.207,271,2.207,273,1.156,274,1.621,278,2.061,340,2.98,343,3.367,432,2.472,540,3.367,583,2.828,763,2.578,833,2.828,834,2.828,835,4.558,837,3.367,838,3.367,839,3.367,845,4.125,848,3.091,897,3.367,907,3.155,984,2.979,1132,3.988,1133,6.536,1135,4.908,1175,3.367,1331,3.633,1390,2.979,1410,3.367,1442,4.025,1448,3.367,1455,2.376,1459,5.519,1467,3.988,1468,6.118,1469,4.528,1470,6.118,1471,4.528,1472,3.988,1473,4.528,1474,3.988,1475,3.633,1476,4.528,1477,3.155,1478,4.528,1479,6.929,1480,4.528,1481,6.118,1482,4.528,1483,4.528,1484,4.528,1485,6.118,1486,4.528,1487,4.528,1488,4.528,1489,4.528,1490,4.528,1491,4.528,1492,6.118,1493,4.528,1494,4.528,1495,4.528,1496,4.528,1497,4.528,1498,4.528,1499,4.528,1500,4.528,1501,4.528,1502,3.633]],["title/classes/TaskResponseDto.html",[0,0.141,1429,3.323]],["body/classes/TaskResponseDto.html",[0,0.171,2,1.049,3,0.221,4,0.18,5,0.128,10,0.447,11,1.142,16,0.618,19,1.608,22,0.909,24,1.131,25,0.01,26,1.286,27,0.83,32,1.3,39,0.307,43,0.221,47,3.608,55,0.006,56,0.007,57,0.006,61,1.786,102,2.044,103,4.635,105,2.384,236,1.882,269,2.532,344,6.057,345,5.127,362,3.379,459,3.608,461,3.915,837,5.621,838,5.621,839,5.621,848,3.475,1429,5.114,1460,6.84,1503,4.767,1504,6.057,1505,4.294,1506,5.412,1507,5.412,1508,5.412,1509,5.412,1510,5.412,1511,5.412,1512,4.342]],["title/injectables/TaskUC.html",[143,1.058,1427,2.94]],["body/injectables/TaskUC.html",[0,0.181,3,0.234,4,0.191,5,0.135,10,0.473,16,0.525,17,1.819,19,1.702,22,0.772,24,1.489,25,0.01,26,1.152,27,1.092,37,1.462,39,0.46,41,1.227,43,0.234,55,0.006,56,0.008,57,0.006,81,1.258,98,2.695,143,1.688,144,2.37,146,3.115,156,2.949,193,3.359,202,1.197,203,3.005,215,1.889,258,2.37,519,3.409,742,4.258,835,3.767,1286,3.26,1427,4.687,1442,5.6,1445,5.044,1459,6.036,1513,5.044,1514,7.125,1515,5.726,1516,5.726,1517,7.125,1518,6.512,1519,5.726,1520,4.258,1521,4.594,1522,4.258,1523,5.726,1524,4.594,1525,3.99,1526,4.258,1527,4.594,1528,5.726]],["title/classes/TeamInfo.html",[0,0.141,428,2.544]],["body/classes/TeamInfo.html",[0,0.181,2,1.11,3,0.234,4,0.191,5,0.135,8,2.173,10,0.473,11,1.183,16,0.627,19,1.702,22,0.88,24,1.197,25,0.01,26,1.35,27,0.878,30,3.041,32,1.211,39,0.404,43,0.234,45,2.37,55,0.006,56,0.008,57,0.006,102,1.931,202,1.489,215,1.889,233,3.352,235,2.949,236,1.774,237,2.37,238,2.606,240,2.606,242,3.024,243,2.05,244,2.299,280,2.695,281,2.695,360,3.26,366,3.99,367,4.057,368,4.45,369,5.299,370,3.005,371,4.594,372,4.594,428,4.057,778,3.99,1529,6.832]],["title/classes/TeamNews.html",[0,0.141,455,2.66]],["body/classes/TeamNews.html",[0,0.182,2,0.514,3,0.108,4,0.208,5,0.063,8,1.902,10,0.219,11,0.687,15,2.504,16,0.622,17,1.056,22,0.93,24,0.554,25,0.01,26,0.823,27,1.126,30,3.651,32,1.232,37,0.676,39,0.391,43,0.255,45,1.097,55,0.003,56,0.004,57,0.003,81,0.582,82,1.595,102,2.121,155,0.829,193,2.581,194,3.042,195,3.222,197,2.572,202,1.304,215,0.874,216,1.247,219,1.743,233,2.505,235,2.956,236,1.869,237,2.38,238,2.617,240,2.617,242,3.195,243,0.949,244,1.064,248,3.111,255,2.395,260,1.984,268,2.803,269,2.542,271,2.803,273,1.592,274,2.233,277,2.259,278,1.883,280,1.247,281,1.247,283,2.259,304,1.655,340,1.064,352,3.04,354,1.509,355,1.509,356,1.509,357,1.509,358,3.274,362,1.655,363,2.779,364,2.355,367,1.509,370,2.671,373,1.577,374,1.743,375,3.263,376,3.216,377,2.912,378,3.406,379,2.803,380,4.008,381,2.654,382,3.783,383,3.591,384,2.572,385,3.077,386,4.275,388,2.126,389,2.722,390,3.178,391,2.722,392,2.126,393,2.126,394,2.883,395,3.783,396,2.883,397,2.722,398,2.091,399,2.584,400,2.883,401,2.126,402,2.126,403,3.14,404,2.091,405,2.126,406,2.779,407,3.03,408,2.126,409,2.126,410,2.126,411,2.584,412,2.126,413,2.584,414,2.126,415,2.883,416,2.126,417,2.126,418,2.126,419,2.126,420,2.126,421,2.126,422,2.126,423,2.883,424,3.895,425,2.126,426,3.783,427,1.847,428,2.897,429,1.447,430,0.597,431,1.847,432,1.447,433,1.847,434,1.847,435,1.847,436,1.847,437,1.847,438,1.847,439,1.847,440,1.847,441,2.883,442,2.572,443,2.572,444,2.48,445,2.48,446,2.48,447,3.178,448,2.779,449,1.847,450,2.883,451,1.847,452,1.847,453,3.546,454,1.577,455,2.463,1530,2.65]],["title/injectables/TimeoutInterceptor.html",[143,1.058,860,3.323]],["body/injectables/TimeoutInterceptor.html",[0,0.165,3,0.214,4,0.174,5,0.124,10,0.432,11,1.118,12,3.352,16,0.496,17,1.718,22,0.729,24,1.094,25,0.01,26,0.846,27,0.802,29,2.549,37,1.336,39,0.422,41,1.122,43,0.214,55,0.006,56,0.007,57,0.006,61,1.727,81,1.635,85,3.168,93,3.063,98,2.463,143,1.594,144,2.166,273,1.336,274,1.873,384,3.76,444,3.626,490,5.005,495,5.928,496,5.928,497,6.302,498,6.918,500,2.644,501,6.554,504,5.928,505,4.199,507,4.609,509,3.647,601,3.675,665,4.199,858,5.533,860,5.005,948,6.554,1531,4.609,1532,6.731,1533,4.69,1534,5.005,1535,6.731,1536,5.005,1537,4.69,1538,5.4,1539,7.44,1540,5.233,1541,7.44,1542,5.233,1543,6.731,1544,5.233,1545,6.731,1546,5.233,1547,5.233,1548,5.233,1549,5.233,1550,5.233,1551,5.233,1552,5.233,1553,5.233]],["title/classes/UpdateNewsParams.html",[0,0.141,997,3.114]],["body/classes/UpdateNewsParams.html",[0,0.25,2,1.031,3,0.217,4,0.177,5,0.126,10,0.44,11,1.312,15,3.094,16,0.552,22,0.813,25,0.01,27,1.043,32,1.179,39,0.385,43,0.217,55,0.006,56,0.007,57,0.006,61,2.608,102,1.867,105,2.344,202,1.746,269,2.504,375,3.166,377,3.598,379,3.655,458,3.957,459,3.57,461,3.873,463,4.687,465,5.458,466,4.05,467,5.458,468,5.059,481,5.992,482,6.016,483,3.167,745,4.475,785,4.74,997,4.74,1053,5.878,1057,6.341,1554,6.961,1555,6.803,1556,6.803,1557,5.059,1558,4.74,1559,5.992,1560,6.803,1561,5.321,1562,5.321,1563,5.321]],["title/classes/User.html",[0,0.141,155,1.399]],["body/classes/User.html",[0,0.226,2,1.119,3,0.236,4,0.192,5,0.136,10,0.477,11,1.189,12,2.464,16,0.573,22,0.844,25,0.01,27,1.098,32,1.29,39,0.327,41,1.237,43,0.292,55,0.006,56,0.008,57,0.006,81,1.269,143,1.696,146,2.318,150,3.605,155,2.548,156,2.389,158,5.506,160,5.943,164,2.543,202,1.207,203,4.391,797,3.152,1217,3.436,1564,4.631,1565,5.772,1566,5.772,1567,5.772,1568,5.084,1569,5.084,1570,5.084,1571,4.631,1572,4.631,1573,4.293,1574,5.084,1575,5.084,1576,5.084,1577,5.084,1578,5.084]],["title/classes/UserDTO.html",[0,0.141,1579,3.585]],["body/classes/UserDTO.html",[0,0.194,2,1.191,3,0.251,4,0.205,5,0.145,10,0.508,11,1.236,16,0.548,22,0.806,25,0.01,32,1.241,39,0.348,43,0.251,55,0.007,56,0.008,57,0.007,61,2.455,102,1.852,103,4.2,105,2.707,155,2.603,158,5.604,160,5.936,1167,5.533,1571,5.97,1572,5.97,1579,5.97,1580,5.413,1581,6.673,1582,6.145,1583,6.145]],["title/classes/UserEntity.html",[0,0.141,1584,3.323]],["body/classes/UserEntity.html",[0,0.184,2,1.126,3,0.237,4,0.193,5,0.137,10,0.48,11,1.194,16,0.601,19,1.726,22,0.884,24,1.214,25,0.01,26,0.939,27,0.89,32,1.275,39,0.407,43,0.237,55,0.006,56,0.008,57,0.006,102,1.943,103,4.543,105,2.558,203,4.096,258,2.403,404,3.945,795,5.44,800,5.094,881,4.729,1011,4.319,1584,5.345,1585,5.115,1586,7.188,1587,5.808,1588,5.808,1589,5.808,1590,5.808,1591,5.808,1592,5.808,1593,5.808,1594,5.808,1595,5.808,1596,5.808,1597,5.808]],["title/classes/UserInfo.html",[0,0.141,352,2.178]],["body/classes/UserInfo.html",[0,0.174,2,1.069,3,0.225,4,0.184,5,0.13,8,2.122,10,0.456,11,1.156,16,0.63,19,1.639,22,0.895,24,1.153,25,0.01,26,0.892,27,0.846,30,2.971,32,1.278,39,0.394,43,0.225,45,2.283,55,0.006,56,0.007,57,0.006,102,1.994,202,1.455,215,1.82,233,3.316,235,2.88,236,1.733,237,2.283,238,2.51,240,2.51,242,3.219,243,1.975,244,2.215,280,2.596,281,2.596,352,3.392,360,3.14,366,3.844,367,3.963,368,4.347,369,4.102,370,2.895,797,3.012,1598,7.054,1599,7.054,1600,7.054,1601,6.96,1602,5.516,1603,5.516,1604,5.516,1605,5.516]],["title/classes/UserInfoMapper.html",[0,0.141,1077,3.323]],["body/classes/UserInfoMapper.html",[0,0.194,2,1.188,3,0.25,4,0.204,5,0.145,10,0.507,16,0.452,17,1.897,22,0.665,24,1.282,25,0.01,26,0.992,27,0.94,37,1.565,39,0.421,43,0.25,55,0.007,56,0.008,57,0.007,74,1.919,81,1.348,82,1.416,202,1.282,352,4.149,384,4.04,459,3.899,1064,5.962,1074,4.56,1077,5.526,1078,4.92,1171,5.792,1353,4.92,1355,5.401,1606,6.545,1607,7.431,1608,6.132,1609,6.132,1610,6.132,1611,6.132,1612,6.132]],["title/classes/UserInfoResponse.html",[0,0.141,1171,3.114]],["body/classes/UserInfoResponse.html",[0,0.184,2,1.126,3,0.237,4,0.193,5,0.137,10,0.48,11,1.194,16,0.575,22,0.846,25,0.01,26,1.319,32,1.275,39,0.329,43,0.237,55,0.006,56,0.008,57,0.006,61,2.692,102,1.943,103,4.281,105,2.558,155,2.673,202,1.502,236,2.087,471,5.009,472,5.009,486,3.821,1167,5.345,1171,5.009,1186,4.66,1360,4.66,1361,5.115,1362,5.115,1599,6.876,1600,6.876,1613,7.185,1614,5.009,1615,6.331,1616,5.808]],["title/controllers/UsersController.html",[85,2.103,1617,3.323]],["body/controllers/UsersController.html",[0,0.187,3,0.242,4,0.197,5,0.14,10,0.489,16,0.436,17,1.856,22,0.641,24,1.237,25,0.01,26,0.957,27,0.907,37,1.51,39,0.465,41,1.268,43,0.242,55,0.006,56,0.008,57,0.006,81,1.3,82,1.367,85,2.784,87,2.989,89,4.4,92,4.746,93,2.692,102,1.473,155,2.276,273,1.856,565,3.815,575,5.066,599,3.969,797,3.23,799,4.783,800,5.127,881,3.892,977,3.892,1009,4.123,1010,4.746,1011,4.4,1016,4.746,1584,5.853,1617,5.407,1618,5.211,1619,7.27,1620,5.916,1621,7.27,1622,5.916,1623,5.916,1624,5.916,1625,5.916,1626,5.916]],["title/modules/UsersModule.html",[106,1.328,119,2.94]],["body/modules/UsersModule.html",[0,0.193,3,0.249,4,0.203,5,0.144,25,0.01,39,0.452,41,1.306,43,0.249,55,0.007,56,0.008,57,0.007,87,3.079,106,2.369,108,2.446,109,2.773,110,3.326,111,3.326,112,3.079,113,3.629,114,3.753,119,5.753,121,4.041,122,3.197,123,2.773,150,5.631,1617,5.505,1627,5.366,1628,5.366,1629,5.366,1630,6.093,1631,6.093,1632,6.093]],["title/injectables/UsersService.html",[143,1.058,150,2.791]],["body/injectables/UsersService.html",[0,0.218,3,0.223,4,0.182,5,0.129,10,0.45,11,1.147,12,3.237,16,0.509,17,1.764,22,0.749,24,1.14,25,0.01,26,0.882,27,0.836,32,1.255,37,1.392,39,0.309,41,1.169,43,0.282,55,0.006,56,0.007,57,0.006,81,1.198,143,1.636,144,2.257,146,3.046,150,4.315,155,2.496,156,2.859,158,5.414,160,5.951,164,3.341,202,1.14,203,4.318,273,1.392,274,1.952,797,4.141,973,6.086,1217,4.113,1564,4.375,1568,4.803,1569,4.803,1570,4.803,1571,5.544,1572,5.544,1573,5.139,1574,6.086,1575,6.086,1576,6.086,1577,4.803,1578,4.803,1633,5.453,1634,5.453]],["title/classes/ValidationErrorDetailResponse.html",[0,0.141,68,3.323]],["body/classes/ValidationErrorDetailResponse.html",[0,0.206,2,1.264,3,0.266,4,0.217,5,0.154,12,2.784,16,0.48,19,1.939,22,0.707,24,1.364,25,0.009,26,1.055,27,1,32,1.31,43,0.266,44,5.746,49,3.191,55,0.007,56,0.008,57,0.007,65,4.001,68,5.735,1635,6.793,1636,5.746,1637,6.524,1638,6.524,1639,6.187]],["title/modules/ValidationModule.html",[106,1.328,319,3.114]],["body/modules/ValidationModule.html",[0,0.207,3,0.267,4,0.218,5,0.155,25,0.01,39,0.466,41,1.401,43,0.267,55,0.007,56,0.008,57,0.007,106,2.295,108,2.626,113,2.976,319,5.381,333,6.802,521,4.302,525,3.893,526,5.246,737,5.743,1640,6.539,1641,6.539,1642,6.539]],["title/changelog.html",[1643,2.788,1644,2.788,1645,3.302]],["body/changelog.html",[0,0.068,2,0.776,3,0.026,4,0.022,5,0.105,10,0.054,13,1.162,14,0.34,22,0.233,25,0.003,26,0.277,27,0.262,29,0.459,37,0.436,39,0.097,47,2.823,48,1.829,49,2.278,51,1.271,53,0.405,55,0.001,56,0.003,57,0.002,65,1.952,81,0.142,82,1.272,93,1.593,106,0.361,109,0.295,114,0.305,122,0.637,123,0.552,138,0.452,146,0.26,147,1.372,155,2.128,156,0.502,158,0.798,160,0.845,165,0.34,169,4.035,172,0.386,184,0.833,197,1.463,199,0.386,201,0.305,203,0.637,204,0.452,207,0.482,210,1.018,211,1.271,218,0.369,236,0.535,247,0.482,252,0.405,253,2.324,256,0.52,259,1.912,260,1.727,262,2.809,264,0.902,265,0.426,269,0.936,273,0.549,274,0.434,285,0.354,286,0.426,287,0.691,288,1.447,289,0.798,290,0.295,325,0.571,327,2.635,329,2.113,340,1.162,343,2.604,345,0.405,358,1.224,361,1.342,377,0.534,378,0.933,381,2.635,397,0.426,398,1.769,404,0.328,406,0.933,413,0.405,429,1.388,430,0.146,432,0.354,442,0.864,443,0.613,446,0.591,448,0.354,460,1.271,461,0.691,466,1.723,473,0.758,478,1.224,493,0.482,500,0.328,511,4.616,519,1.018,525,0.722,532,0.845,534,0.571,536,1.342,537,0.534,538,0.758,539,0.426,565,2.217,566,1.069,571,3.393,575,3.34,581,1.285,583,0.758,599,1.58,600,0.369,601,0.354,602,1.912,604,1.904,608,1.239,612,1.048,616,0.386,620,0.354,622,0.405,624,0.52,626,2.303,640,0.482,644,0.52,666,0.52,667,0.973,669,0.426,671,0.452,673,0.758,684,0.482,697,1.414,699,0.902,704,2.055,708,0.973,719,0.482,720,1.372,729,0.52,741,1.808,743,0.571,744,1.725,745,1.672,748,2.578,749,1.271,750,2.578,752,2.024,761,2.322,763,2.143,766,0.452,767,1.125,769,1.891,770,0.369,777,3.038,778,1.498,779,0.405,780,0.758,781,0.798,785,0.452,795,1.498,796,2.809,797,3.795,798,0.902,799,0.798,801,0.482,809,1.191,815,1.125,845,0.722,847,1.372,848,0.613,855,0.426,857,1.648,859,3.02,872,0.52,881,1.125,883,2.83,884,1.191,900,1.506,905,2.143,907,5.253,909,0.52,912,0.798,914,4.518,918,0.571,921,2.239,932,0.902,935,1.069,947,0.798,971,1.599,974,2.153,984,0.798,992,1.125,994,1.125,1000,2.55,1031,0.482,1043,0.52,1049,2.55,1149,0.452,1175,1.271,1192,2.322,1217,1.018,1220,0.845,1225,0.798,1228,1.191,1257,0.452,1286,0.973,1294,0.571,1295,2.04,1313,3.994,1315,1.048,1316,0.482,1325,0.52,1339,1.28,1346,1.588,1368,0.482,1387,1.904,1390,0.798,1396,0.482,1402,1.191,1403,0.452,1409,3.02,1410,0.482,1416,1.506,1430,0.902,1434,0.798,1448,0.902,1454,0.452,1455,1.334,1472,0.571,1475,0.52,1477,0.845,1502,1.725,1504,0.571,1505,1.342,1512,0.973,1518,0.52,1520,0.902,1521,0.52,1522,0.482,1524,2.322,1526,0.482,1533,0.845,1534,0.902,1536,0.482,1557,2.153,1558,0.845,1573,0.482,1614,0.845,1615,1.506,1639,0.973,1645,2.55,1646,0.648,1647,1.191,1648,0.973,1649,0.571,1650,1.498,1651,0.648,1652,0.648,1653,1.71,1654,2.978,1655,5.505,1656,7.38,1657,4.097,1658,0.648,1659,7.95,1660,0.648,1661,6.685,1662,1.069,1663,2.017,1664,0.902,1665,1.069,1666,0.571,1667,0.648,1668,0.648,1669,1.893,1670,4.429,1671,0.648,1672,0.648,1673,1.71,1674,0.648,1675,1.893,1676,0.648,1677,1.891,1678,1.893,1679,0.648,1680,1.71,1681,3.02,1682,1.069,1683,1.069,1684,1.213,1685,1.213,1686,1.893,1687,3.213,1688,1.213,1689,0.648,1690,0.571,1691,0.648,1692,2.83,1693,0.648,1694,3.434,1695,0.648,1696,1.213,1697,0.648,1698,0.648,1699,1.213,1700,1.893,1701,0.648,1702,1.213,1703,0.648,1704,1.414,1705,2.542,1706,3.527,1707,0.648,1708,0.571,1709,0.648,1710,4.955,1711,2.83,1712,2.895,1713,1.213,1714,1.213,1715,0.648,1716,0.52,1717,0.648,1718,0.648,1719,0.648,1720,0.648,1721,0.571,1722,0.648,1723,1.71,1724,0.648,1725,0.571,1726,2.542,1727,2.239,1728,0.571,1729,0.648,1730,0.648,1731,0.648,1732,0.648,1733,1.71,1734,0.648,1735,1.904,1736,0.648,1737,1.213,1738,0.648,1739,1.213,1740,0.648,1741,0.571,1742,0.571,1743,1.213,1744,0.648,1745,1.506,1746,0.973,1747,0.648,1748,0.648,1749,1.213,1750,1.213,1751,0.648,1752,5.099,1753,2.389,1754,0.648,1755,1.191,1756,0.648,1757,0.648,1758,2.55,1759,0.648,1760,0.648,1761,2.15,1762,3.764,1763,0.648,1764,3.527,1765,0.648,1766,0.648,1767,1.71,1768,1.069,1769,0.52,1770,0.648,1771,0.648,1772,0.648,1773,6.685,1774,3.764,1775,2.809,1776,1.213,1777,1.213,1778,1.213,1779,1.069,1780,1.213,1781,0.648,1782,1.506,1783,0.648,1784,0.648,1785,1.271,1786,0.648,1787,2.186,1788,0.648,1789,1.213,1790,0.648,1791,2.83,1792,0.648,1793,1.213,1794,0.648,1795,0.973,1796,0.648,1797,1.506,1798,1.893,1799,0.648,1800,0.648,1801,1.069,1802,0.648,1803,4.618,1804,0.648,1805,7.593,1806,0.648,1807,0.648,1808,4.005,1809,0.648,1810,4.955,1811,2.895,1812,1.213,1813,0.648,1814,0.648,1815,0.648,1816,0.648,1817,0.648,1818,0.648,1819,1.069,1820,0.648,1821,4.005,1822,0.648,1823,1.71,1824,2.55,1825,0.648,1826,1.506,1827,0.648,1828,0.648,1829,1.069,1830,0.648,1831,0.648,1832,2.239,1833,1.213,1834,0.648,1835,1.71,1836,1.191,1837,0.648,1838,0.571,1839,0.648,1840,3.213,1841,0.648,1842,1.213,1843,1.725,1844,0.648,1845,0.648,1846,1.069,1847,0.648,1848,0.648,1849,0.571,1850,0.973,1851,1.213,1852,1.891,1853,2.895,1854,0.648,1855,0.648,1856,0.648,1857,0.52,1858,1.213,1859,0.648,1860,1.213,1861,4.618,1862,1.725,1863,1.213,1864,0.648,1865,0.648,1866,0.648,1867,0.648,1868,2.542,1869,0.648,1870,0.648,1871,4.618,1872,1.213,1873,0.648,1874,0.571,1875,2.15,1876,1.069,1877,0.648,1878,1.213,1879,1.71,1880,2.017,1881,0.648,1882,0.648,1883,0.452,1884,0.648,1885,0.648,1886,1.213,1887,0.648,1888,1.372,1889,1.672,1890,0.571,1891,0.648,1892,1.506,1893,0.648,1894,0.648,1895,1.71,1896,0.648,1897,0.648,1898,1.213,1899,1.71,1900,0.648,1901,0.648,1902,0.648,1903,0.648,1904,1.213,1905,0.648,1906,1.71,1907,1.069,1908,1.893,1909,0.648,1910,3.527,1911,0.648,1912,1.191,1913,1.213,1914,1.725,1915,0.648,1916,0.648,1917,0.648,1918,0.648,1919,1.71,1920,1.893,1921,0.648,1922,1.71,1923,0.571,1924,0.648,1925,1.71,1926,2.55,1927,0.648,1928,0.648,1929,0.648,1930,1.71,1931,0.648,1932,0.648,1933,0.648,1934,1.213,1935,0.648,1936,1.506,1937,1.213,1938,0.648,1939,0.648,1940,0.648,1941,0.648,1942,0.648,1943,0.973,1944,0.482,1945,0.902,1946,0.52,1947,0.648,1948,0.648,1949,0.571,1950,1.069,1951,0.648,1952,0.648,1953,0.648,1954,4.792,1955,0.648,1956,1.71,1957,0.648,1958,0.648,1959,0.648,1960,2.15,1961,0.648,1962,1.213,1963,0.902,1964,1.213,1965,0.648,1966,0.648,1967,0.648,1968,1.213,1969,0.973,1970,0.648,1971,0.648,1972,0.648,1973,0.571,1974,0.571,1975,0.648,1976,0.648,1977,0.571,1978,0.648,1979,1.213,1980,0.571,1981,0.648,1982,0.648,1983,0.648,1984,0.648,1985,0.648,1986,0.648,1987,0.648,1988,2.578,1989,0.648,1990,2.895,1991,0.648,1992,0.648,1993,0.648,1994,0.648,1995,0.648,1996,0.648,1997,0.648,1998,1.213,1999,0.648,2000,0.648,2001,1.71,2002,0.648,2003,1.213,2004,0.648,2005,1.414,2006,0.648,2007,1.213,2008,0.571,2009,0.648,2010,0.571,2011,0.648,2012,1.213,2013,0.648,2014,0.648,2015,0.648,2016,2.542,2017,0.648,2018,0.648,2019,0.52,2020,0.648,2021,0.648,2022,0.648,2023,0.648,2024,0.648,2025,0.648,2026,0.648,2027,0.648,2028,0.482,2029,0.648,2030,1.71,2031,0.648,2032,0.482,2033,0.648,2034,0.648,2035,0.648,2036,0.648,2037,1.018,2038,0.758,2039,1.71,2040,1.213,2041,0.648,2042,1.71,2043,0.648,2044,1.893,2045,0.648,2046,0.648,2047,2.542,2048,2.895,2049,0.648,2050,0.648,2051,0.648,2052,2.895,2053,0.648,2054,1.213,2055,0.648,2056,0.648,2057,1.213,2058,0.52,2059,1.213,2060,0.571,2061,1.372,2062,0.648,2063,0.648,2064,0.52,2065,1.342,2066,0.648,2067,7.782,2068,2.83,2069,0.648,2070,0.648,2071,0.52,2072,0.648,2073,0.648,2074,0.648,2075,0.648,2076,0.648,2077,2.895,2078,0.648,2079,1.372,2080,0.648,2081,0.648,2082,0.648,2083,0.648,2084,0.648,2085,2.15,2086,2.15,2087,2.239,2088,0.973,2089,1.599,2090,1.71,2091,2.542,2092,1.213,2093,1.213,2094,3.501,2095,1.599,2096,3.213,2097,1.213,2098,1.213,2099,1.271,2100,1.213,2101,1.069,2102,0.973,2103,1.213,2104,0.648,2105,0.648,2106,2.83,2107,0.571,2108,0.452,2109,2.542,2110,1.069,2111,0.648,2112,0.52,2113,0.482,2114,0.482,2115,0.648,2116,0.648,2117,0.571,2118,1.069,2119,0.648,2120,1.213,2121,0.648,2122,0.648,2123,1.213,2124,0.648,2125,0.648,2126,1.213,2127,0.648,2128,0.648,2129,1.213,2130,0.648,2131,0.648,2132,0.648,2133,0.571,2134,1.599,2135,0.648,2136,0.648,2137,1.069,2138,0.482,2139,0.648,2140,1.71,2141,2.04,2142,0.648,2143,0.571,2144,1.213,2145,0.648,2146,0.648,2147,0.571,2148,0.648,2149,3.315,2150,1.213,2151,0.648,2152,0.648,2153,0.648,2154,0.648,2155,0.648,2156,1.069,2157,1.069,2158,2.15,2159,1.725,2160,0.648,2161,1.71,2162,0.648,2163,0.648,2164,1.506,2165,0.648,2166,0.648,2167,0.648,2168,1.213,2169,1.71,2170,0.52,2171,0.648,2172,0.648,2173,0.648,2174,0.648,2175,1.213,2176,0.648,2177,0.973,2178,0.571,2179,1.213,2180,0.648,2181,0.571,2182,0.648,2183,0.648,2184,0.648,2185,1.213,2186,0.571,2187,1.213,2188,0.648,2189,1.213,2190,0.648,2191,0.648,2192,0.648,2193,0.648,2194,0.648,2195,1.672,2196,1.71,2197,1.71,2198,1.599,2199,0.452,2200,2.239,2201,0.648,2202,1.71,2203,1.213,2204,0.452,2205,0.426,2206,0.571,2207,0.648,2208,0.648,2209,0.571,2210,0.482,2211,1.213,2212,1.271,2213,1.71,2214,1.069,2215,0.648,2216,0.648,2217,0.571,2218,0.648,2219,0.571,2220,0.648,2221,0.648,2222,0.648,2223,1.772,2224,0.648,2225,0.648,2226,0.648,2227,0.52,2228,0.648,2229,0.973,2230,0.648,2231,0.648,2232,0.648,2233,0.902,2234,0.648,2235,0.648,2236,0.648,2237,1.213,2238,0.571,2239,0.52,2240,0.571,2241,0.648,2242,0.571,2243,0.648,2244,0.52,2245,1.069,2246,0.648,2247,1.372,2248,0.648,2249,0.648,2250,0.648,2251,1.213,2252,0.648,2253,0.648,2254,0.648,2255,0.648,2256,0.648,2257,0.973,2258,0.648,2259,0.648,2260,1.213,2261,0.648,2262,0.648,2263,0.648,2264,2.15,2265,0.571,2266,0.648,2267,1.213,2268,0.648,2269,0.648,2270,1.213,2271,1.213,2272,1.213,2273,1.71,2274,1.71,2275,1.893,2276,1.213,2277,1.506,2278,0.973,2279,0.648,2280,0.452,2281,0.648,2282,0.571,2283,0.571,2284,0.648,2285,0.902,2286,0.648,2287,1.71,2288,0.648,2289,0.648,2290,0.648,2291,0.648,2292,1.772,2293,0.571,2294,1.372,2295,0.648,2296,1.213,2297,0.973,2298,1.71,2299,1.069,2300,0.648,2301,0.648,2302,0.648,2303,1.213,2304,1.372,2305,1.069,2306,1.213,2307,0.648,2308,0.648,2309,0.648,2310,0.648,2311,0.648,2312,0.648,2313,0.648,2314,0.648,2315,0.648,2316,0.571,2317,0.571,2318,0.648,2319,0.648,2320,1.71,2321,0.648,2322,1.213,2323,0.648,2324,1.069,2325,0.648,2326,1.213,2327,0.648,2328,1.213,2329,0.482,2330,0.648,2331,0.973,2332,0.648,2333,0.648,2334,0.571,2335,0.648,2336,0.648,2337,0.571,2338,1.71,2339,2.15,2340,1.213,2341,0.798,2342,1.069,2343,1.213,2344,1.069,2345,1.213,2346,0.902,2347,0.648,2348,1.213,2349,0.571,2350,0.648,2351,1.213,2352,1.069,2353,0.648,2354,0.648,2355,0.648,2356,0.571,2357,0.648,2358,0.648,2359,1.213,2360,0.648,2361,0.648,2362,2.55,2363,1.069,2364,0.648,2365,3.501,2366,0.648,2367,0.571,2368,0.571,2369,0.648,2370,0.648,2371,0.648,2372,0.648,2373,2.15,2374,0.648,2375,0.648,2376,1.372,2377,0.648,2378,0.648,2379,0.648,2380,0.648,2381,0.571,2382,1.069,2383,0.648,2384,0.648,2385,0.648,2386,0.648,2387,0.973,2388,0.648,2389,0.648,2390,0.648,2391,0.648,2392,0.648,2393,0.648,2394,0.648,2395,0.648,2396,1.893,2397,0.648,2398,0.648,2399,0.52,2400,0.648,2401,0.52,2402,0.648,2403,0.648,2404,0.571,2405,0.648,2406,0.482,2407,0.648,2408,0.648,2409,0.571,2410,0.648,2411,0.648,2412,0.648,2413,0.648,2414,0.648,2415,0.648,2416,0.648,2417,1.71,2418,0.52,2419,0.648,2420,0.52,2421,0.648,2422,0.648,2423,0.648,2424,0.648,2425,0.648,2426,1.71,2427,0.648,2428,1.213,2429,1.71,2430,1.213,2431,1.213,2432,4.429,2433,1.213,2434,1.213,2435,0.648,2436,1.213,2437,1.213,2438,0.648,2439,0.648,2440,0.648,2441,0.648,2442,0.648,2443,0.571,2444,0.648,2445,1.213,2446,0.648,2447,0.648,2448,0.482,2449,0.648,2450,0.571,2451,0.648,2452,2.15,2453,1.213,2454,0.648,2455,0.571,2456,0.648,2457,0.648,2458,0.648,2459,0.648,2460,0.52,2461,0.648,2462,0.648,2463,1.71,2464,1.71,2465,0.648,2466,0.571,2467,0.648,2468,0.648,2469,1.069,2470,0.648,2471,0.648,2472,0.648,2473,1.213,2474,0.648,2475,0.648,2476,0.648,2477,0.648,2478,1.213,2479,0.571,2480,0.648,2481,0.571,2482,0.648,2483,0.648,2484,0.648,2485,0.648,2486,0.648,2487,0.648,2488,0.648,2489,0.648,2490,0.648,2491,1.213,2492,1.213,2493,0.648,2494,0.571,2495,0.648,2496,0.648,2497,0.648,2498,1.213,2499,0.648,2500,0.648,2501,1.213,2502,0.648,2503,1.213,2504,0.648,2505,0.648,2506,1.213,2507,0.426,2508,2.15,2509,0.648,2510,0.648,2511,0.648,2512,0.648,2513,0.52,2514,0.648,2515,1.069,2516,0.571,2517,0.571,2518,1.213,2519,0.648,2520,0.648,2521,1.213,2522,0.648,2523,0.648,2524,0.648,2525,0.648,2526,0.648,2527,1.213,2528,0.648,2529,0.648,2530,0.648,2531,0.648,2532,0.648,2533,0.648,2534,0.648,2535,1.71,2536,0.648,2537,0.648,2538,0.648,2539,0.648,2540,0.648,2541,0.648,2542,0.648,2543,0.648,2544,1.213,2545,1.213,2546,0.648,2547,0.648,2548,0.648,2549,2.15,2550,4.429,2551,1.213,2552,1.069,2553,1.069,2554,1.213,2555,2.15,2556,1.213,2557,1.213,2558,0.648,2559,1.213,2560,1.069,2561,1.213,2562,1.213,2563,1.213,2564,1.069,2565,1.213,2566,2.15,2567,1.213,2568,2.15,2569,1.213,2570,1.213,2571,1.069,2572,1.069,2573,1.71,2574,1.213,2575,0.648,2576,0.648,2577,0.902,2578,0.52,2579,1.213,2580,0.648,2581,2.542,2582,1.213,2583,0.648,2584,0.571,2585,0.648,2586,2.15,2587,0.648,2588,0.648,2589,0.648,2590,0.648,2591,0.648,2592,0.452,2593,0.571,2594,0.648,2595,0.648,2596,0.648,2597,1.213,2598,1.213,2599,1.213,2600,0.648,2601,0.648,2602,0.482,2603,0.648,2604,0.571,2605,0.52,2606,0.648,2607,0.648,2608,1.213,2609,1.213,2610,0.648,2611,0.648,2612,0.648,2613,1.213,2614,0.648,2615,0.648,2616,0.648,2617,1.213,2618,0.648,2619,1.71,2620,1.506,2621,0.648,2622,0.648,2623,0.52,2624,1.213,2625,1.213,2626,0.648,2627,0.52,2628,0.648,2629,0.648,2630,1.71,2631,1.213,2632,0.648,2633,1.213,2634,0.52,2635,0.648,2636,1.213,2637,0.648,2638,0.648,2639,0.648,2640,2.15,2641,0.648,2642,0.648,2643,0.648,2644,0.648,2645,0.648,2646,0.648,2647,0.648,2648,1.213,2649,0.648,2650,0.648,2651,0.648,2652,0.571,2653,1.213,2654,0.648,2655,1.213,2656,0.648,2657,0.648,2658,0.52,2659,0.648,2660,1.213,2661,2.15,2662,0.648,2663,0.571,2664,0.648,2665,1.213,2666,1.213,2667,0.648,2668,0.648,2669,0.571,2670,1.213,2671,0.648,2672,0.648,2673,1.213,2674,0.52,2675,0.52,2676,1.213,2677,0.648,2678,0.648,2679,0.648,2680,1.213,2681,1.213,2682,0.648,2683,0.648,2684,1.213,2685,0.648,2686,0.648,2687,0.648,2688,0.648,2689,1.213,2690,0.648,2691,0.648,2692,0.52,2693,0.648,2694,2.15,2695,0.52,2696,0.648,2697,0.648,2698,1.213,2699,0.571,2700,0.482,2701,1.213,2702,0.648,2703,2.542,2704,1.213,2705,0.52,2706,1.213,2707,0.52,2708,0.648,2709,0.648,2710,0.52,2711,0.648,2712,0.648,2713,0.648,2714,0.648,2715,0.648,2716,0.648,2717,0.648,2718,0.648,2719,0.648,2720,0.648,2721,0.648,2722,0.648,2723,1.069,2724,0.648,2725,0.648,2726,0.648,2727,0.648,2728,0.648,2729,0.52,2730,0.648,2731,0.648,2732,0.648,2733,0.648,2734,0.648,2735,0.648,2736,0.648,2737,0.571,2738,0.452,2739,0.648,2740,0.648,2741,0.648,2742,1.71,2743,0.648,2744,0.571,2745,0.571,2746,0.648,2747,0.571,2748,0.648,2749,0.648,2750,0.648,2751,0.648,2752,0.648,2753,2.15,2754,0.648,2755,0.648,2756,0.571,2757,0.648,2758,1.506,2759,0.648,2760,0.648,2761,0.648,2762,0.648,2763,0.648,2764,0.648,2765,1.213,2766,0.648,2767,0.648,2768,0.648,2769,0.52,2770,1.213,2771,0.648,2772,0.648,2773,0.648,2774,0.648,2775,0.648,2776,1.71,2777,1.213,2778,1.213,2779,0.648,2780,0.571,2781,0.648,2782,1.213,2783,0.571,2784,1.71,2785,0.648,2786,0.648,2787,0.648,2788,0.648,2789,0.648,2790,1.213,2791,1.213,2792,1.213,2793,1.213,2794,1.506,2795,1.213,2796,0.648,2797,1.213,2798,0.648,2799,1.213,2800,0.571,2801,1.71,2802,0.648,2803,0.571,2804,0.648,2805,0.648,2806,0.648,2807,2.542,2808,0.648,2809,0.571,2810,0.648,2811,0.648,2812,0.648,2813,0.571,2814,0.648,2815,1.213,2816,1.213,2817,0.648,2818,0.571,2819,0.482,2820,0.648,2821,0.648,2822,0.648,2823,0.648,2824,1.213,2825,0.648,2826,0.648,2827,0.648,2828,0.648,2829,0.571,2830,0.648,2831,0.648,2832,0.52,2833,0.648,2834,0.648,2835,0.482,2836,0.648,2837,0.648,2838,0.648,2839,1.213,2840,0.571,2841,0.571]],["title/coverage.html",[2038,3.787]],["body/coverage.html",[0,0.279,1,1.526,5,0.058,6,2.152,7,2.152,9,1.526,16,0.18,25,0.01,38,1.334,48,1.391,49,2.276,55,0.003,56,0.004,57,0.003,58,1.961,59,2.152,60,2.152,68,1.817,82,0.564,85,2.824,86,1.817,88,2.152,95,1.608,99,1.817,100,2.152,112,1.235,120,1.703,130,2.553,143,1.912,145,2.152,150,1.526,155,1.215,179,1.526,180,1.526,186,2.152,216,1.15,233,0.981,234,3.114,248,1.15,282,3.114,293,1.608,309,1.817,340,0.981,341,2.152,352,1.191,364,1.391,365,2.152,366,3.832,373,1.455,374,3.947,375,0.9,376,1.011,403,1.334,424,1.526,428,1.391,430,1.764,454,1.455,455,1.455,456,1.608,457,3.114,458,3.591,476,3.365,487,1.961,488,2.152,489,2.152,494,1.235,522,1.703,527,2.152,531,1.961,541,3.419,542,3.114,549,1.455,589,1.703,591,2.152,592,2.152,609,1.817,610,2.886,611,2.705,641,5.566,642,5.215,645,1.961,662,1.961,664,1.961,670,1.961,674,1.961,684,4.749,712,1.817,713,1.961,726,1.961,737,1.817,738,2.152,739,2.152,773,1.608,774,3.365,788,1.608,791,1.455,792,3.114,793,3.114,800,1.526,810,2.152,811,2.152,812,1.817,813,2.152,831,1.817,832,2.152,835,1.608,836,3.114,845,1.455,848,1.235,860,1.817,862,1.817,863,2.152,864,2.152,867,3.874,877,2.152,896,2.152,901,2.152,930,1.961,931,2.152,932,2.886,933,2.152,934,2.152,969,1.817,970,2.152,977,1.608,983,1.703,985,1.703,997,1.703,1002,1.703,1005,1.817,1007,1.608,1009,1.703,1012,1.703,1013,1.817,1040,3.114,1041,3.114,1058,1.961,1061,2.152,1075,1.817,1077,1.817,1122,1.608,1128,2.152,1139,1.608,1140,1.817,1155,1.817,1166,3.591,1171,1.703,1177,1.703,1182,1.961,1197,3.114,1198,2.152,1214,1.961,1225,6.008,1235,2.152,1236,1.961,1311,2.152,1312,2.152,1330,2.152,1338,2.152,1339,1.455,1340,1.961,1351,2.152,1352,2.152,1353,3.114,1359,2.152,1360,3.114,1364,1.817,1365,2.152,1369,1.608,1387,1.608,1390,1.608,1404,2.152,1408,2.152,1422,1.817,1423,2.152,1424,1.703,1427,1.608,1429,1.817,1442,1.608,1446,1.817,1447,1.961,1460,3.114,1461,2.152,1467,2.152,1503,2.152,1513,2.152,1529,2.152,1531,2.152,1554,2.152,1564,3.114,1579,1.961,1580,2.152,1584,1.817,1585,2.152,1598,2.152,1606,2.152,1613,2.152,1617,1.817,1618,2.152,1635,2.152,1636,2.152,1775,1.961,1785,2.886,1795,3.874,1826,2.152,1846,2.152,1892,4.253,2005,1.608,2038,1.526,2376,1.961,2381,2.152,2692,6.978,2842,2.152,2843,2.152,2844,5.625,2845,6.386,2846,5.999,2847,5.999,2848,5.499,2849,5.499,2850,6.695,2851,7.484,2852,2.152,2853,8.753,2854,2.152,2855,4.253,2856,4.253,2857,2.152,2858,2.152,2859,3.881,2860,4.412,2861,2.152,2862,1.961,2863,2.152,2864,7.729,2865,3.114,2866,2.444,2867,2.444,2868,2.444,2869,2.444,2870,2.152,2871,2.152,2872,2.152,2873,2.152,2874,2.444,2875,4.828,2876,6.695,2877,3.881,2878,2.444,2879,2.444,2880,4.828,2881,2.444,2882,5.499,2883,2.444,2884,2.444,2885,4.828,2886,3.881,2887,2.444,2888,5.897,2889,2.152,2890,2.152,2891,2.152,2892,2.152,2893,2.152,2894,2.152,2895,2.152,2896,2.152,2897,4.253,2898,2.444]],["title/dependencies.html",[109,2.442,2399,3.008]],["body/dependencies.html",[0,0.171,4,0.127,5,0.128,16,0.28,25,0.01,41,0.815,47,1.996,55,0.004,56,0.006,57,0.004,93,2.467,94,2.651,105,1.676,109,1.731,127,2.829,129,3.052,146,2.177,156,2.849,168,5.067,184,3.078,210,2.265,236,0.947,243,2.261,244,1.528,245,2.503,288,3.596,321,2.503,323,2.376,389,3.566,407,2.265,483,3.76,505,3.052,521,2.503,571,1.79,622,4.299,623,3.052,658,3.351,884,2.651,947,2.503,950,3.351,992,2.503,1346,4.97,1379,3.351,1430,4.032,1662,3.351,1746,4.349,1779,3.351,1883,2.651,1949,3.351,1950,3.351,2008,3.351,2133,3.351,2156,3.351,2157,3.351,2195,2.503,2204,2.651,2205,3.566,2206,3.351,2209,3.351,2219,3.351,2265,3.351,2280,2.651,2285,2.829,2299,3.351,2304,3.052,2517,3.351,2780,3.351,2818,3.351,2899,5.421,2900,7.785,2901,3.804,2902,3.804,2903,3.804,2904,3.804,2905,3.804,2906,5.421,2907,3.804,2908,3.804,2909,5.421,2910,3.804,2911,3.804,2912,3.804,2913,3.804,2914,3.804,2915,3.804,2916,3.804,2917,3.804,2918,3.804,2919,5.421,2920,3.804,2921,3.804,2922,3.804,2923,3.804,2924,3.804,2925,3.804,2926,5.421,2927,3.804,2928,3.804,2929,5.421,2930,3.804,2931,3.804,2932,7.277,2933,3.804,2934,3.804,2935,3.804,2936,3.804,2937,3.804,2938,3.804,2939,3.804,2940,3.804,2941,3.804,2942,3.804,2943,3.804,2944,3.804,2945,3.052,2946,3.804,2947,3.804,2948,5.421,2949,3.804,2950,3.804,2951,3.804,2952,3.804,2953,3.052,2954,3.804,2955,3.804,2956,3.804,2957,3.804,2958,3.804,2959,5.421,2960,3.804,2961,3.804,2962,3.804,2963,3.804,2964,3.804,2965,3.804,2966,3.804,2967,3.804,2968,3.804,2969,3.804,2970,3.804,2971,3.804,2972,3.804,2973,3.804,2974,3.804,2975,3.804,2976,5.421,2977,5.421,2978,3.804,2979,3.804,2980,3.804,2981,3.804,2982,3.804,2983,3.804,2984,3.804,2985,5.421,2986,3.804,2987,3.804,2988,3.804,2989,3.804,2990,3.804,2991,3.804,2992,3.804,2993,3.804,2994,3.804,2995,3.804,2996,3.804,2997,3.804,2998,5.421,2999,3.804,3000,3.804,3001,3.804,3002,3.804,3003,3.804,3004,5.421,3005,3.804,3006,3.351,3007,3.351,3008,3.804,3009,3.804,3010,3.804,3011,3.804,3012,3.804,3013,3.804,3014,3.804,3015,3.804,3016,3.804,3017,3.804,3018,3.804,3019,3.804,3020,3.804,3021,3.804,3022,3.804,3023,3.804,3024,3.804,3025,3.804,3026,3.052,3027,3.804,3028,3.804,3029,3.804,3030,3.804,3031,3.804,3032,3.804,3033,3.804,3034,3.804,3035,3.804,3036,3.804,3037,3.804,3038,3.804,3039,3.804]],["title/miscellaneous/functions.html",[3040,2.466,3041,4.304]],["body/miscellaneous/functions.html",[10,0.489,24,1.716,25,0.009,26,1.328,27,1.259,37,2.009,38,3.969,49,3.257,55,0.006,56,0.008,57,0.006,112,3.977,155,1.852,278,2.692,500,2.989,617,3.892,641,4.4,642,5.721,685,4.746,687,4.746,691,4.746,712,5.407,872,4.746,1009,5.066,1058,6.315,1880,4.123,1945,4.4,2108,4.123,2239,4.746,2280,4.123,2292,5.066,2852,6.404,2854,6.404,2860,4.746,2865,4.746,2895,5.211,2896,6.404,3040,3.892,3041,4.746,3042,5.211,3043,5.211,3044,6.933,3045,5.916,3046,5.916,3047,5.211,3048,5.916,3049,5.916,3050,5.916,3051,5.916,3052,5.916,3053,5.916]],["title/index.html",[10,0.31,1643,2.788,1644,2.788]],["body/index.html",[5,0.142,13,2.74,14,2.307,15,1.665,17,1.122,25,0.008,26,0.97,29,2.776,52,3.885,53,2.745,55,0.005,56,0.006,57,0.005,61,1.45,64,2.892,82,1.015,93,2.729,184,2.142,236,1.094,252,4.578,253,4.155,257,3.744,259,3.274,260,1.714,273,1.122,288,2.502,340,1.765,448,2.4,461,2.502,466,2.617,539,2.892,565,4.026,571,2.069,602,2.617,626,2.892,697,2.892,704,4.424,741,4.262,760,3.269,763,2.502,770,3.414,857,2.502,905,3.414,914,3.414,941,3.872,947,2.892,992,2.892,1286,2.502,1430,3.269,1525,5.108,1537,3.063,1614,3.063,1647,3.063,1648,5.475,1650,4.178,1659,3.872,1665,3.872,1666,3.872,1694,4.459,1704,5.663,1753,3.269,1787,4.262,1797,3.872,1838,7.138,1843,3.527,1852,3.269,1880,3.063,1977,3.872,2005,2.892,2037,2.617,2038,2.745,2058,4.811,2089,3.269,2138,3.269,2199,3.063,2204,3.063,2205,3.945,2242,6.011,2244,4.811,2247,3.527,2283,3.872,2329,3.269,2481,3.872,2516,3.872,2577,4.459,2578,3.527,2623,3.527,2737,3.872,2738,3.063,2813,3.872,2835,3.269,2844,3.872,3026,3.527,3054,3.527,3055,5.996,3056,6.352,3057,4.396,3058,3.872,3059,4.396,3060,3.063,3061,4.396,3062,4.396,3063,3.063,3064,3.269,3065,4.396,3066,3.872,3067,4.178,3068,3.872,3069,4.396,3070,3.527,3071,4.396,3072,6.011,3073,5.451,3074,3.744,3075,3.872,3076,5.996,3077,5.996,3078,7.672,3079,7.33,3080,4.396,3081,4.396,3082,5.996,3083,3.872,3084,4.396,3085,3.872,3086,5.996,3087,4.396,3088,3.872,3089,5.996,3090,5.996,3091,3.269,3092,3.872,3093,4.396,3094,4.396,3095,3.269,3096,3.269,3097,4.396,3098,4.396,3099,4.396,3100,2.892,3101,4.396,3102,4.396,3103,3.527,3104,4.396,3105,3.527,3106,3.872,3107,4.396,3108,4.396,3109,4.396,3110,3.527,3111,3.872,3112,4.178,3113,4.396,3114,4.396,3115,3.872,3116,4.396,3117,3.872]],["title/license.html",[1643,2.788,1644,2.788,3118,3.302]],["body/license.html",[0,0.027,4,0.263,5,0.037,13,2.995,17,0.218,22,0.093,25,0.002,29,0.593,39,0.048,52,1.53,53,0.534,55,0.002,56,0.002,57,0.002,64,1.031,81,0.188,82,0.966,94,0.595,123,0.389,155,1.768,158,0.562,164,0.376,169,1.53,197,2.378,199,1.6,201,1.265,202,0.328,207,1.165,212,1.911,213,3.323,242,0.333,247,2.881,260,2.487,265,5.616,269,0.315,285,0.466,287,0.892,290,0.389,308,0.978,323,0.534,328,0.635,377,0.376,381,0.343,395,0.562,398,2.378,399,0.534,430,0.873,444,0.416,445,0.416,461,1.235,466,1.6,468,0.635,478,0.486,500,0.432,525,2.1,532,0.595,536,1.678,537,2.419,539,2.751,571,0.737,590,0.871,598,1.428,599,2.283,602,2.1,608,1.31,612,0.764,620,0.466,622,0.978,653,0.635,673,0.978,719,1.165,745,0.562,748,0.686,752,1.096,756,0.635,761,2.156,763,0.892,764,1.165,767,1.768,770,0.892,780,0.534,797,2.692,833,0.978,853,3.819,905,2.807,906,0.595,911,0.534,914,1.235,915,0.686,994,1.031,1032,0.686,1043,4.12,1051,1.998,1149,0.595,1217,1.867,1257,0.595,1286,2.009,1295,0.686,1313,1.512,1339,3.798,1368,5.254,1396,0.635,1403,0.595,1432,1.911,1434,1.428,1454,2.458,1455,2.694,1512,0.686,1518,1.741,1521,0.686,1522,2.881,1534,1.614,1537,1.873,1559,3.927,1573,2.332,1581,2.516,1614,0.595,1649,0.753,1650,1.512,1654,1.998,1656,1.38,1664,0.635,1682,1.38,1694,0.635,1700,0.753,1704,2.549,1716,0.686,1721,0.753,1735,1.768,1741,1.38,1742,1.38,1746,1.257,1755,0.595,1775,0.686,1782,0.753,1785,1.165,1787,2.203,1791,1.38,1798,0.753,1801,0.753,1819,0.753,1836,1.873,1843,5.879,1850,2.516,1852,1.165,1862,0.686,1874,1.38,1876,0.753,1890,1.38,1910,1.38,1912,0.595,1920,0.753,1923,0.753,1926,0.753,1944,0.635,1945,2.332,1969,1.257,1973,0.753,1988,2.156,2010,0.753,2028,0.635,2038,0.978,2060,1.38,2064,1.257,2071,0.686,2088,4.12,2089,0.635,2095,2.881,2102,2.156,2110,0.753,2112,5.715,2113,3.5,2114,1.614,2117,5.926,2134,2.332,2138,1.165,2178,0.753,2195,1.428,2198,3.11,2212,4.882,2223,2.914,2229,0.686,2239,0.686,2257,0.686,2275,0.753,2277,1.38,2278,1.257,2282,3.684,2316,0.753,2341,1.768,2342,0.753,2344,0.753,2376,0.686,2382,0.753,2387,0.686,2406,1.165,2409,0.753,2420,0.686,2448,1.165,2469,0.753,2507,2.321,2513,1.257,2552,1.38,2577,1.998,2578,1.741,2584,1.38,2592,1.873,2602,0.635,2605,0.686,2623,1.257,2627,1.741,2663,1.38,2674,0.686,2700,1.614,2707,0.686,2710,2.831,2729,3.956,2738,0.595,2744,5.222,2745,1.38,2747,1.38,2756,0.753,2794,0.753,2800,1.38,2803,0.753,2819,3.667,2829,1.911,2873,0.753,2953,0.686,3056,0.686,3060,2.185,3063,1.873,3064,0.635,3067,0.595,3068,2.367,3070,1.741,3074,0.534,3088,0.753,3091,1.614,3100,3.244,3112,1.512,3118,7.574,3119,5.929,3120,5.795,3121,0.854,3122,2.17,3123,7.005,3124,3.136,3125,4.649,3126,5.334,3127,3.136,3128,0.854,3129,0.854,3130,1.567,3131,3.136,3132,2.17,3133,2.17,3134,5.135,3135,0.854,3136,0.854,3137,1.38,3138,3.136,3139,3.413,3140,1.567,3141,1.567,3142,4.837,3143,4.182,3144,0.854,3145,0.854,3146,3.528,3147,1.38,3148,0.854,3149,0.753,3150,4.343,3151,7.645,3152,2.17,3153,1.911,3154,0.854,3155,0.854,3156,2.687,3157,4.458,3158,0.854,3159,4.458,3160,1.257,3161,0.854,3162,2.687,3163,0.686,3164,2.687,3165,0.686,3166,4.976,3167,0.753,3168,0.854,3169,4.706,3170,4.931,3171,3.136,3172,5.135,3173,0.854,3174,1.567,3175,0.854,3176,0.854,3177,1.911,3178,0.854,3179,0.854,3180,0.854,3181,0.854,3182,0.854,3183,0.854,3184,2.687,3185,0.854,3186,2.17,3187,0.854,3188,0.854,3189,5.435,3190,1.614,3191,0.854,3192,0.854,3193,1.911,3194,2.17,3195,0.854,3196,0.635,3197,1.567,3198,1.567,3199,2.17,3200,7.678,3201,0.854,3202,4.687,3203,3.136,3204,3.136,3205,3.528,3206,0.686,3207,2.17,3208,4.588,3209,1.567,3210,0.854,3211,0.854,3212,0.854,3213,2.17,3214,0.854,3215,0.854,3216,1.567,3217,3.528,3218,0.854,3219,1.567,3220,0.854,3221,3.5,3222,0.854,3223,2.687,3224,0.753,3225,1.567,3226,7.61,3227,2.17,3228,4.458,3229,2.367,3230,1.257,3231,0.854,3232,1.567,3233,2.17,3234,4.458,3235,4.706,3236,0.854,3237,2.687,3238,1.567,3239,2.687,3240,2.687,3241,0.854,3242,2.17,3243,6.803,3244,1.38,3245,0.854,3246,4.182,3247,0.854,3248,2.17,3249,2.458,3250,0.854,3251,5.649,3252,1.911,3253,1.567,3254,3.413,3255,4.931,3256,3.528,3257,0.854,3258,1.567,3259,3.874,3260,0.854,3261,5.321,3262,1.567,3263,0.854,3264,0.854,3265,0.854,3266,2.17,3267,0.854,3268,0.854,3269,0.854,3270,0.686,3271,2.17,3272,2.367,3273,0.854,3274,0.854,3275,0.854,3276,1.38,3277,4.706,3278,0.753,3279,0.753,3280,1.911,3281,2.17,3282,1.911,3283,2.17,3284,0.854,3285,2.762,3286,3.108,3287,0.753,3288,2.17,3289,0.854,3290,0.854,3291,0.854,3292,0.854,3293,1.38,3294,0.854,3295,6.055,3296,1.38,3297,1.911,3298,0.595,3299,1.567,3300,2.687,3301,0.753,3302,0.854,3303,1.567,3304,0.854,3305,0.854,3306,0.854,3307,1.567,3308,0.854,3309,1.257,3310,0.854,3311,2.762,3312,0.854,3313,0.753,3314,3.874,3315,2.156,3316,0.854,3317,2.762,3318,0.854,3319,1.567,3320,0.854,3321,0.854,3322,0.854,3323,0.854,3324,0.854,3325,2.17,3326,0.854,3327,1.567,3328,1.567,3329,1.567,3330,0.854,3331,5.321,3332,1.567,3333,0.854,3334,0.854,3335,0.753,3336,0.854,3337,0.635,3338,0.854,3339,0.854,3340,2.17,3341,0.753,3342,0.854,3343,4.976,3344,0.686,3345,0.854,3346,0.854,3347,3.136,3348,3.108,3349,0.854,3350,0.854,3351,2.17,3352,0.854,3353,0.854,3354,2.687,3355,0.854,3356,0.854,3357,0.854,3358,0.854,3359,0.854,3360,0.854,3361,1.567,3362,0.854,3363,2.17,3364,0.854,3365,0.854,3366,1.567,3367,0.854,3368,0.854,3369,0.854,3370,0.854,3371,0.854,3372,1.567,3373,1.165,3374,3.927,3375,0.854,3376,3.528,3377,0.854,3378,0.854,3379,1.38,3380,2.17,3381,2.687,3382,2.687,3383,2.687,3384,0.854,3385,2.762,3386,3.136,3387,0.854,3388,2.17,3389,0.854,3390,1.567,3391,0.854,3392,1.38,3393,3.136,3394,1.567,3395,2.687,3396,2.687,3397,0.854,3398,2.17,3399,3.136,3400,0.854,3401,3.108,3402,0.854,3403,3.413,3404,2.17,3405,2.17,3406,1.567,3407,0.635,3408,0.854,3409,0.753,3410,0.854,3411,0.854,3412,2.17,3413,0.854,3414,0.854,3415,0.854,3416,0.854,3417,0.854,3418,2.17,3419,0.854,3420,0.753,3421,1.911,3422,1.567,3423,3.528,3424,5.62,3425,2.17,3426,1.567,3427,1.567,3428,1.567,3429,0.753,3430,0.854,3431,0.854,3432,0.854,3433,3.108,3434,1.567,3435,0.854,3436,0.854,3437,0.854,3438,0.854,3439,1.567,3440,0.854,3441,1.567,3442,0.854,3443,3.136,3444,0.854,3445,2.914,3446,0.854,3447,4.343,3448,0.854,3449,0.854,3450,0.854,3451,0.854,3452,1.567,3453,0.854,3454,2.687,3455,1.567,3456,0.753,3457,0.854,3458,0.854,3459,0.854,3460,0.854,3461,1.567,3462,0.854,3463,0.854,3464,0.753,3465,2.367,3466,0.854,3467,1.567,3468,0.854,3469,0.854,3470,2.17,3471,0.854,3472,0.854,3473,0.854,3474,0.854,3475,2.687,3476,0.854,3477,0.854,3478,0.854,3479,0.753,3480,0.753,3481,0.753,3482,0.854,3483,0.854,3484,0.854,3485,3.136,3486,0.854,3487,0.854,3488,2.687,3489,0.854,3490,0.753,3491,0.753,3492,0.854,3493,0.854,3494,0.854,3495,0.854,3496,0.854,3497,2.687,3498,0.854,3499,0.854,3500,2.17,3501,0.854,3502,0.686,3503,2.17,3504,0.854,3505,0.854,3506,0.854,3507,0.854,3508,0.854,3509,0.854,3510,0.854,3511,0.753,3512,1.38,3513,0.854,3514,0.595,3515,1.567,3516,0.753,3517,0.854,3518,2.687,3519,0.854,3520,0.854,3521,1.567,3522,2.17,3523,2.17,3524,0.753,3525,1.567,3526,0.854,3527,2.17,3528,3.874,3529,0.854,3530,0.854,3531,1.567,3532,0.854,3533,0.854,3534,0.854,3535,0.854,3536,2.687,3537,2.17,3538,0.854,3539,3.136,3540,0.854,3541,0.854,3542,0.854,3543,0.854,3544,0.753,3545,0.854,3546,1.567,3547,1.567,3548,1.38,3549,2.17,3550,0.753,3551,0.854,3552,1.257,3553,2.17,3554,0.854,3555,1.38,3556,0.854,3557,1.567,3558,0.854,3559,0.854,3560,1.567,3561,6.565,3562,2.17,3563,0.854,3564,3.136,3565,4.706,3566,2.17,3567,0.854,3568,0.753,3569,0.854,3570,0.854,3571,2.687,3572,0.854,3573,2.17,3574,0.854,3575,0.854,3576,0.854,3577,0.854,3578,0.854,3579,0.854,3580,0.854,3581,2.687,3582,1.567,3583,0.854,3584,0.854,3585,2.17,3586,0.854,3587,1.567,3588,2.17,3589,1.567,3590,0.854,3591,0.854,3592,0.854,3593,1.567,3594,2.17,3595,0.854,3596,0.753,3597,0.854,3598,0.854,3599,1.567,3600,0.854,3601,0.753,3602,0.854,3603,0.854,3604,0.854,3605,0.854,3606,2.17,3607,1.567,3608,0.753,3609,0.854,3610,0.854,3611,2.687,3612,0.854,3613,2.17,3614,0.854,3615,0.854,3616,1.567,3617,0.854,3618,0.854,3619,0.854,3620,2.17,3621,1.567,3622,1.567,3623,0.854,3624,1.567,3625,3.874,3626,1.38,3627,2.17,3628,2.687,3629,0.753,3630,0.854,3631,1.567,3632,0.854,3633,2.17,3634,0.854,3635,0.854,3636,0.854,3637,0.854,3638,0.854,3639,0.854,3640,2.17,3641,1.567,3642,0.854,3643,1.567,3644,0.753,3645,0.854,3646,0.854,3647,1.567,3648,1.567,3649,0.854,3650,1.567,3651,0.854,3652,0.854,3653,0.686,3654,0.854,3655,2.17,3656,0.854,3657,0.854,3658,0.854,3659,0.854,3660,1.567,3661,2.17,3662,0.854,3663,0.854,3664,0.854,3665,0.854,3666,0.686,3667,1.567,3668,0.854,3669,0.854,3670,0.854,3671,0.854,3672,0.854,3673,0.854,3674,0.854,3675,0.854,3676,0.635,3677,0.854,3678,0.854,3679,0.854,3680,2.687,3681,0.854,3682,0.854,3683,1.567,3684,0.854,3685,0.854,3686,0.854,3687,0.854,3688,0.854,3689,0.854,3690,0.854,3691,0.686,3692,0.854,3693,0.854,3694,0.854,3695,0.753,3696,1.567,3697,0.854,3698,0.854,3699,0.854,3700,0.854,3701,0.753,3702,1.567,3703,0.854,3704,0.854,3705,0.753,3706,0.753,3707,0.562,3708,0.854,3709,1.567,3710,1.567,3711,2.762,3712,0.854,3713,0.854,3714,0.854,3715,0.753,3716,0.854,3717,0.854,3718,2.17,3719,1.38,3720,0.854,3721,1.567,3722,1.567,3723,1.567,3724,0.854,3725,0.854,3726,0.854,3727,0.854,3728,0.753,3729,0.854,3730,0.854,3731,1.567,3732,0.854,3733,2.17,3734,0.854,3735,0.854,3736,0.854,3737,0.854,3738,0.854,3739,0.854,3740,0.854,3741,0.854,3742,0.854,3743,0.854,3744,0.854,3745,0.854,3746,0.686,3747,0.854,3748,0.854,3749,0.753,3750,0.854,3751,0.854,3752,0.854,3753,0.854,3754,0.854,3755,0.854,3756,0.854,3757,0.854,3758,0.854,3759,0.854,3760,0.854,3761,0.686,3762,0.753,3763,1.567,3764,1.38,3765,0.854,3766,0.854,3767,0.854,3768,0.854,3769,0.854,3770,0.854,3771,1.567,3772,0.854,3773,0.854,3774,0.753,3775,0.686,3776,0.854,3777,0.854,3778,0.686,3779,0.635,3780,0.854,3781,0.854,3782,0.854,3783,0.854]],["title/modules.html",[108,2.435]],["body/modules.html",[25,0.008,55,0.007,56,0.008,57,0.007,107,4.348,108,2.505,119,4.104,173,4.104,178,4.104,313,4.348,316,4.348,317,4.348,318,3.896,319,4.348,1117,4.348,1372,4.64,1376,4.348,2195,5.87,3100,5.3,3784,8.922,3785,8.922,3786,7.966,3787,8.056]],["title/overview.html",[3788,4.865]],["body/overview.html",[2,0.875,25,0.01,55,0.005,56,0.007,57,0.005,87,2.281,95,5.368,106,1.341,107,5.925,108,1.812,109,2.054,110,2.464,111,2.464,112,2.281,113,2.054,114,2.124,115,3.976,116,3.976,117,3.976,118,3.976,119,5.368,120,4.821,121,3.333,122,2.368,123,2.054,144,1.868,150,5.095,173,5.594,174,3.976,175,3.976,176,3.976,177,3.976,178,5.25,179,5.095,180,4.32,313,5.979,314,3.976,315,3.976,316,4.821,317,4.821,318,5.095,319,4.821,494,4.123,549,4.857,590,1.812,594,3.976,595,3.976,596,3.976,925,3.976,926,3.976,927,3.976,1007,5.368,1117,6.024,1118,3.976,1120,3.976,1121,3.976,1122,4.551,1369,4.551,1372,6.506,1373,3.976,1374,3.976,1375,3.976,1376,5.686,1427,4.551,1440,3.976,1441,3.976,1442,4.551,1627,3.976,1628,3.976,1629,3.976,1716,3.621,1795,3.621,1832,3.976,2068,3.976,3788,3.621,3789,4.514]],["title/todo.html",[258,1.551,1643,2.788,1644,2.788]],["body/todo.html",[0,0.137,5,0.102,11,0.719,16,0.437,25,0.009,26,0.96,32,0.646,47,3.114,48,2.465,49,2.455,52,4.344,55,0.006,56,0.006,57,0.005,65,2.11,85,2.037,93,2.7,106,1.286,114,2.037,123,2.7,125,2.465,146,2.383,155,1.355,184,2.892,201,2.037,202,1.595,215,1.428,236,1.477,249,4.761,252,3.705,253,4.136,258,1.791,259,3.696,260,2.84,273,1.515,284,4.135,321,2.848,327,3.904,331,2.577,332,3.473,335,3.219,375,1.594,443,2.998,448,2.363,459,3.114,461,3.378,494,2.187,500,2.998,518,2.577,519,2.577,538,2.703,565,3.114,590,1.738,600,3.854,608,2.11,612,3.299,621,3.219,640,3.219,642,3.017,669,2.848,672,2.703,701,4.718,702,4.135,741,2.703,742,5.675,763,4.147,779,3.705,815,2.848,858,3.219,906,3.017,921,3.017,953,3.219,994,2.848,1135,3.473,1192,3.473,1346,3.705,1396,5.035,1650,3.017,1654,3.219,1692,3.813,1706,3.813,1735,4.792,1752,5.844,1753,3.219,1758,3.813,1888,5.432,1889,2.848,1943,3.473,1988,3.473,2005,2.848,2019,3.473,2065,2.703,2102,3.473,2141,3.473,2177,3.473,2195,2.848,2198,3.219,2199,3.017,2205,2.848,2227,3.473,2297,4.761,2329,3.219,2387,3.473,2399,3.473,2401,3.473,2507,2.848,2602,3.219,2738,3.017,2769,3.473,2832,3.473,2835,3.219,3006,3.813,3007,3.813,3074,2.703,3085,3.813,3095,3.219,3105,3.473,3160,3.473,3163,3.473,3298,3.017,3335,3.813,3379,3.813,3401,3.473,3464,3.813,3715,5.226,3761,4.761,3779,3.219,3790,3.473,3791,4.329,3792,3.813,3793,3.813,3794,6.77,3795,3.473,3796,3.813,3797,4.329,3798,4.329,3799,4.329,3800,5.226,3801,4.329,3802,3.473,3803,5.035,3804,4.329,3805,4.329,3806,4.329,3807,4.329,3808,3.473,3809,4.329,3810,4.329,3811,4.329,3812,3.813,3813,4.329,3814,4.329,3815,4.329,3816,4.329,3817,3.219,3818,3.813,3819,4.329,3820,4.329,3821,4.329,3822,3.813,3823,3.813,3824,4.329,3825,3.813,3826,4.329,3827,4.329,3828,4.329,3829,4.329,3830,4.329,3831,4.329,3832,5.963,3833,4.329,3834,4.329,3835,4.329,3836,4.329,3837,4.329,3838,4.329,3839,3.813,3840,4.329,3841,4.329,3842,5.934,3843,3.813,3844,4.329]],["title/miscellaneous/typealiases.html",[3040,2.466,3845,5.365]],["body/miscellaneous/typealiases.html",[10,0.482,16,0.576,25,0.009,29,2.209,32,0.87,55,0.006,56,0.008,57,0.006,193,2.982,195,3.512,201,2.745,202,1.219,255,3.392,345,3.642,368,4.5,375,3.007,376,2.982,398,3.641,430,1.314,610,4.337,611,5.45,612,2.842,614,5.782,628,5.782,629,5.782,649,5.022,774,4.064,776,5.782,782,6.275,784,5.782,785,4.064,786,5.022,1153,6.275,1166,4.337,1180,6.347,1236,4.679,1265,5.136,1266,5.136,1331,4.679,1446,4.337,1447,4.679,1459,5.359,1728,5.136,1769,4.679,3040,3.836,3456,5.136,3846,5.831,3847,5.831,3848,5.831,3849,7.206,3850,7.206,3851,7.393,3852,5.831,3853,5.831,3854,5.136,3855,5.831,3856,5.831,3857,5.831,3858,4.064,3859,5.831]],["title/miscellaneous/variables.html",[1663,3.739,3040,2.466]],["body/miscellaneous/variables.html",[1,2.547,9,2.547,10,0.215,13,1.638,15,1.905,16,0.578,25,0.01,29,0.985,32,0.751,37,0.664,38,2.746,47,1.365,49,3.65,50,1.813,55,0.004,56,0.004,57,0.003,62,1.712,63,3.389,65,1.268,74,2.338,81,1.673,82,0.942,93,1.184,130,3.309,138,2.842,139,2.087,140,2.292,141,2.087,142,2.292,155,1.782,169,1.481,172,1.549,184,2.451,199,1.549,214,2.292,216,1.919,235,1.077,242,1.014,253,2.14,257,1.625,273,2.234,274,3.134,278,1.184,285,2.227,291,3.74,293,1.712,340,1.045,361,1.625,368,1.625,381,1.045,406,1.42,407,1.549,429,1.42,432,2.227,442,1.315,443,1.315,444,1.268,445,1.268,446,1.268,457,2.087,458,3.033,476,4.571,484,3.505,494,3.465,497,2.087,500,1.315,518,3.389,520,2.227,525,1.549,565,2.14,575,1.813,581,2.061,583,2.547,589,2.842,600,1.481,601,1.42,608,1.268,641,1.935,642,4.948,644,2.087,645,3.272,653,1.935,662,3.272,663,2.292,664,3.272,665,5.263,666,2.087,667,2.087,668,2.292,669,2.683,670,3.272,671,1.813,672,3.141,673,1.625,674,3.272,675,2.292,676,3.592,677,2.292,678,2.087,679,2.292,680,2.292,681,2.292,682,2.292,683,2.292,685,2.087,687,2.087,691,2.087,697,1.712,698,3.592,699,1.935,700,2.292,701,1.813,702,1.813,703,3.592,704,2.746,705,2.087,706,3.592,707,2.292,708,4.035,709,3.272,710,2.292,711,2.292,712,1.935,713,3.272,714,2.292,715,2.292,716,2.292,717,2.292,718,2.292,719,1.935,720,2.087,721,2.292,722,2.292,723,2.292,724,2.292,725,5.447,726,3.272,727,5.447,728,2.292,729,2.087,730,2.292,744,2.087,753,1.813,756,1.935,774,1.813,777,1.712,778,1.813,780,1.625,791,1.549,799,1.712,867,2.087,868,2.292,869,2.292,875,2.292,876,2.292,884,1.813,911,1.625,914,1.481,977,3.309,1040,2.087,1041,3.272,1166,1.935,1175,1.935,1182,3.272,1214,3.272,1228,1.813,1339,2.428,1387,3.309,1402,1.813,1403,2.842,1502,2.087,1505,2.547,1533,1.813,1558,1.813,1663,1.813,1690,2.292,1704,3.309,1735,1.712,2038,1.625,2065,1.625,2177,2.087,2217,2.292,2247,2.087,2292,1.813,2317,3.592,2329,1.935,2363,2.292,2479,2.292,2832,2.087,2843,2.292,2855,2.292,2856,5.015,2857,3.592,2858,4.43,2860,2.087,2861,3.592,2862,3.272,2863,3.592,2865,2.087,2870,2.292,2871,3.592,2872,3.592,2888,2.292,2889,4.43,2890,4.43,2891,4.43,2892,4.43,2893,2.292,2894,3.592,2897,5.015,2945,2.087,3040,1.712,3042,2.292,3043,4.43,3044,6.041,3073,4.234,3298,1.813,3808,4.035,3817,1.935,3832,2.292,3851,2.292,3854,3.592,3860,6.858,3861,2.602,3862,4.078,3863,2.602,3864,5.03,3865,2.602,3866,2.602,3867,2.602,3868,2.602,3869,2.602,3870,2.602,3871,2.602,3872,2.602,3873,2.602,3874,2.087,3875,2.292,3876,2.602,3877,2.292,3878,2.602,3879,2.087,3880,2.602,3881,2.602,3882,3.592,3883,4.078,3884,2.602,3885,2.602,3886,2.602,3887,2.602,3888,2.602,3889,2.602,3890,2.602,3891,2.602,3892,2.602,3893,2.602,3894,2.602,3895,2.602,3896,2.602,3897,2.602,3898,2.602,3899,2.602,3900,2.602,3901,2.602,3902,2.602,3903,2.292,3904,2.602,3905,2.602,3906,2.602,3907,2.602]],["title/additional-documentation/nestjs-application.html",[290,1.47,520,1.763,537,1.422,1315,1.574]],["body/additional-documentation/nestjs-application.html",[8,1.338,13,2.738,25,0.008,55,0.005,56,0.006,57,0.006,106,1.304,108,1.762,113,3.103,184,2.139,213,2.741,253,4.153,258,1.816,259,3.27,260,2.658,273,1.12,287,2.499,290,3.752,308,2.741,377,1.933,384,2.218,442,2.218,446,2.919,473,2.741,520,4.186,537,1.933,538,2.741,539,3.94,540,3.264,565,3.578,571,2.066,590,1.762,600,2.499,602,2.613,608,2.139,612,2.139,622,2.741,669,4.486,697,2.887,701,4.752,709,3.521,752,2.218,756,3.264,763,2.499,814,3.866,852,3.866,853,3.264,905,3.41,907,3.058,909,3.521,911,2.741,914,3.41,1131,3.866,1403,3.058,1525,4.752,1558,5.105,1704,5.206,1752,3.521,1755,3.058,1836,3.058,1862,3.521,1889,2.887,1963,4.454,2005,5.044,2019,3.521,2032,3.264,2037,3.565,2038,2.741,2061,3.521,2199,3.058,2204,3.058,2205,2.887,2223,3.058,2404,3.866,2572,3.866,2602,3.264,2605,5.471,2842,3.866,2862,5.471,2945,3.521,3054,3.521,3056,3.521,3058,3.866,3073,5.071,3074,4.258,3096,3.264,3100,2.887,3112,3.058,3125,3.521,3287,3.866,3297,3.866,3298,4.752,3343,3.866,3373,3.264,3445,3.058,3514,3.058,3601,3.866,3608,3.866,3746,3.521,3786,3.866,3817,3.264,3818,3.866,3822,5.276,3823,5.276,3858,5.105,3874,3.521,3875,3.866,3877,3.866,3879,4.805,3908,4.389,3909,3.866,3910,4.389,3911,4.389,3912,3.521,3913,4.389,3914,6.819,3915,4.389,3916,3.264,3917,4.389,3918,3.866,3919,4.389,3920,4.389,3921,4.389,3922,4.389,3923,7.326,3924,4.389,3925,4.389,3926,4.389,3927,4.389,3928,4.389,3929,4.389,3930,4.389,3931,4.389,3932,5.99,3933,4.389,3934,4.389,3935,4.389,3936,4.389,3937,4.389,3938,4.389,3939,4.389,3940,4.389,3941,4.389,3942,4.389,3943,3.866,3944,3.866,3945,4.389,3946,4.389,3947,4.389,3948,4.389,3949,5.99,3950,4.389,3951,5.99,3952,4.389,3953,4.389,3954,4.805,3955,3.866,3956,4.389,3957,4.389,3958,6.819,3959,5.99,3960,4.389,3961,4.389,3962,4.389,3963,3.866,3964,4.389,3965,3.521,3966,3.866,3967,4.389,3968,4.389,3969,4.389,3970,4.389,3971,4.389,3972,4.389]],["title/additional-documentation/nestjs-application/software-architecture.html",[537,1.422,1315,1.574,3126,2.591,3973,2.124]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.55,4,0.07,5,0.067,13,2.685,14,0.621,22,0.473,24,0.593,25,0.004,26,0.34,29,0.448,45,0.87,47,3.509,48,2.242,49,2.388,51,0.88,52,1.615,53,1.771,55,0.002,56,0.002,57,0.001,62,1.383,63,1.251,65,1.675,81,0.26,82,0.655,93,3.503,109,1.792,114,0.557,123,0.957,125,0.673,138,0.824,155,2.015,169,1.197,172,0.704,197,1.062,199,1.689,201,3.499,202,0.593,204,0.824,210,0.704,213,2.147,222,0.949,236,1.176,252,4.563,253,0.621,255,0.557,258,0.489,259,1.148,260,2.689,264,0.88,265,1.866,273,0.302,274,1.016,283,0.646,285,4.539,286,0.778,287,1.957,288,3.494,290,3.093,308,1.771,323,3.146,324,1.686,327,3.108,328,0.88,329,3.655,331,0.704,340,0.475,343,1.563,361,1.771,376,0.87,377,0.926,398,1.062,406,1.549,411,0.739,429,0.646,430,1.252,432,0.646,445,0.576,448,1.148,460,0.88,466,1.251,473,2.724,478,1.197,486,0.778,492,4.457,493,3.747,500,3.434,511,0.824,518,0.704,525,3.163,536,2.95,537,1.25,539,3.655,565,1.489,571,3.332,581,1.737,590,0.844,599,3.865,600,1.615,601,2.579,602,2.344,604,1.383,608,1.675,620,0.646,626,1.866,630,2.11,671,0.824,672,3.604,673,0.739,678,0.949,699,0.88,702,0.824,704,1.877,741,1.313,752,3.933,753,0.824,763,0.673,767,1.383,769,3.747,770,1.197,777,0.778,779,0.739,780,0.739,781,0.778,795,1.465,797,2.579,798,0.88,799,0.778,809,0.824,815,1.866,821,3.499,834,0.739,854,0.88,855,2.261,857,1.957,858,0.88,859,4.263,897,0.88,906,1.977,907,0.824,911,1.313,912,0.778,914,0.673,915,2.758,919,1.563,947,0.778,984,0.778,990,1.851,992,0.778,1149,0.824,1220,0.824,1228,0.824,1257,0.824,1286,0.673,1315,0.576,1339,0.704,1368,0.88,1407,0.949,1410,0.88,1434,2.261,1454,1.977,1455,2.644,1474,1.851,1475,3.159,1477,0.824,1505,2.724,1520,2.11,1525,0.824,1526,1.563,1533,0.824,1536,0.88,1537,0.824,1538,0.949,1557,1.563,1581,4.924,1647,1.465,1648,1.686,1654,2.11,1657,2.276,1663,0.824,1664,2.929,1669,1.042,1678,1.042,1681,1.686,1683,1.042,1686,1.042,1725,1.042,1727,2.499,1753,0.88,1755,0.824,1764,1.042,1768,1.042,1769,1.686,1785,0.88,1787,2.147,1829,1.851,1836,3.292,1850,6.623,1852,0.88,1857,1.686,1880,1.465,1883,1.977,1888,3.159,1889,2.261,1907,1.042,1908,1.042,1912,2.395,1914,5.862,1936,1.042,1944,1.563,1963,0.88,1969,0.949,1980,1.851,2005,1.383,2028,1.563,2032,0.88,2037,0.704,2044,2.499,2058,0.949,2064,0.949,2065,3.318,2079,3.159,2087,1.042,2088,3.159,2089,2.11,2095,2.556,2099,0.88,2106,3.028,2113,3.243,2114,0.88,2118,1.042,2134,4.787,2137,1.042,2138,1.563,2141,0.949,2143,1.042,2149,1.042,2159,1.686,2164,2.499,2181,4.893,2198,2.11,2199,0.824,2200,1.042,2204,1.977,2205,1.866,2210,3.243,2212,3.243,2223,1.465,2233,6.123,2244,0.949,2278,0.949,2285,0.88,2292,0.824,2293,3.469,2294,0.949,2305,1.851,2337,2.499,2341,2.591,2346,0.88,2356,1.851,2362,2.499,2396,1.042,2401,0.949,2406,0.88,2418,2.276,2420,0.949,2448,2.556,2450,1.042,2460,0.949,2507,2.869,2513,0.949,2515,1.042,2553,1.042,2560,1.042,2571,1.851,2592,1.977,2593,3.469,2604,1.851,2627,1.686,2658,0.949,2692,0.949,2695,0.949,2699,3.028,2700,0.88,2707,2.276,2710,0.949,2723,1.042,2729,1.686,2758,1.042,2769,3.79,2783,1.042,2809,1.042,2819,1.563,2840,1.851,2841,1.851,3026,1.686,3054,2.276,3060,1.977,3063,3.292,3064,2.556,3067,0.824,3070,1.686,3072,1.042,3091,0.88,3095,0.88,3096,0.88,3100,1.383,3112,1.465,3125,1.686,3126,0.949,3137,1.851,3139,1.042,3142,1.042,3147,1.042,3150,1.042,3153,1.042,3163,0.949,3166,1.042,3177,1.042,3189,1.851,3190,3.243,3193,3.841,3196,1.563,3208,2.556,3221,2.929,3224,1.042,3229,1.042,3230,4.457,3249,0.824,3252,1.042,3254,1.851,3270,0.949,3272,2.499,3276,1.042,3278,1.042,3285,1.042,3286,2.499,3295,1.042,3296,1.042,3309,0.949,3311,1.042,3313,1.851,3315,0.949,3317,1.042,3337,0.88,3344,2.758,3348,1.042,3373,0.88,3374,1.042,3392,1.042,3401,3.159,3403,1.042,3407,0.88,3421,1.042,3424,1.042,3429,1.042,3433,1.851,3445,0.824,3447,1.042,3465,1.042,3479,1.851,3480,3.469,3490,2.499,3491,1.042,3502,0.949,3511,3.028,3512,1.042,3514,0.824,3516,1.042,3524,1.042,3544,1.042,3548,1.042,3550,1.042,3552,4.263,3555,1.042,3568,1.042,3596,3.841,3626,1.042,3644,1.042,3653,3.79,3676,4.435,3691,0.949,3705,1.042,3706,1.042,3707,3.655,3719,1.042,3749,1.851,3762,1.042,3778,0.949,3779,0.88,3788,0.949,3790,1.686,3793,1.042,3795,3.499,3800,1.042,3825,1.851,3843,1.042,3912,0.949,3916,1.563,3955,1.042,3973,4.891,3974,1.183,3975,1.183,3976,5.083,3977,5.313,3978,2.102,3979,2.837,3980,2.837,3981,4.042,3982,2.102,3983,2.499,3984,4.724,3985,1.183,3986,1.183,3987,2.556,3988,3.028,3989,1.183,3990,1.183,3991,1.183,3992,1.183,3993,1.183,3994,2.102,3995,2.102,3996,1.183,3997,1.183,3998,3.938,3999,1.183,4000,1.183,4001,2.837,4002,2.102,4003,1.183,4004,1.183,4005,1.183,4006,1.183,4007,6.926,4008,1.183,4009,1.183,4010,1.183,4011,1.183,4012,2.102,4013,4.361,4014,1.183,4015,1.183,4016,2.102,4017,2.102,4018,3.437,4019,2.837,4020,3.437,4021,1.183,4022,3.028,4023,3.028,4024,1.183,4025,1.183,4026,1.183,4027,1.183,4028,1.183,4029,1.183,4030,2.758,4031,2.102,4032,0.949,4033,2.837,4034,1.183,4035,1.183,4036,1.183,4037,6.687,4038,1.183,4039,6.832,4040,1.183,4041,1.851,4042,1.183,4043,1.183,4044,2.102,4045,1.042,4046,3.951,4047,5.313,4048,1.183,4049,2.837,4050,2.102,4051,2.102,4052,1.183,4053,1.183,4054,1.183,4055,1.183,4056,1.183,4057,1.183,4058,3.028,4059,2.102,4060,1.183,4061,0.949,4062,1.042,4063,1.183,4064,1.183,4065,1.183,4066,1.042,4067,1.183,4068,2.499,4069,1.183,4070,1.183,4071,1.183,4072,1.183,4073,1.183,4074,1.183,4075,1.183,4076,1.042,4077,1.183,4078,2.837,4079,1.183,4080,1.183,4081,1.183,4082,2.758,4083,2.102,4084,1.183,4085,2.102,4086,2.837,4087,1.183,4088,1.183,4089,1.183,4090,1.851,4091,2.102,4092,2.837,4093,1.183,4094,1.183,4095,1.183,4096,1.183,4097,1.183,4098,1.183,4099,1.042,4100,1.183,4101,2.102,4102,1.183,4103,1.686,4104,1.183,4105,5.313,4106,1.183,4107,1.042,4108,1.042,4109,1.183,4110,1.183,4111,1.183,4112,0.949,4113,1.183,4114,1.183,4115,1.183,4116,1.183,4117,2.837,4118,1.183,4119,2.102,4120,2.837,4121,1.183,4122,1.183,4123,1.183,4124,1.183,4125,2.102,4126,1.183,4127,1.183,4128,1.183,4129,1.851,4130,1.183,4131,1.042,4132,1.183,4133,1.183,4134,2.102,4135,1.183,4136,1.183,4137,2.102,4138,1.183,4139,1.183,4140,1.042,4141,1.183,4142,1.183,4143,1.042,4144,1.183,4145,1.183,4146,2.102,4147,1.183,4148,1.183,4149,1.183,4150,1.183,4151,1.183,4152,1.042,4153,1.183,4154,1.183,4155,1.183,4156,1.042,4157,1.042,4158,2.837,4159,1.183,4160,1.183,4161,1.183,4162,1.183,4163,1.183,4164,1.183,4165,2.102,4166,1.183,4167,1.042,4168,1.183,4169,2.837,4170,1.183,4171,1.183,4172,1.183,4173,2.102,4174,1.183,4175,2.102,4176,1.183,4177,1.183,4178,1.183,4179,1.183,4180,1.183,4181,1.183,4182,1.183,4183,2.102,4184,1.183,4185,1.183,4186,1.183,4187,1.183,4188,1.183,4189,1.183,4190,1.183,4191,1.183,4192,7.236,4193,1.183,4194,1.183,4195,3.938,4196,1.042,4197,1.183,4198,1.183,4199,2.102,4200,1.183,4201,1.183,4202,1.183,4203,1.183,4204,1.183,4205,1.183,4206,1.183,4207,1.042,4208,1.183,4209,1.183,4210,1.183,4211,1.042,4212,1.183,4213,1.183,4214,1.183,4215,1.183,4216,2.102,4217,1.183,4218,1.183,4219,2.276,4220,1.183,4221,1.183,4222,1.042,4223,1.183,4224,1.183,4225,1.183,4226,3.938,4227,1.183,4228,1.183,4229,1.183,4230,1.183,4231,1.183,4232,1.183,4233,1.183,4234,1.183,4235,1.183,4236,1.183,4237,1.183,4238,1.183,4239,1.183,4240,1.183,4241,2.102,4242,1.183,4243,1.183,4244,1.183,4245,2.102,4246,1.183,4247,1.183,4248,1.183,4249,2.102,4250,1.183,4251,1.183,4252,1.183,4253,1.183,4254,1.183,4255,1.042,4256,2.102,4257,1.183,4258,2.102,4259,1.183,4260,1.183,4261,1.183,4262,1.042,4263,2.102]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.139,537,1.249,1315,1.382,3973,1.866,4046,2.109]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.22,2,0.375,3,0.079,4,0.064,5,0.165,11,0.683,13,1.652,16,0.236,19,0.575,22,0.756,25,0.01,26,1.027,39,0.182,43,0.234,47,3.006,48,2.342,52,1.827,55,0.006,56,0.003,57,0.002,63,1.911,64,3.151,65,0.943,74,1.499,81,0.904,82,0.741,85,3.282,87,2.684,91,1.348,94,1.348,98,0.91,102,1.322,106,2.327,108,2.8,109,0.88,113,1.461,114,2.696,125,1.827,143,0.458,146,1.289,147,1.552,155,1.793,156,1.328,165,1.684,169,1.101,173,1.272,178,2.707,179,2.004,180,2.991,184,2.589,199,3.162,201,2.5,202,1.269,204,1.348,210,3.923,236,0.481,242,0.754,253,3.333,255,2.856,257,2.991,259,1.056,260,3.229,266,1.552,267,1.552,273,0.494,283,1.752,284,2.237,285,2.9,287,2.727,289,2.707,290,0.88,307,1.348,308,1.208,321,2.707,331,1.911,345,1.208,375,1.515,377,1.414,381,1.652,406,1.752,413,1.208,430,0.436,446,0.943,448,2.246,456,1.272,459,3.185,461,1.101,473,2.004,478,1.101,483,2.449,490,1.438,492,3.301,518,1.151,520,2.9,532,1.348,536,3.578,537,1.812,538,1.208,540,1.438,542,1.552,547,1.704,549,3.41,565,3.566,571,3.355,581,0.977,590,1.289,598,1.272,599,3.468,600,3.024,601,3.128,603,2.707,604,1.272,605,1.272,606,1.272,608,2.589,611,1.348,612,0.943,616,1.151,621,2.387,626,1.272,630,1.438,640,1.438,657,1.704,669,1.272,672,1.208,673,1.208,702,2.867,704,2.615,740,3.301,741,1.208,742,2.387,752,3.67,753,1.348,760,1.438,764,1.438,767,1.272,769,3.06,770,1.827,779,2.004,780,3.578,781,2.707,791,1.911,809,1.348,848,0.977,854,1.438,855,3.151,857,1.101,862,1.438,884,1.348,897,2.387,905,1.101,913,1.704,914,2.342,919,2.387,921,1.348,932,1.438,977,2.112,985,1.348,994,3.495,1002,1.348,1018,1.704,1019,1.704,1020,1.704,1021,1.704,1022,1.704,1023,1.704,1032,1.552,1051,3.06,1178,1.704,1220,2.237,1286,1.827,1339,1.911,1340,1.552,1346,1.208,1387,1.272,1409,1.552,1434,2.112,1455,3.185,1477,1.348,1505,1.208,1524,1.552,1525,3.337,1526,1.438,1527,1.552,1533,3.337,1534,2.387,1536,1.438,1538,1.552,1614,1.348,1657,1.552,1663,1.348,1664,3.06,1677,1.438,1681,3.842,1708,1.704,1735,2.707,1745,1.704,1787,2.004,1824,1.704,1849,1.704,1883,2.237,1889,2.707,1912,2.237,1914,1.552,1943,1.552,1945,1.438,1946,2.575,2037,3.781,2065,2.991,2095,1.438,2099,2.387,2101,2.827,2107,1.704,2108,2.867,2113,1.438,2114,1.438,2134,1.438,2147,1.704,2159,3.301,2170,1.552,2210,1.438,2223,2.237,2227,3.301,2229,2.575,2233,5.402,2238,1.704,2240,1.704,2257,2.575,2280,3.702,2292,2.867,2297,1.552,2324,1.704,2331,1.552,2334,1.704,2341,1.272,2346,1.438,2349,1.704,2367,1.704,2368,1.704,2455,1.704,2494,1.704,2507,1.272,2577,1.438,2592,1.348,2620,3.624,2634,2.575,2669,1.704,2675,1.552,2695,1.552,2705,1.552,3047,1.704,3060,1.348,3063,1.348,3066,1.704,3067,1.348,3074,1.208,3083,1.704,3091,1.438,3092,1.704,3095,1.438,3096,3.562,3100,2.112,3103,1.552,3106,1.704,3111,1.704,3112,3.337,3115,1.704,3117,1.704,3149,1.704,3165,1.552,3167,1.704,3190,2.387,3196,1.438,3206,3.301,3208,1.438,3221,3.95,3230,1.552,3244,1.704,3249,2.237,3270,1.552,3279,1.704,3280,1.704,3282,1.704,3301,1.704,3309,1.552,3315,1.552,3337,1.438,3341,1.704,3344,1.552,3373,3.06,3385,1.704,3407,1.438,3445,1.348,3481,1.704,3502,1.552,3514,1.348,3552,2.575,3629,3.624,3666,2.575,3676,2.387,3701,1.704,3707,1.272,3728,1.704,3778,1.552,3779,2.387,3795,3.842,3796,3.624,3803,4.901,3808,3.301,3812,1.704,3839,3.624,3858,3.337,3879,3.842,3882,1.704,3903,1.704,3912,1.552,3918,1.704,3943,1.704,3944,3.624,3954,2.575,3973,2.707,3976,1.704,3987,1.438,4007,3.624,4022,1.704,4023,1.704,4030,1.552,4039,6.645,4041,1.704,4045,2.827,4046,4.513,4061,3.301,4062,1.704,4066,1.704,4068,1.704,4076,1.704,4082,1.552,4090,1.704,4099,2.827,4103,5.452,4107,3.624,4112,3.842,4140,1.704,4143,2.827,4157,3.624,4167,2.827,4207,2.827,4211,1.704,4219,1.552,4262,1.704,4264,1.704,4265,1.934,4266,1.934,4267,5.346,4268,2.827,4269,1.934,4270,1.934,4271,3.21,4272,4.789,4273,1.934,4274,1.934,4275,1.934,4276,1.934,4277,1.934,4278,1.934,4279,1.934,4280,3.21,4281,1.934,4282,5.312,4283,1.934,4284,1.934,4285,1.704,4286,3.21,4287,4.114,4288,1.934,4289,1.934,4290,1.934,4291,1.934,4292,1.934,4293,1.934,4294,1.934,4295,1.704,4296,3.21,4297,1.934,4298,1.704,4299,1.934,4300,1.934,4301,1.934,4302,1.934,4303,1.934,4304,1.934,4305,1.934,4306,1.934,4307,3.21,4308,3.21,4309,1.934,4310,1.934,4311,3.21,4312,1.934,4313,1.934,4314,1.934,4315,1.934,4316,1.934,4317,1.934,4318,1.934,4319,1.934,4320,1.934,4321,1.934,4322,1.934,4323,1.934,4324,1.934,4325,1.934,4326,1.934,4327,1.934,4328,1.934,4329,1.934,4330,1.934,4331,1.934,4332,1.934,4333,1.934,4334,1.552,4335,1.934,4336,1.934,4337,1.934,4338,1.934,4339,1.934,4340,1.704,4341,1.934,4342,1.934,4343,1.934,4344,1.934,4345,1.934,4346,1.934,4347,1.934,4348,1.704,4349,1.934,4350,1.934,4351,1.934,4352,1.934,4353,1.934,4354,1.934,4355,1.934,4356,1.934,4357,1.934,4358,3.21,4359,2.827,4360,1.934,4361,1.934,4362,1.934,4363,1.934,4364,1.934,4365,1.934,4366,1.934,4367,1.934,4368,1.934,4369,1.704,4370,1.934,4371,1.704,4372,1.934,4373,1.704,4374,1.552,4375,1.704,4376,1.934]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[537,1.249,1315,1.382,3803,2.109,3987,2.109,4377,2.498]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.029,22,0.374,25,0.009,32,0.515,46,2.768,49,1.428,52,3.403,53,3.155,55,0.004,56,0.005,57,0.004,64,2.27,74,1.581,81,1.11,82,1.52,91,2.404,102,0.859,123,1.57,146,1.385,155,2.515,156,1.428,165,3.674,172,2.054,193,2.091,202,1.056,210,4.355,222,4.053,255,2.378,258,1.428,259,2.758,260,3.176,285,4.126,286,3.932,287,1.964,288,1.964,289,2.27,290,3.33,307,2.404,308,3.155,321,2.27,324,4.053,327,2.27,328,2.566,329,2.27,370,1.811,378,1.884,381,2.4,391,3.324,398,1.743,404,2.553,430,0.777,460,4.445,478,3.746,493,2.566,500,1.743,511,2.404,518,2.054,520,2.758,536,4.84,571,1.624,581,2.553,599,1.884,601,4.317,605,2.27,606,2.27,608,2.462,671,2.404,672,2.155,684,2.566,697,2.27,704,2.758,752,3.538,760,2.566,764,2.566,779,3.155,848,1.743,853,2.566,857,1.964,912,3.932,914,2.876,1225,2.27,1228,2.404,1257,2.404,1268,3.039,1300,3.039,1346,2.155,1407,2.768,1434,2.27,1455,3.136,1520,2.566,1522,2.566,1527,2.768,1558,2.404,1647,2.404,1650,2.404,1675,5.264,1677,2.566,1704,2.27,1711,3.039,1787,2.155,1889,3.324,1912,4.165,1944,2.566,1946,2.768,1963,2.566,2071,2.768,2079,2.768,2108,2.404,2112,4.053,2170,2.768,2212,2.566,2233,2.566,2245,3.039,2285,2.566,2304,4.053,2341,2.27,2346,5.207,2448,2.566,2460,2.768,2592,3.52,2634,4.053,2658,2.768,2675,4.053,2700,2.566,2819,2.566,2953,2.768,3041,2.768,3060,3.52,3063,2.404,3064,3.757,3067,2.404,3103,2.768,3105,2.768,3160,2.768,3165,4.053,3190,5.441,3196,2.566,3202,3.039,3208,2.566,3221,3.757,3249,2.404,3337,3.757,3407,2.566,3445,3.52,3514,2.404,3653,2.768,3676,2.566,3695,3.039,3707,2.27,3746,2.768,3761,2.768,3774,4.45,3775,2.768,3790,2.768,3802,2.768,3803,6.286,3858,2.404,3909,3.039,3954,2.768,3973,4.328,3983,3.039,3987,3.757,3988,3.039,4030,2.768,4032,2.768,4039,5.618,4061,2.768,4082,2.768,4103,2.768,4112,4.053,4131,3.039,4156,3.039,4196,3.039,4222,3.039,4264,3.039,4267,4.45,4285,4.45,4334,2.768,4348,3.039,4359,3.039,4371,3.039,4373,3.039,4374,2.768,4377,3.039,4378,3.45,4379,3.45,4380,3.45,4381,3.45,4382,3.45,4383,3.45,4384,3.45,4385,3.45,4386,5.052,4387,3.45,4388,3.45,4389,3.45,4390,3.45,4391,3.45,4392,3.45,4393,3.45,4394,3.45,4395,3.45,4396,3.45,4397,3.45,4398,3.45,4399,3.45,4400,3.45,4401,3.45,4402,3.45,4403,3.45,4404,3.45,4405,3.45,4406,3.45,4407,3.45,4408,3.45,4409,3.45,4410,3.45,4411,3.45,4412,3.45,4413,3.45,4414,5.052,4415,3.45,4416,3.45,4417,3.45,4418,3.45,4419,3.45,4420,3.45,4421,3.45,4422,3.45,4423,3.45,4424,3.45,4425,3.45,4426,3.45,4427,3.45,4428,3.45,4429,3.45,4430,3.45,4431,3.45,4432,3.45,4433,3.45,4434,3.45,4435,3.45,4436,3.45,4437,3.45,4438,3.45,4439,3.45,4440,3.45,4441,3.45,4442,3.45,4443,3.45,4444,3.45,4445,5.052,4446,3.45,4447,2.768,4448,3.45,4449,3.45,4450,3.45,4451,3.45,4452,3.45]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[323,1.771,537,1.249,1315,1.382,3707,1.866,3981,2.275]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.183,13,2.668,14,2.192,15,1.582,16,0.528,19,1.241,21,4.645,25,0.01,26,0.676,29,2.193,32,1.235,39,0.376,43,0.171,46,3.351,47,3.038,48,3.783,49,3.118,53,2.608,55,0.004,56,0.006,57,0.006,62,2.748,63,2.486,65,3.672,93,1.901,106,2.239,125,3.296,143,0.989,146,1.677,164,1.84,169,2.378,199,2.486,213,4.149,250,3.351,253,2.192,255,3.127,257,2.608,260,2.797,273,1.923,283,2.28,285,4.113,286,2.748,287,3.296,288,2.378,290,1.901,307,2.911,318,3.615,321,2.748,323,3.615,327,2.748,329,4.719,335,3.106,430,1.304,466,3.446,494,4.117,500,4.18,508,3.106,517,3.679,518,3.446,519,2.486,520,3.161,522,2.911,531,3.351,532,4.034,536,2.608,537,2.55,538,4.149,571,2.725,603,2.748,672,4.149,673,5.088,701,4.034,705,3.351,752,2.111,770,3.296,815,3.809,820,3.679,821,3.351,823,3.679,827,3.679,829,3.679,830,3.679,855,2.748,857,3.296,905,2.378,906,2.911,908,3.679,911,2.608,919,4.305,921,4.034,1031,4.305,1127,3.679,1275,3.679,1286,2.378,1455,3.038,1477,2.911,1639,3.351,1694,3.106,1787,2.608,1880,2.911,2037,2.486,2065,2.608,2099,3.106,2210,3.106,2352,3.679,2406,3.106,2564,5.099,3074,2.608,3293,3.679,3420,3.679,3666,3.351,3707,2.748,3711,3.679,3916,3.106,3981,4.645,4108,3.679,4152,3.679,4268,3.679,4295,3.679,4298,3.679,4334,3.351,4340,3.679,4369,3.679,4374,3.351,4375,3.679,4453,4.177,4454,7.174,4455,4.177,4456,7.174,4457,4.177,4458,4.177,4459,4.177,4460,6.644,4461,4.177,4462,4.177,4463,4.177,4464,4.177,4465,5.789,4466,4.177,4467,4.177,4468,4.177,4469,4.177,4470,4.177,4471,4.177,4472,5.789,4473,4.177,4474,4.177,4475,4.177,4476,4.177,4477,4.177,4478,4.177,4479,4.177,4480,4.177,4481,4.177,4482,4.177,4483,4.177,4484,4.177]],["title/additional-documentation/nestjs-application/decisions.html",[537,1.652,1315,1.827,4447,3.008]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.367,25,0.008,47,2.957,55,0.006,56,0.008,57,0.006,93,2.565,102,1.403,202,1.178,210,4.2,236,1.403,243,2.018,252,3.519,260,3.002,265,3.708,288,3.209,358,3.209,446,3.438,520,3.077,525,3.355,605,4.641,606,3.708,620,3.077,745,3.708,749,4.191,752,2.848,905,3.209,920,4.964,947,5.066,953,4.191,1220,4.916,1286,3.209,1455,2.957,1505,4.406,1647,3.927,1755,3.927,1857,4.522,1883,3.927,1974,4.964,2032,5.727,2037,3.355,2061,4.522,2065,3.519,2186,4.964,2195,5.066,2214,4.964,2280,3.927,2294,4.522,2341,3.708,2418,5.66,2443,4.964,2466,6.214,2507,3.708,2652,4.964,2705,4.522,3249,3.927,3691,4.522,3775,4.522,3802,4.522,3916,4.191,3973,3.708,4032,5.66,4046,4.191,4058,4.964,4219,4.522,4255,4.964,4447,5.66,4485,5.636,4486,5.636,4487,5.636,4488,5.636,4489,5.636,4490,5.636,4491,5.636,4492,5.636,4493,5.636,4494,7.055,4495,5.636,4496,5.636,4497,5.636,4498,5.636,4499,5.636,4500,5.636,4501,5.636,4502,5.636,4503,5.636,4504,5.636,4505,5.636,4506,5.636,4507,5.636,4508,5.636]],["title/additional-documentation/nestjs-application/vscode.html",[537,1.652,1315,1.827,3965,3.008]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.177,25,0.009,52,4.264,55,0.007,56,0.008,57,0.007,253,3.93,289,4.087,290,3.409,323,3.879,520,4.089,565,3.26,612,3.65,1149,4.329,1455,3.26,1505,3.879,1537,4.329,1557,4.62,1677,4.62,1735,4.927,1836,4.329,2028,4.62,2037,3.698,2108,4.329,2331,6.009,2674,4.984,3073,4.62,3074,3.879,3075,6.597,3206,4.984,3298,4.329,3409,5.472,3764,7.082,3792,5.472,3817,5.57,3858,4.329,3874,4.984,3963,5.472,3965,6.009,3966,5.472,4509,6.212,4510,6.212,4511,6.212,4512,6.212,4513,6.212,4514,6.212,4515,6.212,4516,6.212,4517,6.212,4518,6.212]],["title/additional-documentation/nestjs-application/git.html",[537,1.652,1315,1.827,3110,3.008]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.007,56,0.009,57,0.007,169,3.892,331,4.07,445,3.332,855,4.497,857,3.892,1387,4.497,2738,4.764,2835,5.894,3110,6.716,4129,6.022,4519,6.836,4520,6.836,4521,6.836,4522,6.836,4523,6.836]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":1225,"title":{},"body":{"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2882,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2887,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2878,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2850,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2864,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2851,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2876,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2875,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2886,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1217,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["1.0.0",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2849,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2879,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2883,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2877,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2885,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1313,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"license.html":{}}}],["100",{"_index":2844,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1910,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2068,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.0",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1801,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1795,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1791,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1785,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1832,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1735",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1892,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1782,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3360,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1573,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["2.0.3",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2884,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1775,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3122,"title":{},"body":{"license.html":{}}}],["2015",{"_index":1456,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["2020",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["2030",{"_index":1457,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["21",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2839,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2381,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1826,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1859,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1891,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1837,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1667,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2376,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3813,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1522,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["3.0.0",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2874,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1819,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2578,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["4.0.0",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3062,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2867,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2869,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3825,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3789,"title":{},"body":{"overview.html":{}}}],["4215",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1716,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["5.0.1",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2881,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2880,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5000",{"_index":1541,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["5007",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1743,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2868,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1779,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2873,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["60s",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["6122",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3440,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3459,"title":{},"body":{"license.html":{}}}],["7",{"_index":1741,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1738,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2866,"title":{},"body":{"coverage.html":{}}}],["8020",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":3927,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1668,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1736,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1851,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1873,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1817,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1660,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":3935,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1319,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["999",{"_index":3082,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":472,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":3943,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":3941,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1199,"title":{},"body":{"classes/NewsScope.html":{}}}],["a.m",{"_index":3114,"title":{},"body":{"index.html":{}}}],["ability",{"_index":3502,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3112,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3384,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3754,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3582,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3581,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3806,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":599,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["access_token",{"_index":101,"title":{},"body":{"classes/AuthEntity.html":{}}}],["accessable",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2278,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2293,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1203,"title":{},"body":{"classes/NewsScope.html":{}}}],["accompanied",{"_index":3425,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3758,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3195,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3383,"title":{},"body":{"license.html":{}}}],["according",{"_index":3749,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":796,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["accountid",{"_index":794,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["accounts",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3762,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3323,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3631,"title":{},"body":{"license.html":{}}}],["action",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2674,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3242,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3672,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3480,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3220,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["added",{"_index":914,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1678,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":537,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":3924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1200,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1206,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3706,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3215,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2305,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2044,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1651,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2149,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3358,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3508,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3745,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3509,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3120,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3612,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3320,"title":{},"body":{"license.html":{}}}],["again",{"_index":2572,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3373,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["age",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3412,"title":{},"body":{"license.html":{}}}],["aggregated",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3783,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3689,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3732,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3640,"title":{},"body":{"license.html":{}}}],["aims",{"_index":3974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":874,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3619,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1677,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1434,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["allows",{"_index":1557,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["along",{"_index":3386,"title":{},"body":{"license.html":{}}}],["already",{"_index":1149,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3178,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3436,"title":{},"body":{"license.html":{}}}],["always",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1769,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3583,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3171,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3346,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3396,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3229,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2861,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apiproperty",{"_index":103,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({description",{"_index":1167,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1188,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1186,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1053,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1184,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1181,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1001,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":1015,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1436,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":772,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["app_filter",{"_index":335,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":334,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":332,"title":{},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"todo.html":{}}}],["app_pipe",{"_index":333,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3844,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3234,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":3937,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":290,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":635,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3916,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3712,"title":{},"body":{"license.html":{}}}],["apply",{"_index":853,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["approach",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3254,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3378,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3753,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3042,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../create",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3854,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3851,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.option.entity.ts",{"_index":3852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.schema.ts",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../to",{"_index":3045,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server",{"_index":3918,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":3957,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src",{"_index":3962,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":320,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":527,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":529,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1635,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":516,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":810,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":591,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":851,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":813,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":824,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":822,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":828,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":819,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":826,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":928,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":901,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":738,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1640,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2860,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:10",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:20",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:7",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":867,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/controller/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts",{"_index":1580,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:5",{"_index":1583,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:8",{"_index":1582,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2865,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts",{"_index":100,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts:5",{"_index":104,"title":{},"body":{"classes/AuthEntity.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":863,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":792,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/jwt",{"_index":2870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":181,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":206,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":209,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":931,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":610,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":597,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":457,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1040,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1166,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1174,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1190,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1168,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1173,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1183,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1185,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1189,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1187,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1179,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1172,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1193,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1170,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1191,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1176,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1359,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1554,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1613,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":970,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":976,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":986,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":989,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":999,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":980,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":365,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1530,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":966,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":957,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":959,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":960,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":962,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":963,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":964,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":965,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":961,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":958,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":967,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":956,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":968,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1363,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":774,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1351,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1529,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1598,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1061,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1069,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1067,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1073,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1071,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1352,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1606,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1123,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1197,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1128,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1134,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:14",{"_index":1151,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:25",{"_index":1141,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1145,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1137,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1143,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1236,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1262,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1247,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1243,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1254,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1260,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1253,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1256,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1245,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1249,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1251,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":1460,"title":{},"body":{"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1423,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:17",{"_index":1426,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":341,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":348,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":347,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":353,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":346,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":896,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:12",{"_index":898,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:9",{"_index":899,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1408,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1414,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1412,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":836,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1419,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1421,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1418,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1417,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:29",{"_index":843,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:31",{"_index":842,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:33",{"_index":840,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:35",{"_index":841,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1420,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.option.entity.ts",{"_index":1447,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1467,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":1471,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:7",{"_index":1469,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1443,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1513,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1519,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1516,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/users.controller.ts",{"_index":1618,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/users.controller.ts:11",{"_index":1622,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1585,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:13",{"_index":1590,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:16",{"_index":1589,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:19",{"_index":1588,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:4",{"_index":1587,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/users.module.ts",{"_index":1630,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/server/src/modules/user/users.service.ts",{"_index":1564,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/users.service.ts:14",{"_index":1634,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/server/src/modules/user/users.service.ts:27",{"_index":1633,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/server/src/modules/user/users.service.ts:5",{"_index":1566,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/users.service.ts:7",{"_index":1567,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/users.service.ts:9",{"_index":1565,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1365,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:10",{"_index":1367,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1377,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/server.service.ts",{"_index":1404,"title":{},"body":{"injectables/ServerService.html":{},"coverage.html":{}}}],["apps/server/src/server.service.ts:5",{"_index":1405,"title":{},"body":{"injectables/ServerService.html":{}}}],["apps/server/src/shared/$1",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1312,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1320,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1323,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1330,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:10",{"_index":1334,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:13",{"_index":1335,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1333,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/domain/entity",{"_index":3859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":272,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":276,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":275,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":279,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":832,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts",{"_index":282,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts:10",{"_index":295,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:12",{"_index":297,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:14",{"_index":296,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:16",{"_index":294,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:26",{"_index":298,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:34",{"_index":1350,"title":{},"body":{"classes/SampleError.html":{}}}],["apps/server/src/shared/interceptor/duration",{"_index":488,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts",{"_index":1531,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:11",{"_index":1542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:14",{"_index":1540,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/pipe/parse",{"_index":1338,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/interface/pagination.interface.ts",{"_index":1311,"title":{},"body":{"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/transformer/to",{"_index":2895,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/types/counted.ts",{"_index":3855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arc",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3973,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3777,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["aren't",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["argumentshost",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3736,"title":{},"body":{"license.html":{}}}],["around",{"_index":3790,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3650,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3661,"title":{},"body":{"license.html":{}}}],["array",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":569,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3355,"title":{},"body":{"license.html":{}}}],["asking",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3168,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3601,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3304,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3728,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3757,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3548,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["asynchronous",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3764,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3559,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3532,"title":{},"body":{"license.html":{}}}],["aud",{"_index":802,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":801,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":864,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":185,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":558,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":560,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.service",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authconfig",{"_index":871,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":876,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":875,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1009,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticate('jwt",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["authenticate(...strategies",{"_index":3046,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authenticated",{"_index":799,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2292,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1010,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["authentication/interface/jwt",{"_index":1011,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["authentity",{"_index":99,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":865,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":866,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":107,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3531,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3490,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorization.service",{"_index":183,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1126,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1263,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":173,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":179,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorized",{"_index":3524,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizes",{"_index":3626,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3665,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3537,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":95,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":1700,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2577,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3100,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["avoid",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["avoiding",{"_index":3990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["away",{"_index":3145,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2818,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2209,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3286,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["bad_request",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1345,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1349,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["base64",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":602,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":233,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":281,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":280,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":248,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":354,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":356,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":355,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":357,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3313,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basically",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":1950,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["become",{"_index":3180,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3191,"title":{},"body":{"license.html":{}}}],["before",{"_index":448,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["beforehand",{"_index":3938,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3083,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3333,"title":{},"body":{"license.html":{}}}],["behaviour",{"_index":325,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{}}}],["behind",{"_index":1538,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["being",{"_index":2277,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["believe",{"_index":3659,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3341,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["benefit",{"_index":3174,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3858,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3761,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["better",{"_index":3779,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1664,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["beyond",{"_index":3414,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bob",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":790,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{}}}],["boolean.transformer.ts",{"_index":2896,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2344,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["branch",{"_index":1838,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3786,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3784,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1591,"title":{},"body":{"classes/UserEntity.html":{}}}],["building",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":3926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["bulk",{"_index":1669,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3797,"title":{},"body":{"todo.html":{}}}],["business",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businessexception",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1201,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1208,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1202,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1210,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3124,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2443,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3102,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":493,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["called",{"_index":2592,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["caller",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":498,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2079,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["camelcase",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cant",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2108,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["cares",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3390,"title":{},"body":{"license.html":{}}}],["case",{"_index":536,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cases",{"_index":3190,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["catch",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1874,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":916,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3563,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":775,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3521,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3574,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1654,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changed",{"_index":907,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1645,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changeme",{"_index":1572,"title":{},"body":{"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{}}}],["changes",{"_index":1647,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1862,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3499,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3157,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1829,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":259,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["checked",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checkentitypermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":743,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{}}}],["checklist",{"_index":3093,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3108,"title":{},"body":{"index.html":{}}}],["checks",{"_index":2515,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkusernotexistbyemail(email",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2584,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["choosing",{"_index":3717,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3339,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3347,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3756,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3616,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3628,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["class/interface",{"_index":1569,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":593,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":856,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2346,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["cleanup",{"_index":2297,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["clear",{"_index":3448,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cli",{"_index":3958,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":1977,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":288,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["clienturl",{"_index":1398,"title":{},"body":{"modules/ServerModule.html":{}}}],["clipboard",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3109,"title":{},"body":{"index.html":{}}}],["close",{"_index":935,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{}}}],["closely",{"_index":3752,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3054,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3828,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":2813,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2206,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":174,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":176,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":314,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":315,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":594,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":596,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":595,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":925,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":926,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":927,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1118,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1120,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1119,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1121,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1373,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1375,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_providers",{"_index":1374,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1440,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1441,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1627,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1629,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1628,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2481,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["codes",{"_index":2494,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["coersion",{"_index":755,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3691,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":358,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":349,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":342,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1432,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3185,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3397,"title":{},"body":{"license.html":{}}}],["command",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3264,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3483,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2244,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3641,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3107,"title":{},"body":{"index.html":{}}}],["common",{"_index":2953,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3309,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3141,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3406,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3413,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3675,"title":{},"body":{"license.html":{}}}],["compile",{"_index":3915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["compiler",{"_index":3292,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3092,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":919,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["compliance",{"_index":3597,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3330,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":3951,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1850,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["component(s",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compose",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3237,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1681,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3707,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["conditioned",{"_index":3669,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3202,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["conditons",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1387,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1753,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configurations",{"_index":3964,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":322,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2571,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":1988,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1683,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2396,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3585,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3735,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3550,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2064,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":3955,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3377,"title":{},"body":{"license.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["constants",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constitutes",{"_index":3322,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":632,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1332,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1132,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1637,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":310,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["constructor(mongod",{"_index":938,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["constructor(newsrepo",{"_index":1242,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":344,"title":{},"body":{"classes/Course.html":{},"classes/TaskResponseDto.html":{}}}],["constructor(payload",{"_index":1586,"title":{},"body":{"classes/UserEntity.html":{}}}],["constructor(private",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":367,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":637,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1515,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":528,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":292,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(usersservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3679,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3465,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1721,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3676,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":3995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3088,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3552,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3638,"title":{},"body":{"license.html":{}}}],["context",{"_index":500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["continue",{"_index":2060,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3493,"title":{},"body":{"license.html":{}}}],["contract",{"_index":3994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3547,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3685,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3148,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3625,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3627,"title":{},"body":{"license.html":{}}}],["control",{"_index":2710,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3630,"title":{},"body":{"license.html":{}}}],["controller",{"_index":85,"title":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller('auth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('news",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1437,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('users",{"_index":1624,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller.ts",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1074,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskOptionsEntry.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1125,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1444,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/users.controller",{"_index":1631,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["convenient",{"_index":3257,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["converted",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3243,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3663,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3500,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3251,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3546,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3140,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3134,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2117,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3203,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3136,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3123,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3212,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3336,"title":{},"body":{"license.html":{}}}],["core",{"_index":321,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1392,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/error/dto/error.response",{"_index":300,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/error/interface",{"_index":299,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/logger/logger.module",{"_index":1127,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":508,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":313,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2099,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["correction",{"_index":3730,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2620,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["corresponding",{"_index":3295,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3434,"title":{},"body":{"license.html":{}}}],["count",{"_index":1025,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1153,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1159,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3617,"title":{},"body":{"license.html":{}}}],["counties",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3241,"title":{},"body":{"license.html":{}}}],["country",{"_index":3655,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":340,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course.entity",{"_index":844,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1478,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":849,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":364,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":837,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["coursenews",{"_index":373,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursenews(props",{"_index":449,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":361,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1479,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3684,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3751,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3645,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3103,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["coverage",{"_index":2038,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3226,"title":{},"body":{"license.html":{}}}],["cpu",{"_index":1731,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["create(@currentuser",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":975,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1244,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":912,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createdat",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":423,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createnewsparam",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":456,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating",{"_index":460,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":750,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3269,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":323,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2362,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":730,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":732,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":251,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3577,"title":{},"body":{"license.html":{}}}],["current",{"_index":1175,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":3922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["currentschoolyear",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":977,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1021,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":538,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["custom_error_type",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3427,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3698,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3431,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":326,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":923,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":3981,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3404,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3733,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2283,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":752,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":2065,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1397,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.provider.ts",{"_index":934,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["database.provider.ts:13",{"_index":944,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database.provider.ts:19",{"_index":942,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database.provider.ts:23",{"_index":946,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database.provider.ts:6",{"_index":940,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database/mongo",{"_index":933,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["databases",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1474,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponseDto.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":512,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1742,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1888,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_url",{"_index":1386,"title":{},"body":{"modules/ServerModule.html":{}}}],["dbs",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1473,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":814,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":818,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":829,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3075,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3949,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3359,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3715,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4447,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3538,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":762,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3047,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":3975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3349,"title":{},"body":{"license.html":{}}}],["default",{"_index":273,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1316,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1539,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3727,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3175,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3681,"title":{},"body":{"license.html":{}}}],["define",{"_index":255,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["defines",{"_index":3912,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3206,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delete",{"_index":971,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["delete(':id",{"_index":979,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1246,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1136,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":978,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["deletedid",{"_index":1038,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":1936,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["demands",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3505,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3642,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dependecy",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dependency",{"_index":3909,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deploy",{"_index":1701,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":624,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3651,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["describe",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["described",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":3996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":3987,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3442,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3139,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designing",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":3985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3705,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1636,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1638,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3065,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2137,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3474,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":3932,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3056,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developers",{"_index":3164,"title":{},"body":{"license.html":{}}}],["development",{"_index":2199,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["device",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3116,"title":{},"body":{"index.html":{}}}],["di",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1380,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3834,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3704,"title":{},"body":{"license.html":{}}}],["different",{"_index":2507,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3529,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1718,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3334,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3449,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3230,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["directory",{"_index":3804,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":443,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3370,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3718,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3526,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":249,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":431,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":453,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3667,"title":{},"body":{"license.html":{}}}],["display",{"_index":3405,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":838,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["displayed",{"_index":468,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3253,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2517,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":3919,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguishing",{"_index":3708,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3132,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3768,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3670,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3204,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3821,"title":{},"body":{"todo.html":{}}}],["docu",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":461,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2005,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documented",{"_index":1649,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1739,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1431,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3803,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["domains",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["done",{"_index":3095,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dos",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3476,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3593,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4377,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dto",{"_index":459,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto's",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1082,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.createdat",{"_index":1101,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.creator",{"_index":1096,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1084,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.firstname",{"_index":1609,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1078,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1611,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1357,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["dto.permissions",{"_index":1105,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1094,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1086,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1088,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1108,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1090,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1092,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1080,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1110,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1103,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updater",{"_index":1099,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1028,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":742,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["due",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":839,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["duplicate",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3426,"title":{},"body":{"license.html":{}}}],["duration",{"_index":491,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":487,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2141,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3473,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3305,"title":{},"body":{"license.html":{}}}],["e",{"_index":719,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":252,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":721,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":722,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["each",{"_index":2113,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["earlier",{"_index":3225,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":625,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3748,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3367,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3350,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3766,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["efforts",{"_index":3610,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3772,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1147,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["eligible",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1135,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{}}}],["em.flush",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["email",{"_index":2304,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3422,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3780,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1228,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["emptyresultquery",{"_index":1214,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":748,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["enabled",{"_index":744,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":758,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enables",{"_index":3245,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3183,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2229,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["end2end",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoints",{"_index":2164,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enforce",{"_index":3643,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3372,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ensures",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3677,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3395,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3693,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/auth.entity",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["entity/user.entity",{"_index":1623,"title":{},"body":{"controllers/UsersController.html":{}}}],["entityid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1133,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["entityname",{"_index":1400,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":991,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":485,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":477,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1662,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3809,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2200,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["environments",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3325,"title":{},"body":{"license.html":{}}}],["err",{"_index":1551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error(message",{"_index":820,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":524,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":592,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":725,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":715,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":336,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":316,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":714,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":306,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["errorresponse(type",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":442,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":447,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["eslint/restrict",{"_index":716,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["essential",{"_index":3288,"title":{},"body":{"license.html":{}}}],["establish",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2769,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2623,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2382,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1675,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3130,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2101,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["everywhere",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3224,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":1581,"title":{},"body":{"classes/UserDTO.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exceeds",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2102,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":518,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":771,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exchangeable",{"_index":3993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3463,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1923,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2316,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3635,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3328,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3686,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3281,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2602,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["execute/rollback",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1963,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["executes",{"_index":3923,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3236,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1533,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["executioncontext",{"_index":497,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3611,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3368,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1558,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2245,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":804,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expected",{"_index":3481,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expects",{"_index":2342,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":803,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["explicit",{"_index":627,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["explicitly",{"_index":3319,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2349,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3800,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":622,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3720,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":718,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3558,"title":{},"body":{"license.html":{}}}],["extend",{"_index":745,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3666,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3050,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3409,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3256,"title":{},"body":{"license.html":{}}}],["external",{"_index":1914,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["externalauthconfig",{"_index":869,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1856,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":768,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3544,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":471,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2181,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitating",{"_index":3699,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3329,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1876,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":1920,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failure",{"_index":3743,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3324,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":583,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":3468,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3087,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3222,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["favicon",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3478,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":184,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":562,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":182,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":180,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":589,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":623,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":178,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":609,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":614,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":549,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":629,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1694,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3086,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3954,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3388,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3968,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1639,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":363,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3799,"title":{},"body":{"todo.html":{}}}],["figure",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":3942,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1735,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":519,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1041,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1047,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1045,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1052,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1235,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":523,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1204,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1050,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3569,"title":{},"body":{"license.html":{}}}],["find",{"_index":612,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":613,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":972,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{}}}],["findall(@currentuser",{"_index":1438,"title":{},"body":{"controllers/TaskController.html":{}}}],["findall(currentuser",{"_index":982,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1138,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1237,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1248,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1468,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1470,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1514,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1517,"title":{},"body":{"injectables/TaskUC.html":{}}}],["finding",{"_index":787,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1129,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1142,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":784,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":973,"title":{},"body":{"controllers/NewsController.html":{},"injectables/UsersService.html":{}}}],["findone(newsid",{"_index":987,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(username",{"_index":1576,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1130,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1144,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1238,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1250,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1399,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1614,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["firstname",{"_index":1599,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3723,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1752,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1656,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["fixtures",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["flag",{"_index":1049,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3310,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["folder",{"_index":1525,"title":{},"body":{"injectables/TaskUC.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":3944,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2700,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1836,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":3961,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3366,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbidnonwhitelisted",{"_index":765,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2178,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["form",{"_index":2729,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":532,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["formats",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2404,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3417,"title":{},"body":{"license.html":{}}}],["forwarding",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1403,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3127,"title":{},"body":{"license.html":{}}}],["framework",{"_index":3977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3125,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3146,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1666,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3353,"title":{},"body":{"license.html":{}}}],["full",{"_index":1755,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functional",{"_index":324,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["functioning",{"_index":3494,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3041,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["further",{"_index":3445,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":3959,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2212,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["generalerror",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3302,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2110,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["generated",{"_index":3953,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1853,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":988,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1425,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('profile",{"_index":1621,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":618,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getentitypermissions(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":1366,"title":{},"body":{"controllers/ServerController.html":{},"injectables/ServerService.html":{}}}],["getnewspermissions",{"_index":1239,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1252,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":208,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedschools",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getprofile",{"_index":1619,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@currentuser",{"_index":1625,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(user",{"_index":1620,"title":{},"body":{"controllers/UsersController.html":{}}}],["getquery",{"_index":1212,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1240,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1255,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["getservice",{"_index":636,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":633,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1241,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1258,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getting",{"_index":1643,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["geturi",{"_index":936,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["geturi(otherdbname",{"_index":943,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["getuser",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":557,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":559,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3110,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":3385,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1534,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["gives",{"_index":598,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["giving",{"_index":3391,"title":{},"body":{"license.html":{}}}],["global",{"_index":331,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalerrorfilter",{"_index":522,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":734,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":852,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["globals",{"_index":2217,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":737,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3119,"title":{},"body":{"license.html":{}}}],["go",{"_index":3072,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3105,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["goals",{"_index":3196,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3518,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3197,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3539,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3314,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3588,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3787,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3444,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3760,"title":{},"body":{"license.html":{}}}],["group",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["grouping",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["gt",{"_index":1232,"title":{},"body":{"classes/NewsScope.html":{}}}],["guarantee",{"_index":1032,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3903,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guess",{"_index":1575,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["guest",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guidelines",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1556,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1477,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2401,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handling",{"_index":327,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hard",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3327,"title":{},"body":{"license.html":{}}}],["header",{"_index":872,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["headers",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3182,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hello",{"_index":1406,"title":{},"body":{"injectables/ServerService.html":{}}}],["helparea",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":2238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":257,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3632,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":897,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":3992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":1527,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["hints",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["history.git",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3565,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3525,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1476,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1409,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1411,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":847,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1485,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2106,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2285,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hope",{"_index":3769,"title":{},"body":{"license.html":{}}}],["host",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":731,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3451,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3822,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1834,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3469,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2204,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["http://fsf.org",{"_index":3129,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3059,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3771,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":291,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/mikro",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3827,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":3970,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":3971,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":3969,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://vuejs.org",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":301,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.not_implemented",{"_index":312,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["hub",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":805,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":773,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":791,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1340,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:6",{"_index":1342,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3657,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":531,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identity",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":293,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2479,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":812,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":607,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":906,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":308,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["implementations",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implemented",{"_index":2210,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":509,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3680,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["important",{"_index":630,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["importer",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3623,"title":{},"body":{"license.html":{}}}],["imports",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["impose",{"_index":3549,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3683,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1227,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3176,"title":{},"body":{"license.html":{}}}],["in/out",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3737,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3740,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3128,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3734,"title":{},"body":{"license.html":{}}}],["include",{"_index":247,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3283,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3240,"title":{},"body":{"license.html":{}}}],["including",{"_index":2282,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusion",{"_index":3416,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":751,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3181,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3700,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3472,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1797,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3545,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3407,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independently",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3796,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1706,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3591,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3556,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1890,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["individuals",{"_index":3218,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3484,"title":{},"body":{"license.html":{}}}],["inewsproperties",{"_index":424,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":788,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":426,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":366,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1601,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":369,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1076,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1353,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1355,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1194,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1360,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1362,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1616,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1361,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3456,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":539,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3589,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3620,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3233,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":250,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1689,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["initialized",{"_index":913,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["initializes",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3614,"title":{},"body":{"license.html":{}}}],["inject",{"_index":621,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["injectable",{"_index":143,"title":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":603,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":909,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["injections",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":855,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":289,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["install",{"_index":3297,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3488,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3503,"title":{},"body":{"license.html":{}}}],["instance",{"_index":749,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":1889,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["instructions",{"_index":3066,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3380,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1745,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intended",{"_index":3149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3371,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3774,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3695,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3248,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3252,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":495,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":496,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":490,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":339,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":317,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3428,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3607,"title":{},"body":{"license.html":{}}}],["interface",{"_index":430,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":590,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3495,"title":{},"body":{"license.html":{}}}],["internal",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3747,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3294,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3308,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":604,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2695,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2658,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3908,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3791,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3402,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":831,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1381,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3316,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1054,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":481,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":464,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1875,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1055,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1060,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1324,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1321,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@isoptional()@apiproperty({description",{"_index":1451,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1314,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@isoptional()@apiproperty({description",{"_index":1449,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(2015)@max(2030)@isoptional()@apiproperty({description",{"_index":1453,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["ismongoid",{"_index":1056,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["isoptional",{"_index":1057,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/TaskQueryDto.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@toboolean()@apipropertyoptional({description",{"_index":1048,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1561,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1042,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1560,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1046,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1288,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":807,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":482,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":462,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":475,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":470,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":806,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2061,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":924,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["itaskmetadata",{"_index":835,"title":{"classes/ITaskMetadata.html":{}},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["itaskoption",{"_index":1459,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["item",{"_index":3267,"title":{},"body":{"license.html":{}}}],["items",{"_index":1728,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3506,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":786,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3817,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest/utils",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3080,"title":{},"body":{"index.html":{}}}],["job",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2593,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":1571,"title":{},"body":{"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{}}}],["join",{"_index":1974,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2945,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json",{"_index":2177,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":723,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":808,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwt",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_module_options",{"_index":3904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":862,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":130,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":868,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtoptionsprovider",{"_index":2872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":800,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtservice",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":120,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1650,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":3920,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3289,"title":{},"body":{"license.html":{}}}],["key",{"_index":1295,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keys",{"_index":3491,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3244,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3137,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3163,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3647,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3654,"title":{},"body":{"license.html":{}}}],["known",{"_index":1946,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["knows",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3090,"title":{},"body":{"index.html":{}}}],["language",{"_index":2513,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3410,"title":{},"body":{"license.html":{}}}],["last",{"_index":1615,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1600,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":3963,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3235,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3209,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3618,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["layered",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3795,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ldap",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["ldap/:id",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2460,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3776,"title":{},"body":{"license.html":{}}}],["lean",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":3841,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1532,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":600,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3831,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3170,"title":{},"body":{"license.html":{}}}],["legend",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lern",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2758,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":845,"title":{"classes/Lesson.html":{}},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":846,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":850,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{}}}],["lessonmodel",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":900,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1481,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3187,"title":{},"body":{"license.html":{}}}],["level",{"_index":1526,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["liability",{"_index":3528,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3232,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3280,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3464,"title":{},"body":{"license.html":{},"todo.html":{}}}],["license",{"_index":3118,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3213,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3214,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3216,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3143,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3592,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3536,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3586,"title":{},"body":{"license.html":{}}}],["limit",{"_index":833,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3731,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3721,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3527,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1730,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":445,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["link",{"_index":1852,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3306,"title":{},"body":{"license.html":{}}}],["links",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3818,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":207,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":368,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3615,"title":{},"body":{"license.html":{}}}],["living",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3807,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loadind",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1887,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1746,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3057,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2240,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":815,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":823,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3819,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":494,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":727,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":724,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":903,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":929,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":337,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":318,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["loggerservice",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":329,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":489,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2233,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["logic/rules",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["login(user",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuseruc",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3793,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3091,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2516,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3738,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3741,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1233,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3419,"title":{},"body":{"license.html":{}}}],["made",{"_index":3177,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2469,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mainly",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2420,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2337,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2604,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3285,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2088,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3344,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["making",{"_index":1559,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["manage",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["managed",{"_index":1857,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["managing",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3798,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3633,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2138,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":359,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["manytomany({fieldname",{"_index":350,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1883,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1062,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1066,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1063,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1068,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedtasks",{"_index":1492,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["mapper",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper.ts",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1014,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapping",{"_index":4046,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1064,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1070,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1354,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1607,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1065,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1072,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3678,"title":{},"body":{"license.html":{}}}],["maria",{"_index":1574,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["marked",{"_index":3534,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3543,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3211,"title":{},"body":{"license.html":{}}}],["master",{"_index":2058,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":540,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3331,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3507,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1679,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1686,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1325,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["max(100",{"_index":1329,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["max(2030",{"_index":1466,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["maximum",{"_index":1318,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["maybe",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3824,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3551,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3113,"title":{},"body":{"index.html":{}}}],["means",{"_index":3208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3352,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3363,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3376,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3389,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3268,"title":{},"body":{"license.html":{}}}],["member",{"_index":566,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":932,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["menu",{"_index":3265,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3722,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3247,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3117,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3603,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3318,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3007,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["method",{"_index":626,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2157,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2455,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2723,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1861,"title":{},"body":{"changelog.html":{}}}],["migrations",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["mikro",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":3794,"title":{},"body":{"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3816,"title":{},"body":{"todo.html":{}}}],["mikroormmodule",{"_index":1378,"title":{},"body":{"modules/ServerModule.html":{}}}],["mikroormmodule.forroot",{"_index":1395,"title":{},"body":{"modules/ServerModule.html":{}}}],["min",{"_index":1326,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(0",{"_index":1327,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(1",{"_index":1328,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(2015",{"_index":1465,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["minimizes",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1317,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["minio",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3040,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3533,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1502,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1226,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2247,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":2605,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":478,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1300,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3205,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3271,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2744,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3394,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3172,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3238,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":3911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":106,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["module.ts",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/repo",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/authentication/auth.module",{"_index":1382,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1389,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1393,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1394,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1383,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1391,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1388,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/users.module",{"_index":1385,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":953,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":941,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"index.html":{}}}],["mongodb",{"_index":947,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabaseprovider",{"_index":930,"title":{"injectables/MongoMemoryDatabaseProvider.html":{}},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["mongomemoryserver",{"_index":939,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["mongoose",{"_index":1346,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1787,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["moreover",{"_index":3575,"title":{},"body":{"license.html":{}}}],["mounted",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["move",{"_index":1524,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":1535,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["msg",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2560,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":769,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["named",{"_index":3111,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["names",{"_index":994,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["naming",{"_index":3839,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["nanoid",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3408,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1491,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2448,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3063,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3296,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1475,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nest",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["nest/legacy",{"_index":3830,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":3914,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":3921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:dev:serve",{"_index":3952,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":3925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":3940,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":3913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":3928,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":3933,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":3930,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":3936,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":3946,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":3948,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest:test:watch",{"_index":3945,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2652,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":520,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":3960,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":521,"title":{},"body":{"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":105,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestlogger",{"_index":902,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3142,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newly",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":375,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news.content",{"_index":1083,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1102,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1272,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1085,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1079,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":458,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1563,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":480,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":463,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":469,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1562,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":479,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":474,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1106,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1087,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1089,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1091,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1093,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1081,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":427,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1104,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1098,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/Submission.html":{}}}],["news:10",{"_index":422,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":417,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":419,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":418,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":420,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":414,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":412,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":416,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":421,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":425,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1297,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_create",{"_index":1271,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1266,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["news_sources",{"_index":1182,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1196,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1265,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["newscontroller",{"_index":969,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1279,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":983,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":981,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1024,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1285,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1029,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1282,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1013,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1022,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1027,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1023,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1037,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1117,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1122,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{}}}],["newsresponse",{"_index":1012,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1155,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":776,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1139,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":441,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":450,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":1007,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1290,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1277,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":444,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":1548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":513,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1490,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2832,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3055,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2198,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3438,"title":{},"body":{"license.html":{}}}],["none",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1305,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":1944,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3467,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":246,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["notfound",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":561,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":1401,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3587,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3259,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3255,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3576,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3572,"title":{},"body":{"license.html":{}}}],["notimplementedexception",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["notwithstanding",{"_index":3522,"title":{},"body":{"license.html":{}}}],["november",{"_index":3121,"title":{},"body":{"license.html":{}}}],["now",{"_index":511,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":515,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3073,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3710,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2294,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3061,"title":{},"body":{"index.html":{}}}],["o",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2265,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2008,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1163,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1339,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["object.assign(this",{"_index":362,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TaskResponseDto.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1296,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":484,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["objects",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["obligate",{"_index":3690,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3453,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3354,"title":{},"body":{"license.html":{}}}],["observable",{"_index":501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3437,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3584,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2071,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["offer",{"_index":3169,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3458,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3441,"title":{},"body":{"license.html":{}}}],["official",{"_index":3273,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["ok",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["old",{"_index":1908,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1521,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["onapplicationshutdown",{"_index":937,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["once",{"_index":3982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1286,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onload",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["onto",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":2280,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":3934,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3744,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3446,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3290,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2800,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2087,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3192,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3697,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1692,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1518,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1396,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["options.provider.ts",{"_index":2871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1969,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ordering",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3599,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3219,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":3984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":1973,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2747,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":3802,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.io",{"_index":3972,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/mikro",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1379,"title":{},"body":{"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3071,"title":{},"body":{"index.html":{}}}],["otherdbname",{"_index":945,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["others",{"_index":764,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["otherwise",{"_index":1454,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["outgoing",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2406,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["over",{"_index":2418,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overhead",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2363,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":517,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":330,"title":{},"body":{"modules/CoreModule.html":{}}}],["overview",{"_index":3788,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["owned",{"_index":3629,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1178,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2399,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3400,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3284,"title":{},"body":{"license.html":{}}}],["page",{"_index":1315,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1322,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["paginate",{"_index":582,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":984,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pagination.query",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationmodel",{"_index":1140,"title":{"interfaces/PaginationModel.html":{}},"body":{"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["paginationquery",{"_index":985,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1005,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"coverage.html":{}}}],["paginationresponse(dtolist",{"_index":1030,"title":{},"body":{"controllers/NewsController.html":{}}}],["paging",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3773,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3562,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3639,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1824,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["param",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1034,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1031,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["params",{"_index":616,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1113,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1114,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1269,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1116,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1115,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1112,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1712,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2118,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2324,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1002,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3221,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["partial",{"_index":345,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1555,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3277,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3246,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3311,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party",{"_index":3447,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3605,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":760,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1433,"title":{},"body":{"controllers/TaskController.html":{}}}],["passport",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":885,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1000,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":998,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3561,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3624,"title":{},"body":{"license.html":{}}}],["path",{"_index":640,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["path's",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["pattern",{"_index":486,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["payload",{"_index":881,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"changelog.html":{}}}],["payload.roles",{"_index":1597,"title":{},"body":{"classes/UserEntity.html":{}}}],["payload.schoolid",{"_index":1595,"title":{},"body":{"classes/UserEntity.html":{}}}],["payload.ts",{"_index":793,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":1593,"title":{},"body":{"classes/UserEntity.html":{}}}],["payment",{"_index":3671,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3454,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3457,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3106,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["performance",{"_index":1798,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3303,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3571,"title":{},"body":{"license.html":{}}}],["permission",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1310,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["permissions.every((p",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1309,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3382,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3415,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3186,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3131,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3498,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2170,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2675,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1725,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["personal",{"_index":1682,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3688,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3423,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3435,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3161,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1711,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":740,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1641,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1696,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1344,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3443,"title":{},"body":{"license.html":{}}}],["placed",{"_index":3950,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["plain",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plus",{"_index":3609,"title":{},"body":{"license.html":{}}}],["point",{"_index":465,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3767,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2669,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2133,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2466,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":995,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3461,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3432,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3398,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3746,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2089,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["post",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["potential",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3811,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3365,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3078,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3144,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3644,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices/layers/orm",{"_index":3815,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3135,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3201,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["predecessor",{"_index":3606,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["preferred",{"_index":3270,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["preload",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":917,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2239,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["presentation",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3263,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3530,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2275,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3608,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3156,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3673,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["principles",{"_index":3983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3573,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["problems",{"_index":2028,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3069,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3489,"title":{},"body":{"license.html":{}}}],["process",{"_index":2450,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processed",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3662,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3293,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3424,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2019,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3674,"title":{},"body":{"license.html":{}}}],["program",{"_index":3151,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3375,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3781,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3278,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3162,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3759,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3335,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3361,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3668,"title":{},"body":{"license.html":{}}}],["project",{"_index":1648,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2156,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3266,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3258,"title":{},"body":{"license.html":{}}}],["promise",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise.all",{"_index":1281,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promisify",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3228,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3590,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3239,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":277,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":370,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":435,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":439,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":437,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1603,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1605,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":372,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":438,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":440,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":433,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3165,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":948,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3345,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3387,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":3976,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3726,"title":{},"body":{"license.html":{}}}],["provide",{"_index":525,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":921,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["providers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["provides",{"_index":915,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["providing",{"_index":328,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3523,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3567,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3714,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3716,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1368,"title":{},"body":{"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3535,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3194,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3379,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1051,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":2242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3300,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3470,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3660,"title":{},"body":{"license.html":{}}}],["put",{"_index":779,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["putting",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2219,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3580,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3725,"title":{},"body":{"license.html":{}}}],["queries",{"_index":1220,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1224,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":581,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.dto.ts",{"_index":1461,"title":{},"body":{"classes/TaskQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":1464,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.dto.ts:16",{"_index":1463,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.dto.ts:23",{"_index":1462,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.targetid",{"_index":1109,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1107,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1111,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["querys",{"_index":1435,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["read",{"_index":992,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["readable",{"_index":3420,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3649,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3514,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":1568,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["reason",{"_index":3658,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3433,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3578,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3159,"title":{},"body":{"license.html":{}}}],["received",{"_index":3403,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receives",{"_index":3594,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3664,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3497,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3656,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3217,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3274,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":628,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3763,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1768,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2143,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":3991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1737,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":411,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":413,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["references",{"_index":2705,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3155,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3207,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3006,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3692,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3519,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3399,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3312,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2317,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["reinstated",{"_index":3566,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":473,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2032,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3338,"title":{},"body":{"license.html":{}}}],["release",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":3198,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3188,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3392,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3199,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3823,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3648,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3452,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3153,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3694,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3696,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3520,"title":{},"body":{"license.html":{}}}],["remove",{"_index":763,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1655,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3739,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2010,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1907,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1943,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["replaces",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["repo",{"_index":2227,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo.ts",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1264,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1124,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1445,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":3947,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["repositories",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["repository",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["represent",{"_index":3486,"title":{},"body":{"license.html":{}}}],["representing",{"_index":1570,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["req.user",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["reqlib",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request/response",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["requested",{"_index":1402,"title":{},"body":{"modules/ServerModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":859,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":1945,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":870,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('./tsconfig.json",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":767,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1289,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3393,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3060,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["requires",{"_index":756,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3223,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3477,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1146,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["respect",{"_index":3369,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3835,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/TaskController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["response.dto.ts",{"_index":1503,"title":{},"body":{"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":1511,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:15",{"_index":1509,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:18",{"_index":1507,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:21",{"_index":1508,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:24",{"_index":1510,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:6",{"_index":1506,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":736,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3596,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1690,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":3917,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3836,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":492,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["restart",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1293,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3362,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3553,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2663,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3184,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3501,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":990,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["returned",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1504,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reusability",{"_index":3989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3094,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3750,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3702,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2829,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3166,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3724,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1828,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2356,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":798,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":795,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"classes/UserEntity.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rollback",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3504,"title":{},"body":{"license.html":{}}}],["room",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":256,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["route",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1758,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["routes.test.js",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3613,"title":{},"body":{"license.html":{}}}],["rss",{"_index":407,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1912,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1704,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["running",{"_index":1537,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3291,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":505,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":507,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3765,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3622,"title":{},"body":{"license.html":{}}}],["same",{"_index":2341,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":567,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":307,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sample_error",{"_index":311,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["sampleerror",{"_index":309,"title":{"classes/SampleError.html":{}},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["samples",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleucmethod(params",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1949,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3805,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1131,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{}}}],["save(news",{"_index":1150,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3450,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1659,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2634,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1708,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["school",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UserEntity.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schoolids",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":403,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1356,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1358,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1075,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1095,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1177,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":454,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":452,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":777,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":467,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2205,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":2186,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":620,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1157,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1158,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":631,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1302,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":904,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1198,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:14",{"_index":1209,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:29",{"_index":1211,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:35",{"_index":1207,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1205,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1213,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1299,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1276,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":993,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3298,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1764,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["searchable",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3231,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3173,"title":{},"body":{"license.html":{}}}],["secret",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3343,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3418,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1657,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":3826,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3810,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2841,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3637,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3621,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3210,"title":{},"body":{"license.html":{}}}],["send",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":535,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["sentry",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["sentry/node",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3460,"title":{},"body":{"license.html":{}}}],["separate",{"_index":911,"title":{},"body":{"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3085,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2114,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":3988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["serialization",{"_index":3801,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2214,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3058,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":905,"title":{},"body":{"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1384,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.service",{"_index":1370,"title":{},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3829,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1364,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1372,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["servers",{"_index":2756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serverservice",{"_index":1369,"title":{"injectables/ServerService.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"coverage.html":{},"overview.html":{}}}],["serves",{"_index":3287,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["service.find",{"_index":579,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.get",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":563,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":611,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":619,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":615,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":638,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":639,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":601,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["servicing",{"_index":3729,"title":{},"body":{"license.html":{}}}],["session",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":857,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":922,"title":{},"body":{"injectables/Logger.html":{}}}],["sets",{"_index":2147,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["setting",{"_index":3049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settings",{"_index":2331,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["setup",{"_index":741,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shall",{"_index":3348,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3147,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":780,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/controller",{"_index":1004,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":1006,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/core",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/error/api",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{}}}],["shared/error/business.error",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["shared/interceptor/timeout.interceptor",{"_index":861,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["shared/pipe",{"_index":1003,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/pipes",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1215,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/repo/interface/pagination.interface",{"_index":1152,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/transformer",{"_index":1059,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/types",{"_index":1154,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["shared/utils",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":1980,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3782,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3487,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":3070,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplicity",{"_index":3843,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simultaneously",{"_index":3687,"title":{},"body":{"license.html":{}}}],["single",{"_index":770,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":834,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":766,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["slash",{"_index":3833,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2809,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3126,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sold",{"_index":3471,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3326,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3340,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3778,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sorted",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3931,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1180,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3430,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3154,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spec.ts",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3512,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifically",{"_index":3138,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2159,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3276,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3709,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3713,"title":{},"body":{"license.html":{}}}],["speed",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3703,"title":{},"body":{"license.html":{}}}],["split",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stabilisation",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3272,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3275,"title":{},"body":{"license.html":{}}}],["start",{"_index":3074,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1644,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":3929,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2352,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2257,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stated",{"_index":3317,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3555,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2842,"title":{},"body":{"coverage.html":{},"additional-documentation/nestjs-application.html":{}}}],["states",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":3939,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3381,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1512,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{},"license.html":{}}}],["stay",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3167,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["still",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1536,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stopping",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":1926,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1727,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["strategies",{"_index":3052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strategy",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["strategy/jwt.strategy",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":3986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":918,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["strip",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":605,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["structured",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["structures",{"_index":920,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1410,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["student_create",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1413,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":343,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3077,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3115,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":809,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3602,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3595,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3634,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3342,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1390,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1487,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1416,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1483,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1486,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3307,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3439,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3482,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3600,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["succesful",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2564,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3189,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sue",{"_index":3646,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3492,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3842,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3792,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["supplement",{"_index":3515,"title":{},"body":{"license.html":{}}}],["support",{"_index":2195,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2745,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3152,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3682,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3554,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3742,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3785,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1430,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["symmetric",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1294,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2134,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["system/school",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2699,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["t[keyof",{"_index":783,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["tab",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1846,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":360,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2898,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3067,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2107,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["taking",{"_index":3048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tangible",{"_index":3466,"title":{},"body":{"license.html":{}}}],["tap",{"_index":506,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":586,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.targetids",{"_index":1223,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1307,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1221,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1222,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":476,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":584,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetmodel",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["targetmodels",{"_index":1259,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1303,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":578,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["targets.filter((target",{"_index":1306,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":585,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":848,"title":{"classes/Task.html":{}},"body":{"classes/ITaskMetadata.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task._id",{"_index":1495,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.course?.color",{"_index":1499,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.course?.name",{"_index":1498,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.createdat",{"_index":1500,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.duedate",{"_index":1497,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.entity",{"_index":1415,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1494,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.name",{"_index":1496,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.updatedat",{"_index":1501,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskcontroller",{"_index":1422,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodel",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1376,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskoptionsentry",{"_index":1446,"title":{"classes/TaskOptionsEntry.html":{}},"body":{"classes/TaskOptionsEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["taskquerydto",{"_index":1424,"title":{"classes/TaskQueryDto.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"coverage.html":{}}}],["taskquerydto:10",{"_index":1458,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskquerydto:16",{"_index":1452,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskquerydto:23",{"_index":1450,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskrepo",{"_index":1442,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponsedto",{"_index":1429,"title":{"classes/TaskResponseDto.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["tasks",{"_index":1520,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taskschema",{"_index":2892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskuc",{"_index":1427,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2840,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":429,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":428,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":455,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":451,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":778,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tech",{"_index":3967,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3351,"title":{},"body":{"license.html":{}}}],["technology",{"_index":3978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":3956,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["tells",{"_index":3260,"title":{},"body":{"license.html":{}}}],["template",{"_index":717,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3315,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3560,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3579,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3570,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3557,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2112,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":565,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test/...*.e2e",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3098,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tested",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testenvironment",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":3096,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["testpathignorepatterns",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":253,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1849,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":254,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3193,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["things",{"_index":2409,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["third",{"_index":3374,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1218,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1216,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1234,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1219,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery",{"_index":1231,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1229,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1230,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1291,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1270,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1308,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1304,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.close",{"_index":955,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.code",{"_index":302,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.content",{"_index":434,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":735,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1336,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":436,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find",{"_index":1489,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(course",{"_index":1480,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1482,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1484,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1164,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1161,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1156,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1165,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1162,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":588,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1160,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1602,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1283,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1278,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1301,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":564,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.lastname",{"_index":1604,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.logger.log(`create",{"_index":1268,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1274,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`resolve",{"_index":952,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.logger.log(`return",{"_index":1284,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1275,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(mongomemorydatabaseprovider.name",{"_index":949,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1267,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":510,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":514,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":305,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.mongod.geturi(otherdbname",{"_index":951,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.mongod.stop",{"_index":954,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.name",{"_index":371,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1298,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1280,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1287,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1273,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1039,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1026,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1035,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1036,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.request.app",{"_index":634,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.roles",{"_index":1596,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.schoolid",{"_index":1594,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.serverservice.gethello",{"_index":1371,"title":{},"body":{"controllers/ServerController.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1528,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1439,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":304,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1337,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":303,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userid",{"_index":1592,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.users.find((user",{"_index":1577,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.usersservice.findone(username",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validationerrors",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2819,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3517,"title":{},"body":{"license.html":{}}}],["thr",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2552,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["through",{"_index":3249,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3332,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3079,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3081,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":466,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":858,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(timeoutinterceptor.defaulttimeout",{"_index":1549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":860,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutms",{"_index":1547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2553,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1169,"title":{},"body":{"classes/NewsResponse.html":{}}}],["tiny",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toboolean",{"_index":1058,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["todo",{"_index":258,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/UserEntity.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1044,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["toggle",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3301,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1331,"title":{},"body":{"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{}}}],["trace",{"_index":821,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3541,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3540,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3542,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2095,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3250,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3496,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3598,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":753,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1341,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":757,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":754,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":908,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3455,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1740,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3516,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3357,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2783,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":432,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["try",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3808,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2707,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typ",{"_index":873,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["type.interface.ts",{"_index":811,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3845,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1195,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":781,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.objectid",{"_index":1343,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":1348,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.ts",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1033,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":446,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3479,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":606,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":3812,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc.ts",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1008,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1428,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":3026,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":530,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":278,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3200,"title":{},"body":{"license.html":{}}}],["understand",{"_index":3980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unhandled",{"_index":729,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":534,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{}}}],["unit",{"_index":2037,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3101,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3485,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3321,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3227,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2803,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3513,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":789,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3568,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1880,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["update",{"_index":974,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1261,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":996,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1192,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{}}}],["updatedat",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":997,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":415,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2794,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":785,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1148,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":533,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":950,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"dependencies.html":{}}}],["url",{"_index":2329,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2367,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":260,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":526,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1455,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["useful",{"_index":3770,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":155,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user(props",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["user.password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":570,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.equals(schoolid",{"_index":568,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.schoolid.tostring",{"_index":587,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.test.js",{"_index":3099,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.username",{"_index":1578,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["user/class",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/users.module",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/users.service",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_already_exists",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userdto",{"_index":1579,"title":{"classes/UserDTO.html":{}},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["userentity",{"_index":1584,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userentity(user",{"_index":1626,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["userid.tostring",{"_index":580,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":351,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":352,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1610,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1608,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1612,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1077,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1097,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1100,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1171,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["userrepo",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":797,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["users.service",{"_index":1632,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/admin",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["userscontroller",{"_index":1617,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["usersmodule",{"_index":119,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":150,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstasks",{"_index":1488,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["userstasks.map((task",{"_index":1493,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2627,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["usevalue",{"_index":3905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":608,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usually",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["util",{"_index":2368,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utils",{"_index":2334,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2780,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v2",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3832,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3837,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":761,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":854,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["validateuser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1642,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":739,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":747,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":338,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":319,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":746,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":483,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1347,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":274,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":782,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1767,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":2692,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1663,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3133,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":816,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":825,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":830,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verify",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["verison",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1843,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3150,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["via",{"_index":1505,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1257,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3510,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3564,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3814,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3076,"title":{},"body":{"index.html":{}}}],["void",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3411,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3840,"title":{},"body":{"todo.html":{}}}],["vscode",{"_index":3965,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3838,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":3966,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3364,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3755,"title":{},"body":{"license.html":{}}}],["want",{"_index":3160,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["want's",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":817,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":827,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1472,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3262,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3261,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3820,"title":{},"body":{"todo.html":{}}}],["way",{"_index":3401,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3775,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1523,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3064,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["whatever",{"_index":3604,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":910,"title":{},"body":{"injectables/Logger.html":{}}}],["whether",{"_index":3475,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":759,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3282,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["whose",{"_index":3462,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3279,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["widespread",{"_index":3179,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2387,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2835,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2299,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3089,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3356,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3104,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3158,"title":{},"body":{"license.html":{}}}],["within",{"_index":287,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["without",{"_index":2223,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3084,"title":{},"body":{"index.html":{}}}],["work",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3299,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2738,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["works",{"_index":1043,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":1407,"title":{},"body":{"injectables/ServerService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3636,"title":{},"body":{"license.html":{}}}],["wraps",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writeerrorlog",{"_index":726,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":733,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":713,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":728,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3719,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3068,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":720,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":1448,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["years",{"_index":3429,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":617,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsUc.html":{},"classes/SampleError.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3097,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3652,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '../../../shared/error/api-validation.error';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Body } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(private authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/entity/auth.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/entity/auth.entity.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthEntity {\n\t@ApiProperty()\n\taccess_token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { UsersModule } from '../user/users.module';\nimport { JwtStrategy } from './strategy/jwt.strategy';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [\n\t\tUsersModule,\n\t\tPassportModule,\n\t\tJwtModule.register({\n\t\t\tsecret: jwtConstants.secret,\n\t\t\tsignOptions: { expiresIn: '60s' },\n\t\t}),\n\t],\n\tproviders: [AuthService, JwtStrategy],\n\texports: [AuthService],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotImplementedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User, UsersService } from '../user/users.service';\nimport { AuthEntity } from './entity/auth.entity';\n\n@Injectable()\nexport class AuthService {\n\tconstructor(private usersService: UsersService, private jwtService: JwtService) {}\n\n\tasync validateUser(username: string, password: string): Promise {\n\t\tconst user = await this.usersService.findOne(username);\n\t\tif (user && user.password === password) {\n\t\t\tconst { password, ...result } = user;\n\t\t\t// passport will add result to req.user\n\t\t\treturn result as User;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync login(user: any): Promise {\n\t\tthrow new NotImplementedException();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '../../core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.equals(schoolId);\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError } from '@shared/error/business.error';\nimport { ApiValidationError } from '@shared/error/api-validation.error';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: Error): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: any, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack);\n};\n\nconst writeErrorLog = (error: any, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '../../../shared/error/api-validation.error';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ITaskMetadata.html":{"url":"classes/ITaskMetadata.html","title":"class - ITaskMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ITaskMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseName\n                            \n                            \n                                displayColor\n                            \n                            \n                                duedate\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport class ITaskMetadata extends BaseEntityWithTimestamps {\n\tname: string;\n\n\tduedate: Date;\n\n\tcourseName: string;\n\n\tdisplayColor: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '../../shared/interceptor/timeout.interceptor';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload) {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Collection, Entity, ManyToMany, ManyToOne, Property } from '@mikro-orm/core';\nimport { UserInfo } from '../../news/entity';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongoMemoryDatabaseProvider.html":{"url":"injectables/MongoMemoryDatabaseProvider.html","title":"injectable - MongoMemoryDatabaseProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongoMemoryDatabaseProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                getUri\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mongod: MongoMemoryServer, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongod\n                                                  \n                                                        \n                                                                    MongoMemoryServer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUri\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUri(otherDbName?: string | boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    otherDbName\n                                    \n                                            string | boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationShutdown()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { Logger } from '../../../core/logger/logger.service';\n\n@Injectable()\nexport class MongoMemoryDatabaseProvider {\n\tconstructor(private mongod: MongoMemoryServer, protected logger: Logger) {\n\t\tthis.logger.setContext(MongoMemoryDatabaseProvider.name);\n\t}\n\n\t// todo separate create?\n\n\tasync getUri(otherDbName?: string | boolean): Promise {\n\t\tconst uri = await this.mongod.getUri(otherDbName);\n\t\tthis.logger.log(`resolve with a new mongo uri: ${uri}`);\n\t\treturn uri;\n\t}\n\n\tasync close(): Promise {\n\t\tawait this.mongod.stop();\n\t}\n\n\tasync onApplicationShutdown(): Promise {\n\t\tawait this.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@ToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { ToBoolean } from '@shared/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@ToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:25\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationModel } from '@shared/repo/interface/pagination.interface';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: PaginationModel = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: PaginationModel): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { Logger } from '../../../core/logger/logger.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationModel.html":{"url":"interfaces/PaginationModel.html","title":"interface - PaginationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationModel {\n\treadonly skip?: number;\n\treadonly limit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/pipe/parse-object-id.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: any): Types.ObjectId {\n\t\tconst validObjectId = Types.ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleError.html":{"url":"classes/SampleError.html","title":"class - SampleError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                sample business error implementation\n\n            \n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:10\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { ServerService } from './server.service';\n\n@Controller()\nexport class ServerController {\n\tconstructor(private readonly serverService: ServerService) {}\n\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn this.serverService.getHello();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nServerModule -->\n\nUsersModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { ServerController } from './server.controller';\nimport { ServerService } from './server.service';\nimport { UsersModule } from './modules/user/users.module';\nimport { DB_URL } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tUsersModule,\n\t\tNewsModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n\tproviders: [ServerService],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerService.html":{"url":"injectables/ServerService.html","title":"injectable - ServerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ServerService {\n\tgetHello(): string {\n\t\treturn 'Hello World!';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport class ITaskMetadata extends BaseEntityWithTimestamps {\n\tname: string;\n\n\tduedate: Date;\n\n\tcourseName: string;\n\n\tdisplayColor: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, query: TaskQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                TaskQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponseDto, TaskQueryDto } from './dto';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(@CurrentUser() currentUser: ICurrentUser, @Query() query: TaskQueryDto): Promise {\n\t\tconst response = this.taskUc.findAllOpenForUser(currentUser.userId, query);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskOptionsEntry.html":{"url":"classes/TaskOptionsEntry.html","title":"class - TaskOptionsEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskOptionsEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.option.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TaskQueryDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@IsOptional()@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@IsOptional()@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(2015)@Max(2030)@IsOptional()@ApiProperty({description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskQueryDto } from '../controller/dto';\n\nclass TaskOptionsEntry extends TaskQueryDto {}\n\nexport type ITaskOption = TaskOptionsEntry;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskQueryDto.html":{"url":"classes/TaskQueryDto.html","title":"class - TaskQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-query.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@IsOptional()@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@IsOptional()@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(2015)@Max(2030)@IsOptional()@ApiProperty({description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskQueryDto {\n\t@IsInt()\n\t@Min(2015)\n\t@Max(2030)\n\t@IsOptional()\n\t@ApiProperty({ description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030 })\n\tyear?;\n\n\t@IsInt()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiProperty({ description: 'number of elements (not pages) to be skipped' })\n\tskip?;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@IsOptional()\n\t@ApiProperty({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: ITaskOption)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                ITaskOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ITaskOption, Task, ITaskMetadata, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { year, limit, skip }: ITaskOption = {}): Promise {\n\t\t// todo: handle coursegroups\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst usersTasks = await this.em.find(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t['course']\n\t\t);\n\n\t\tconst mappedTasks = usersTasks.map((task) => {\n\t\t\treturn {\n\t\t\t\tid: task.id,\n\t\t\t\t_id: task._id,\n\t\t\t\tname: task.name,\n\t\t\t\tduedate: task.dueDate,\n\t\t\t\tcourseName: task.course?.name,\n\t\t\t\tdisplayColor: task.course?.color,\n\t\t\t\tcreatedAt: task.createdAt,\n\t\t\t\tupdatedAt: task.updatedAt,\n\t\t\t} as ITaskMetadata; // TODO does not match ITaskMetadata, remove as...\n\t\t});\n\n\t\t// TODO: pagination or total is missing\n\t\treturn mappedTasks;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponseDto.html":{"url":"classes/TaskResponseDto.html","title":"class - TaskResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-response.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseName\n                            \n                            \n                                displayColor\n                            \n                            \n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponseDto {\n\tconstructor(partial: Partial) {\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate: Date;\n\n\t@ApiProperty()\n\tcourseName: string;\n\n\t@ApiProperty()\n\tdisplayColor: string;\n\n\t@ApiProperty()\n\tid: string;\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, option: ITaskOption)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                ITaskOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ITaskOption, ITaskMetadata } from '../entity';\nimport { TaskRepo } from '../repo/task.repo';\n\n// filter tasks older than 3 weeks\n// TODO: move dtos folder one level higher\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, option: ITaskOption): Promise {\n\t\treturn this.taskRepo.findAllOpenByStudent(userId, option);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                    Readonly\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                                Readonly\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static readonly defaultTimeout = 5000;\n\n\t// constructor(private readonly timeoutMs: number = 5000) {}\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(TimeoutInterceptor.defaultTimeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// This should be a real class/interface representing a user entity\nexport class User {\n\tuserId: string;\n\n\tusername: string;\n\n\tpassword?: string;\n}\n\n@Injectable()\nexport class UsersService {\n\tprivate readonly users: User[] = [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t];\n\n\tasync findOne(username: string): Promise {\n\t\treturn this.users.find((user) => user.username === username);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of a user', example: 'changeme'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'username of a user', example: 'john'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDTO {\n\t@ApiProperty({ description: 'username of a user', example: 'john' })\n\tusername: string;\n\n\t@ApiProperty({ description: 'password of a user', example: 'changeme' })\n\tpassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: JwtPayload)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        JwtPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schoolId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { JwtPayload } from '../../authentication/interface/jwt-payload';\n\nexport class UserEntity {\n\tconstructor(payload: JwtPayload) {\n\t\t// TODO Builder\n\t\tthis.userId = payload.userId;\n\t\tthis.schoolId = payload.schoolId;\n\t\tthis.roles = payload.roles;\n\t}\n\n\t@ApiProperty()\n\tuserId: string;\n\n\t@ApiProperty()\n\tschoolId: string;\n\n\t@ApiProperty()\n\troles: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/users.controller.ts:11\n                \n            \n\n\n            \n                \n                    default route to test authenticated access \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards, Request } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { JwtPayload } from '../../authentication/interface/jwt-payload';\nimport { UserEntity } from '../entity/user.entity';\n\n@Authenticate('jwt')\n@Controller('users')\nexport class UsersController {\n\t/** default route to test authenticated access */\n\t@Get('profile')\n\tgetProfile(@CurrentUser() user: JwtPayload): UserEntity {\n\t\treturn new UserEntity(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './controller/users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n\tproviders: [UsersService],\n\texports: [UsersService],\n\tcontrollers: [\n\t\t/* UsersController */\n\t],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t]\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// This should be a real class/interface representing a user entity\nexport class User {\n\tuserId: string;\n\n\tusername: string;\n\n\tpassword?: string;\n}\n\n@Injectable()\nexport class UsersService {\n\tprivate readonly users: User[] = [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t];\n\n\tasync findOne(username: string): Promise {\n\t\treturn this.users.find((user) => user.username === username);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nSC-9004 - Sync env variables between backend and frontend\n\n26.2.0\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            function\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/entity/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/jwt-options.provider.ts\n            \n            variable\n            jwtOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts\n            \n            injectable\n            MongoMemoryDatabaseProvider\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task-query.dto.ts\n            \n            class\n            TaskQueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task-response.dto.ts\n            \n            class\n            TaskResponseDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            ITaskMetadata\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.option.entity.ts\n            \n            class\n            TaskOptionsEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/users.service.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.service.ts\n            \n            injectable\n            ServerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            SampleError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/interface/pagination.interface.ts\n            \n            interface\n            PaginationModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/transformer/to-boolean.transformer.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.6.0\n        \n            arg : ^4.1.3\n        \n            async : ^2.6.3\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^6.0.1\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            ToBoolean   (apps/.../to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nAuthenticate(...strategies: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strategies\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/transformer/to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nToBoolean()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PropertyDecorator\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUsersModule->ServerModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    42 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\n\nACCEPTED\n\ncheck build & start for production with ops\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\nfix jest, linter, ...\n\n\nDONE\n\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            ITaskOption   (apps/.../task.option.entity.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            ValueOf   (apps/.../news.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/task.option.entity.ts\n    \n    \n        \n            \n                \n                    \n                    ITaskOption\n                \n            \n            \n                \n                            TaskOptionsEntry\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../main.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            jwtOptionsProvider   (apps/.../jwt-options.provider.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../main.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../main.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: any, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: any, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user } = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/jwt-options.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptionsProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tprovide: 'JWT_MODULE_OPTIONS',\n\tuseValue: {\n\t\tsecret: jwtConstants.secret,\n\t\tsignOptions: { expiresIn: '60s' },\n\t},\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to fix linter issues and apply formatting\n\nHow to test the application?\n\nnest:test executes jest tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either _.spec.ts beside providers or *.e2e-spec.ts in test folders\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e beside unit tests on providers which are placed beside the providers (executed by statements above), e2e tests can be added in test folder\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:dev:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nContent\nFor further reading, browse apps/server/doc.\nDevelopment\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nTesting\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below are correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside mapping) inside a controller, use the logic layer instead. Mapping can be unit tested.\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nTesting\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story). A unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nTesting\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests. A test must define the before and after state of the data set clearly and cleanup the database after execution to the before state. Instead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
