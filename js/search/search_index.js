var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.123,1,2.733]],["body/classes/ApiValidationError.html",[0,0.152,1,4.258,2,1.075,3,0.259,4,0.214,5,0.155,6,6.05,7,4.807,8,2.138,9,5.282,10,0.497,11,1.213,12,3.686,13,2.618,14,3.561,15,2.779,16,0.609,17,1.768,18,6.02,19,1.797,20,5.47,21,6.318,22,0.965,23,5.47,24,1.166,25,0.01,26,0.911,27,0.911,28,6.621,29,2.145,30,3.638,31,4.807,32,1.152,33,4.807,34,4.807,35,4.807,36,4.807,37,1.368,38,2.947,39,0.427,40,4.046,41,1.263,42,5.47,43,0.244,44,4.807,45,2.361,46,4.371,47,3.299,48,3.561,49,2.145,50,3.785,51,3.785,52,2.947,53,3.383,54,5.47,55,0.006,56,0.008,57,0.006]],["title/classes/ApiValidationErrorResponse.html",[0,0.123,58,3.531]],["body/classes/ApiValidationErrorResponse.html",[0,0.152,1,5.14,2,1.071,3,0.258,4,0.213,5,0.155,8,2.133,10,0.496,11,1.21,13,2.612,14,3.553,15,2.534,16,0.536,19,1.791,22,0.797,24,1.162,25,0.011,26,0.908,27,0.908,28,6.61,38,4.052,39,0.467,43,0.243,47,3.292,48,4.363,49,2.137,51,3.772,55,0.006,56,0.008,57,0.006,58,5.489,59,6.61,60,4.79,61,1.791,62,4.248,63,4.045,64,4.481,65,3.784,66,6.868,67,5.45,68,5.562,69,5.45,70,4.356,71,4.356,72,5.45,73,5.45,74,2.094,75,5.45,76,5.45,77,5.45,78,6.868,79,6.868,80,5.45,81,1.464,82,1.425,83,6.868,84,5.45]],["title/classes/AuthEntity.html",[0,0.123,85,3.531]],["body/classes/AuthEntity.html",[0,0.182,2,1.289,3,0.311,4,0.256,5,0.186,10,0.596,11,1.354,16,0.467,22,0.761,25,0.01,32,1.175,39,0.407,43,0.292,55,0.008,56,0.009,57,0.008,85,6.141,86,5.762,87,8.152,88,1.73,89,4.586,90,6.555,91,3.031]],["title/modules/AuthModule.html",[92,1.23,93,3.058]],["body/modules/AuthModule.html",[0,0.164,3,0.279,4,0.23,5,0.167,25,0.011,39,0.532,41,1.358,43,0.262,55,0.007,56,0.008,57,0.007,92,2.167,93,5.86,94,2.237,95,2.627,96,3.309,97,3.309,98,3.043,99,3.36,100,3.33,101,5.17,102,5.17,103,5.86,104,4.051,105,3.17,106,2.627,107,5.883,108,7.202,109,4.351,110,5.883,111,5.17,112,5.883,113,3.838,114,5.17,115,7.202,116,5.883,117,5.883,118,5.883,119,3.043,120,5.883,121,3.17]],["title/modules/AuthorizationModule.html",[92,1.23,122,2.883]],["body/modules/AuthorizationModule.html",[0,0.163,3,0.277,4,0.228,5,0.166,25,0.01,39,0.502,41,1.35,43,0.261,55,0.007,56,0.008,57,0.007,92,2.162,94,2.224,95,2.612,96,3.29,97,3.29,98,3.025,99,3.352,100,3.589,104,4.037,105,3.151,106,2.612,119,3.712,122,5.75,123,5.141,124,5.141,125,5.141,126,5.141,127,5.517,128,5.212,129,4.979,130,5.849,131,5.849,132,5.849,133,2.803,134,5.141]],["title/injectables/AuthorizationService.html",[128,2.602,135,1.166]],["body/injectables/AuthorizationService.html",[0,0.111,3,0.189,4,0.156,5,0.113,10,0.363,16,0.497,17,1.435,19,1.313,22,0.81,24,1.487,25,0.011,26,1.162,27,1.162,32,1.163,37,1.836,39,0.433,41,0.923,43,0.178,55,0.005,56,0.007,57,0.005,74,1.942,81,1.191,82,0.829,128,3.29,129,4.479,133,1.915,134,3.512,135,1.474,136,1.784,137,3.512,138,3.274,139,5.661,140,5.661,141,6.441,142,3.995,143,3.995,144,3.995,145,3.26,146,3.485,147,3.79,148,4.465,149,3.92,150,3.995,151,3.01,152,2.547,153,5.586,154,3.396,155,1.536,156,4.361,157,3.283,158,3.645,159,3.995,160,3.995,161,5.159,162,3.512,163,3.995,164,3.758,165,4.132,166,4.91,167,3.455,168,4.91,169,1.241,170,1.847,171,2.765,172,1.988,173,4.612,174,3.645,175,3.278,176,3.995,177,3.995,178,3.193,179,3.995,180,3.995,181,3.995,182,5.586,183,3.995,184,3.995,185,2.353,186,3.995,187,5.586,188,3.995,189,3.995]],["title/classes/BaseEntity.html",[0,0.123,190,1.733]],["body/classes/BaseEntity.html",[0,0.211,2,1.089,3,0.263,4,0.216,5,0.157,8,1.721,10,0.504,11,1.335,13,2.106,16,0.495,22,0.805,25,0.01,32,1.159,39,0.431,43,0.31,55,0.006,56,0.008,57,0.006,82,1.572,88,1.999,155,1.604,190,3.114,191,4.427,192,3.318,193,1.934,194,3.318,195,3.672,196,5.539,197,3.672,198,5.539,199,2.971,200,2.28,201,2.106,202,3.427,203,4.427,204,4.097,205,3.325,206,4.427,207,4.427,208,4.869,209,3.427,210,2.756,211,4.869,212,2.474,213,4.427,214,3.262,215,2.044,216,2.985,217,2.044,218,4.869,219,4.427,220,4.869,221,3.834,222,3.614,223,4.097,224,4.427,225,2.756,226,2.714,227,4.869,228,2.756]],["title/classes/BaseEntityWithTimestamps.html",[0,0.123,205,2.118]],["body/classes/BaseEntityWithTimestamps.html",[0,0.202,2,0.996,3,0.24,4,0.198,5,0.144,8,2.037,10,0.461,11,1.281,13,1.927,16,0.548,22,0.946,25,0.011,30,2.928,32,1.175,39,0.407,43,0.292,55,0.006,56,0.008,57,0.006,82,1.651,88,2.189,155,1.552,190,3.197,191,4.05,192,3.406,193,1.986,194,3.325,195,3.68,197,3.68,199,3.014,200,2.154,201,1.927,202,3.135,203,4.05,204,3.749,205,3.483,206,4.05,207,4.05,208,4.455,209,3.135,210,2.521,211,4.455,212,2.263,213,4.05,214,2.985,215,1.87,216,2.731,217,1.87,218,4.455,219,4.05,220,4.455,221,3.508,222,3.307,223,3.749,224,4.05,225,3.616,226,2.851,227,4.455,228,3.616,229,5.068,230,1.777,231,2.419,232,5.068,233,5.068,234,2.851,235,2.429,236,5.068,237,2.429,238,2.429]],["title/classes/BusinessError.html",[0,0.123,9,2.733]],["body/classes/BusinessError.html",[0,0.208,2,0.928,3,0.224,4,0.184,5,0.134,8,2.181,9,4.343,10,0.429,11,1.103,12,3.709,13,3.188,14,4.136,15,3.01,16,0.613,17,1.608,18,5.976,19,2.057,22,0.928,24,1.006,25,0.011,26,0.787,27,0.787,29,2.454,32,1.247,37,1.181,38,3.784,39,0.436,40,5.53,41,1.09,43,0.279,45,2.702,49,2.753,50,5.175,55,0.005,56,0.007,57,0.005,61,1.551,65,3.584,81,1.006,82,0.98,230,1.28,239,3.773,240,3.784,241,4.084,242,3.632,243,4.084,244,3.373,245,3.521,246,3.872,247,2.702,248,5.194,249,4.722,250,4.879,251,6.259,252,4.722,253,4.722,254,4.722,255,4.722,256,4.15,257,4.15,258,3.773,259,5.502,260,4.15,261,3.872,262,5.502,263,4.15,264,4.86,265,2.781,266,3.492,267,4.15,268,4.15,269,4.15]],["title/modules/CoreModule.html",[92,1.23,270,3.058]],["body/modules/CoreModule.html",[0,0.151,3,0.258,4,0.213,5,0.154,25,0.01,39,0.505,41,1.256,43,0.243,49,2.69,55,0.006,56,0.008,57,0.006,61,1.787,92,2.265,94,2.069,95,2.429,96,3.06,97,3.06,98,2.814,99,2.349,100,2.515,104,3.859,105,2.931,106,2.429,119,3.549,247,2.962,270,6.067,271,4.782,272,4.782,273,5.748,274,5.748,275,4.891,276,5.748,277,5.44,278,4.476,279,6.86,280,4.243,281,5.483,282,5.483,283,6.86,284,4.476,285,5.074,286,4.476,287,6.86,288,3.859,289,5.483,290,6.03,291,6.86,292,5.074,293,5.44,294,5.44,295,5.44,296,5.44]],["title/classes/Course.html",[0,0.123,297,1.788]],["body/classes/Course.html",[0,0.136,2,0.964,3,0.233,4,0.192,5,0.139,8,1.994,10,0.446,11,1.131,16,0.602,19,1.611,22,0.989,24,1.045,25,0.011,26,1.264,27,0.817,30,3.608,32,1.236,39,0.444,43,0.219,45,2.117,55,0.006,56,0.007,57,0.006,82,1.575,88,2.228,155,1.296,169,1.524,171,3.394,190,2.517,192,3.171,193,1.848,194,2.681,195,2.967,197,2.967,199,3.169,200,1.611,201,1.865,205,3.946,225,3.193,226,2.299,228,3.193,230,1.939,231,2.64,234,2.759,235,2.351,237,2.351,238,2.351,297,2.597,298,4.311,299,7.154,300,5.291,301,6.418,302,5.139,303,4.905,304,4.905,305,4.905,306,6.418,307,4.905,308,6.418,309,3.559,310,4.905,311,2.888,312,2.888,313,2.888,314,2.888,315,2.888,316,6.418,317,2.888,318,3.034,319,3.2,320,2.759]],["title/classes/CourseInfo.html",[0,0.123,321,2.486]],["body/classes/CourseInfo.html",[0,0.159,2,1.126,3,0.272,4,0.224,5,0.162,8,2.201,10,0.521,11,1.248,16,0.6,19,1.882,22,0.933,24,1.221,25,0.011,26,1.376,27,0.954,30,3.163,32,1.229,39,0.44,43,0.255,45,2.473,55,0.007,56,0.008,57,0.007,88,2.03,155,1.431,169,1.779,190,3.238,192,2.959,193,1.725,194,2.393,195,2.648,197,2.648,199,3.016,200,1.882,201,2.178,237,2.745,238,2.745,317,3.373,318,3.543,321,3.985,322,6.76,323,3.964,324,3.985,325,4.382,326,5.24,327,2.963,328,4.577,329,4.577]],["title/classes/CourseNews.html",[0,0.123,330,2.486]],["body/classes/CourseNews.html",[0,0.162,2,0.538,3,0.13,4,0.245,5,0.078,8,1.951,10,0.249,11,0.745,15,2.45,16,0.597,17,1.087,22,0.987,24,0.584,25,0.011,26,0.861,27,1.222,30,3.783,32,1.253,37,0.685,39,0.429,43,0.28,45,1.182,55,0.003,56,0.005,57,0.003,81,0.584,82,1.436,88,2.228,145,2.388,146,2.8,147,3.069,149,2.307,152,0.851,155,1.269,169,0.851,170,1.266,174,1.787,190,2.463,192,2.986,193,1.825,194,2.428,195,2.687,197,2.687,199,3.191,200,0.9,201,1.041,205,3.182,212,2.307,217,1.907,225,2.891,226,2.479,228,2.891,230,1.702,231,2.318,234,2.379,235,2.027,237,1.312,238,1.312,240,2.279,261,1.694,297,1.108,309,3.125,311,1.613,312,1.613,313,1.613,314,1.613,315,3.422,319,1.787,320,2.907,321,2.907,324,1.541,327,2.673,330,2.379,331,1.787,332,2.961,333,3.132,334,2.866,335,3.249,336,2.785,337,4.022,338,2.524,339,3.792,340,3.595,341,2.389,342,3.128,343,4.412,344,2.738,345,2.189,346,2.76,347,3.196,348,2.76,349,2.189,350,2.189,351,2.927,352,3.792,353,2.927,354,2.76,355,2.104,356,2.616,357,2.927,358,2.189,359,2.189,360,3.131,361,2.027,362,2.189,363,2.784,364,3.043,365,2.189,366,2.189,367,2.189,368,2.616,369,2.189,370,2.616,371,2.189,372,2.927,373,2.189,374,2.189,375,2.189,376,2.189,377,2.189,378,2.189,379,2.189,380,2.927,381,3.885,382,2.189,383,3.792,384,1.895,385,2.379,386,1.476,387,0.553,388,1.895,389,1.417,390,1.895,391,1.895,392,1.895,393,1.895,394,1.895,395,1.895,396,1.895,397,1.895,398,2.927,399,2.307,400,2.389,401,2.307,402,2.307,403,2.307,404,3.043,405,2.673,406,1.895,407,2.927,408,1.895,409,1.895,410,3.576,411,1.613,412,1.613]],["title/classes/CreateNewsParams.html",[0,0.123,413,2.883]],["body/classes/CreateNewsParams.html",[0,0.177,2,0.956,3,0.231,4,0.19,5,0.138,10,0.442,11,1.125,15,2.899,16,0.56,22,0.912,25,0.01,32,1.275,39,0.442,43,0.217,55,0.006,56,0.007,57,0.006,61,2.739,74,1.355,88,2.073,89,4.536,91,2.249,146,2.883,148,3.84,154,2.851,155,1.732,170,3.295,193,1.555,226,2.287,332,2.917,333,3.061,334,3.392,336,3.415,413,4.166,414,6.444,415,3.599,416,3.06,417,4.722,418,3.592,419,6.384,420,4.276,421,4.865,422,5.102,423,3.76,424,5.102,425,4.722,426,4.865,427,4.865,428,4.419,429,4.419,430,4.68,431,4.865,432,4.865,433,4.932,434,5.102,435,3.592,436,4.865,437,4.865,438,5.611,439,6.279,440,3.01,441,3.367,442,3.888,443,3.175]],["title/injectables/DurationLoggingInterceptor.html",[135,1.166,444,3.531]],["body/injectables/DurationLoggingInterceptor.html",[0,0.154,3,0.263,4,0.217,5,0.157,10,0.505,11,1.224,12,3.273,16,0.396,17,1.785,22,0.806,24,1.183,25,0.011,26,0.925,27,0.925,37,1.388,39,0.493,41,1.281,43,0.248,55,0.006,56,0.008,57,0.006,61,1.823,74,1.545,81,1.183,82,1.441,135,1.833,136,2.478,230,1.504,231,2.048,286,4.532,401,3.386,444,5.551,445,6.665,446,4.878,447,5.138,448,6.946,449,5.138,450,4.532,451,3.506,452,4.11,453,6.105,454,6.105,455,5.877,456,6.984,457,5.55,458,2.761,459,6.665,460,6.946,461,5.55,462,6.105,463,4.435,464,5.55,465,4.878,466,4.878,467,3.621,468,5.55,469,3.841,470,6.946,471,5.55,472,5.55,473,5.55]],["title/modules/ErrorModule.html",[92,1.23,273,3.058]],["body/modules/ErrorModule.html",[0,0.173,3,0.295,4,0.243,5,0.176,25,0.011,39,0.495,41,1.436,43,0.277,55,0.007,56,0.009,57,0.007,61,2.043,92,2.074,94,2.365,99,2.685,167,4.608,230,2.019,273,5.155,288,4.19,292,6.113,474,6.22,475,6.547,476,4.387,477,4.19,478,3.853,479,3.847,480,5.155,481,6.22,482,6.22,483,3.351,484,4.971]],["title/classes/ErrorResponse.html",[0,0.123,38,2.381]],["body/classes/ErrorResponse.html",[0,0.159,2,1.122,3,0.271,4,0.223,5,0.162,12,3.465,13,3.052,14,3.972,15,2.833,16,0.588,19,2.322,22,0.662,24,1.216,25,0.011,26,0.951,27,0.951,29,3.011,32,1.327,38,3.808,39,0.354,40,4.22,41,1.318,43,0.255,49,3.011,55,0.007,56,0.008,57,0.007,61,2.322,62,4.75,63,4.162,64,4.611,65,3.387,258,4.56,485,5.015,486,5.706,487,5.706,488,5.706,489,4.56,490,4.891,491,5.706,492,5.015,493,5.706,494,3.36,495,2.384,496,3.21,497,3.723,498,4.56]],["title/injectables/FeathersAuthProvider.html",[129,2.602,135,1.166]],["body/injectables/FeathersAuthProvider.html",[0,0.11,3,0.188,4,0.155,5,0.112,10,0.36,16,0.541,17,1.426,19,1.301,22,0.88,24,1.616,25,0.011,26,1.263,27,1.263,32,1.119,37,1.83,39,0.454,41,0.914,43,0.177,55,0.005,56,0.006,57,0.005,74,2.279,81,1.616,82,0.821,129,3.269,135,1.465,136,1.768,138,3.447,145,3.335,146,3.068,147,3.6,148,3.743,149,3.266,152,2.469,156,4.196,157,3.532,158,3.622,169,1.23,171,2.74,172,1.97,175,3.266,185,2.331,190,2.176,192,1.654,194,2.678,200,1.301,202,2.449,338,1.505,361,3.33,387,0.8,451,2.963,499,6.223,500,2.928,501,5.55,502,5.122,503,5.55,504,5.55,505,5.122,506,3.959,507,4.266,508,3.959,509,4.879,510,3.959,511,3.48,512,3.959,513,4.879,514,3.959,515,4.879,516,3.959,517,3.959,518,3.959,519,4.436,520,3.48,521,3.164,522,4.879,523,1.97,524,3.164,525,4.879,526,3.48,527,3.48,528,3.48,529,2.767,530,3.48,531,4.879,532,4.879,533,3.841,534,4.879,535,3.48,536,2.583,537,3.48,538,3.48,539,1.83,540,3.48,541,2.227,542,4.105,543,3.164,544,3.48,545,3.48,546,3.48,547,2.928]],["title/interfaces/FeathersError.html",[387,0.892,548,3.058]],["body/interfaces/FeathersError.html",[3,0.302,4,0.249,5,0.18,8,2.346,10,0.579,11,1.33,13,3.167,16,0.621,25,0.01,29,3.157,32,1.319,43,0.284,49,2.961,55,0.007,56,0.009,57,0.007,387,1.285,548,5.226,549,2.42,550,5.593,551,5.593,552,7.319]],["title/modules/FeathersModule.html",[92,1.23,127,2.883]],["body/modules/FeathersModule.html",[0,0.16,3,0.273,4,0.225,5,0.163,25,0.01,39,0.441,41,1.33,43,0.257,55,0.007,56,0.008,57,0.007,61,1.892,92,2.303,94,2.932,95,2.572,96,3.24,97,3.24,98,2.979,99,3.329,100,3.565,104,3.999,105,3.104,106,2.572,127,5.57,133,3.696,507,4.969,521,4.603,529,3.069,553,5.063,554,5.063,555,5.063,556,5.76,557,4.397,558,3.83,559,3.999,560,3.677,561,3.407,562,4.186,563,4.638,564,4.638,565,4.638,566,4.638,567,5.681,568,3.287]],["title/interfaces/FeathersService.html",[387,0.892,569,3.268]],["body/interfaces/FeathersService.html",[0,0.135,3,0.231,4,0.19,5,0.138,10,0.442,16,0.539,17,1.64,22,0.741,24,1.361,25,0.011,26,1.064,27,1.064,32,0.744,37,1.597,39,0.488,41,1.123,43,0.337,55,0.006,56,0.007,57,0.006,74,1.355,81,1.037,94,1.85,133,2.332,135,1.685,145,2.877,157,3.266,169,1.511,173,4.009,193,1.555,247,2.1,387,0.983,399,2.851,400,2.952,401,2.851,402,2.851,403,2.851,404,3.76,451,2.249,479,3.01,507,2.737,529,3.481,549,1.85,557,3.01,558,3.84,559,4.009,560,2.517,561,3.765,562,2.865,563,3.175,564,3.175,565,3.175,566,3.175,567,3.888,568,2.249,569,5.596,570,5.271,571,3.367,572,3.182,573,5.611,574,6.567,575,4.865,576,4.748,577,3.949,578,5.611,579,4.865,580,3.302,581,3.175,582,3.01,583,3.888,584,5.102,585,5.611,586,3.949,587,5.102,588,5.102,589,3.888,590,3.599,591,4.276,592,4.276,593,4.276,594,4.276,595,4.276]],["title/injectables/FeathersServiceProvider.html",[135,1.166,507,2.486]],["body/injectables/FeathersServiceProvider.html",[0,0.133,3,0.227,4,0.187,5,0.136,10,0.435,16,0.536,17,1.623,19,1.573,22,0.733,24,1.347,25,0.011,26,1.053,27,1.053,32,1.081,37,1.198,39,0.485,41,1.106,43,0.335,55,0.006,56,0.007,57,0.006,61,1.573,74,1.333,81,1.021,94,2.403,133,3.028,135,1.667,136,2.138,145,2.403,157,2.728,169,1.488,173,3.978,193,1.166,247,2.067,387,0.967,399,2.821,400,2.921,401,2.821,402,2.821,403,2.821,404,3.721,451,2.214,479,2.962,507,3.554,529,3.587,557,3.908,558,4.051,559,4.23,560,3.268,561,4.029,562,3.721,563,4.122,564,4.122,565,4.122,566,4.122,567,5.049,568,2.921,569,5.561,570,5.23,571,3.314,572,2.138,573,4.209,574,5.651,576,4.164,578,4.209,580,3.268,581,3.124,582,2.962,583,3.827,584,5.049,585,5.553,586,3.908,587,5.049,588,5.049,589,3.827,590,4.673,591,4.209,592,4.209,593,5.553,594,4.209,595,4.209,596,6.318,597,4.789,598,4.789,599,4.789,600,3.542]],["title/classes/GlobalErrorFilter.html",[0,0.123,480,3.058]],["body/classes/GlobalErrorFilter.html",[0,0.132,1,3.511,2,0.628,3,0.151,4,0.125,5,0.091,9,3.888,10,0.29,11,0.837,12,2.45,13,2.39,14,2.458,15,2.094,16,0.479,17,1.458,22,0.659,24,1.013,25,0.011,26,0.946,27,0.792,37,1.572,38,4.263,39,0.465,41,0.737,43,0.142,47,1.53,48,1.652,49,3.47,55,0.004,56,0.006,57,0.004,62,1.975,63,4.591,65,1.53,70,2.552,71,2.552,74,2.387,81,1.741,82,1.394,133,2.72,173,2.673,199,1.252,217,1.178,230,0.866,231,1.178,235,1.53,242,2.458,248,4.649,341,2.624,387,0.645,399,2.122,400,2.197,401,2.122,402,2.122,403,1.426,451,2.624,452,4.092,467,3.101,476,3.957,478,2.458,480,3.289,541,1.796,548,4.35,552,2.807,560,1.652,568,1.476,582,1.975,601,4.649,602,2.21,603,5.675,604,5.37,605,4.536,606,4.752,607,3.193,608,4.752,609,4.875,610,5.675,611,6.286,612,3.193,613,4.198,614,5.675,615,3.193,616,3.193,617,2.807,618,2.807,619,3.193,620,3.193,621,3.193,622,2.552,623,2.807,624,2.552,625,5.63,626,2.552,627,2.552,628,2.807,629,3.101,630,2.552,631,2.21,632,3.511,633,1.975,634,2.552,635,2.807,636,4.177,637,2.807,638,2.552,639,2.807,640,2.807,641,2.807,642,2.807,643,2.807,644,3.928,645,3.798,646,3.193,647,3.798,648,5.37,649,3.193,650,3.193,651,3.193,652,3.798,653,3.193,654,3.193,655,4.752,656,3.193,657,3.193,658,2.084,659,4.177,660,2.362,661,2.807,662,1.975,663,2.084,664,4.177,665,3.058,666,2.552,667,4.177,668,2.807,669,3.798,670,2.807,671,2.807,672,2.362,673,2.552,674,2.807,675,2.807,676,2.552,677,2.552,678,2.552,679,2.362,680,2.552,681,2.807,682,2.807,683,2.807,684,2.807,685,5.906,686,2.552,687,5.906,688,2.807,689,2.552,690,2.807,691,3.193,692,3.193,693,3.193,694,4.752,695,3.193,696,3.193]],["title/classes/GlobalValidationPipe.html",[0,0.123,697,3.268]],["body/classes/GlobalValidationPipe.html",[0,0.208,1,3.329,2,1.058,3,0.255,4,0.21,5,0.153,8,2.117,11,0.948,16,0.533,19,2.456,21,5.446,22,0.625,25,0.011,39,0.423,41,1.243,43,0.24,45,2.324,48,4.065,55,0.006,56,0.008,57,0.006,61,1.768,65,2.58,70,4.302,71,4.302,81,1.147,82,1.117,88,1.798,89,3.028,217,2.514,230,1.847,241,4.446,288,3.833,389,3.868,416,3.583,440,4.215,495,2.249,539,2.488,541,3.028,576,3.17,697,5.04,698,5.989,699,4.731,700,5.446,701,4.215,702,5.446,703,5.446,704,5.446,705,4.446,706,7.477,707,5.382,708,5.04,709,3.725,710,4.302,711,5.382,712,2.58,713,3.725,714,5.382,715,5.382,716,3.981,717,5.382,718,5.382,719,5.382,720,3.981,721,4.302,722,5.382,723,3.028,724,3.725,725,5.382,726,4.302,727,3.329,728,5.382,729,3.981,730,3.028,731,5.382,732,5.382]],["title/interfaces/ICreateNews.html",[387,0.892,733,2.883]],["body/interfaces/ICreateNews.html",[3,0.247,4,0.203,5,0.147,10,0.473,11,1.174,15,2.863,16,0.609,25,0.011,32,1.255,39,0.323,43,0.372,55,0.006,56,0.008,57,0.006,61,1.708,74,1.856,145,2.797,146,2.696,147,3.401,148,3.591,154,2.321,155,1.05,169,1.615,170,2.403,212,2.976,215,1.918,226,2.635,297,2.103,302,3.392,318,3.215,332,2.909,333,3.377,334,3.35,336,3.719,338,1.977,386,2.801,387,1.658,549,1.977,572,2.321,609,3.598,733,4.348,734,3.598,735,5.858,736,6.201,737,3.392,738,3.598,739,3.061,740,3.061,741,3.392,742,5.326,743,4.569,744,5.326,745,3.598,746,3.598,747,4.569,748,3.392,749,3.215,750,3.061]],["title/interfaces/ICurrentUser.html",[387,0.892,751,2.602]],["body/interfaces/ICurrentUser.html",[3,0.261,4,0.215,5,0.156,8,1.708,10,0.5,11,1.217,16,0.565,25,0.011,29,2.708,32,1.377,43,0.308,55,0.006,56,0.008,57,0.006,156,4.268,165,5.109,193,1.929,215,2.549,361,3.991,387,1.395,549,2.091,751,4.447,752,4.395,753,4.395,754,6.33,755,5.482,756,5.52,757,5.151,758,5.109,759,4.78,760,3.806,761,4.067,762,4.834,763,4.834,764,4.834,765,4.834,766,4.395,767,4.834,768,4.834,769,3.806]],["title/interfaces/IErrorType.html",[250,2.883,387,0.892]],["body/interfaces/IErrorType.html",[3,0.302,4,0.249,5,0.181,10,0.58,11,1.332,12,3.479,15,3.075,16,0.621,25,0.01,32,1.351,43,0.284,50,5.767,55,0.007,56,0.009,57,0.007,250,4.933,387,1.288,549,2.425,770,5.604,771,5.604]],["title/interfaces/ILogger.html",[387,0.892,772,3.268]],["body/interfaces/ILogger.html",[3,0.257,4,0.211,5,0.153,10,0.492,14,4.201,16,0.579,17,1.756,22,0.943,24,1.731,25,0.01,26,1.353,27,1.433,32,1.365,37,2.031,43,0.241,49,2.681,55,0.006,56,0.008,57,0.006,387,1.093,458,4.408,549,2.058,577,5.13,772,5.057,773,4.756,774,6.009,775,4.461,776,6.837,777,6.837,778,5.411,779,5.411,780,6.009,781,5.99,782,5.411,783,6.009,784,5.411,785,5.411,786,5.411,787,6.009,788,5.411,789,4.756,790,4.756]],["title/interfaces/INewsProperties.html",[381,2.733,387,0.892]],["body/interfaces/INewsProperties.html",[0,0.188,3,0.176,4,0.29,5,0.105,8,2.096,10,0.337,11,0.934,15,2.739,16,0.575,25,0.011,26,0.618,27,1.302,32,1.304,39,0.474,43,0.318,45,1.601,55,0.004,56,0.006,57,0.004,81,0.79,82,1.283,145,3.164,146,2.73,147,2.859,149,1.656,152,1.152,155,1.441,169,1.152,170,1.714,174,2.419,190,2.078,193,0.903,199,3.064,200,1.218,201,1.41,205,2.54,212,2.761,217,2.282,226,2.417,240,2.855,261,2.293,297,1.5,309,3.076,315,3.121,319,2.419,320,3.478,321,2.981,324,2.086,327,1.918,330,2.086,331,2.419,332,2.852,333,3.265,334,3.204,335,3.839,336,3.42,337,4.939,338,2.906,339,4.657,340,4.414,341,1.714,343,4.602,346,2.419,348,2.419,351,2.566,352,3.457,353,2.566,354,2.419,355,1.845,356,2.293,357,2.566,360,3.332,361,1.777,363,3.635,364,3.973,368,2.293,370,2.293,372,2.566,380,2.566,381,4.173,383,4.402,384,2.566,385,2.981,386,1.998,387,0.749,388,2.566,389,1.918,390,2.566,391,2.566,392,2.566,393,2.566,394,2.566,395,2.566,396,2.566,397,2.566,398,3.667,399,2.761,400,2.859,401,2.761,402,2.761,403,2.761,404,3.641,405,3.199,406,2.566,407,3.667,408,2.566,409,2.566,410,4.279,411,2.183,412,2.183,549,1.41]],["title/interfaces/INewsScope.html",[387,0.892,748,2.883]],["body/interfaces/INewsScope.html",[3,0.251,4,0.207,5,0.15,10,0.481,11,1.187,15,1.951,16,0.597,25,0.011,27,1.301,32,1.031,39,0.328,43,0.374,55,0.006,56,0.008,57,0.006,61,1.738,74,1.876,145,2.82,146,2.726,147,3.429,148,3.631,154,2.362,155,1.068,169,1.643,170,2.445,212,3.009,215,1.951,226,1.894,297,2.14,302,3.451,318,3.271,332,2.918,333,3.39,334,2.283,336,2.535,338,2.011,386,2.85,387,1.665,549,2.011,572,2.362,609,3.66,733,3.451,734,3.66,735,4.648,736,5.385,737,3.451,738,3.66,739,3.115,740,3.115,741,3.451,742,5.385,743,4.648,744,6.241,745,3.66,746,3.66,747,5.923,748,4.397,749,4.83,750,4.367]],["title/interfaces/IPagination.html",[387,0.892,791,3.058]],["body/interfaces/IPagination.html",[3,0.308,4,0.254,5,0.184,10,0.591,11,1.347,16,0.545,25,0.01,27,1.397,29,3.397,43,0.29,55,0.008,56,0.009,57,0.008,387,1.313,549,2.471,791,5.291,792,5.712,793,5.187,794,5.187]],["title/modules/InterceptorModule.html",[92,1.23,274,3.058]],["body/modules/InterceptorModule.html",[0,0.162,3,0.277,4,0.228,5,0.165,25,0.011,39,0.481,41,1.348,43,0.26,55,0.007,56,0.008,57,0.007,61,1.918,92,1.996,94,2.22,99,2.52,214,4.221,215,2.154,274,4.961,288,4.032,289,6.199,447,5.301,479,3.611,483,3.862,484,5.728,568,3.74,701,4.434,712,3.435,723,3.284,795,5.837,796,6.3,797,4.961,798,5.301,799,4.434,800,8.089,801,4.032,802,5.301,803,5.728,804,5.983,805,5.837,806,3.809]],["title/injectables/JwtAuthGuard.html",[135,1.166,807,3.268]],["body/injectables/JwtAuthGuard.html",[0,0.185,3,0.316,4,0.261,5,0.189,8,2.072,25,0.01,39,0.482,41,1.54,43,0.298,55,0.008,56,0.009,57,0.008,109,4.934,135,2.048,136,2.979,807,5.742,808,5.863,809,5.863,810,6.67,811,6.67]],["title/interfaces/JwtConstants.html",[113,2.883,387,0.892]],["body/interfaces/JwtConstants.html",[3,0.287,4,0.237,5,0.172,10,0.551,11,1.292,16,0.584,25,0.01,32,1.34,39,0.376,43,0.327,55,0.007,56,0.009,57,0.007,74,2.042,113,5.346,325,4.535,387,1.224,549,2.304,761,4.481,766,4.842,812,4.842,813,7.374,814,6.205,815,6.444,816,6.059,817,6.059,818,4.842,819,6.059,820,6.059,821,6.059,822,5.325,823,5.325]],["title/interfaces/JwtPayload.html",[387,0.892,760,3.058]],["body/interfaces/JwtPayload.html",[3,0.256,4,0.211,5,0.153,8,2.122,10,0.491,11,1.203,16,0.591,25,0.011,29,3.251,32,1.368,43,0.305,55,0.006,56,0.008,57,0.006,156,2.911,165,3.995,193,1.663,215,2.904,361,3.273,387,1.379,549,2.054,751,4.41,752,4.317,753,4.317,754,4.317,755,3.738,756,4.317,757,4.633,758,3.995,759,3.738,760,4.726,761,5.051,762,6.917,763,6.002,764,6.917,765,6.917,766,5.458,767,6.917,768,6.917,769,5.446]],["title/injectables/JwtStrategy.html",[103,3.058,135,1.166]],["body/injectables/JwtStrategy.html",[0,0.16,3,0.274,4,0.225,5,0.164,8,1.793,10,0.525,16,0.411,17,1.828,19,2.535,22,0.826,24,1.23,25,0.011,26,0.961,27,0.961,37,1.443,39,0.514,41,1.333,43,0.257,45,2.491,55,0.007,56,0.008,57,0.007,81,1.23,103,4.926,109,4.268,113,3.765,114,5.072,135,1.878,136,2.577,152,1.793,215,2.626,216,3.835,541,3.246,760,5.833,798,5.264,824,5.072,825,5.771,826,7.117,827,5.771,828,5.708,829,5.771,830,4.612,831,5.072,832,4.926,833,5.771,834,5.771,835,5.771,836,5.771,837,5.771,838,5.771,839,5.771,840,5.771,841,5.771,842,5.771,843,5.771,844,5.771]],["title/classes/Lesson.html",[0,0.123,845,2.733]],["body/classes/Lesson.html",[0,0.146,2,1.032,3,0.249,4,0.205,5,0.149,8,2.084,10,0.478,11,1.182,16,0.587,22,0.983,25,0.011,30,3.675,32,1.026,39,0.459,43,0.234,55,0.006,56,0.008,57,0.006,82,1.392,88,2.235,155,1.355,169,1.632,190,2.631,192,3.254,193,1.897,194,2.803,195,3.102,197,3.102,199,3.054,200,1.726,201,1.997,205,4.009,225,3.338,226,2.403,228,3.338,230,1.818,231,2.475,234,2.955,235,2.517,237,2.517,238,2.517,297,3.33,311,3.093,312,3.093,313,3.093,314,3.093,317,3.093,320,2.955,343,3.951,347,3.249,750,3.951,845,4.15,846,4.616,847,5.467,848,5.896,849,5.252,850,5.252,851,4.616,852,4.616]],["title/injectables/Logger.html",[135,1.166,452,2.286]],["body/injectables/Logger.html",[0,0.161,3,0.274,4,0.226,5,0.164,8,2.214,17,1.485,25,0.011,39,0.442,41,1.335,43,0.258,55,0.007,56,0.008,57,0.007,135,1.88,136,2.582,167,3.576,173,4.008,217,2.133,230,1.567,247,2.496,452,4.362,458,3.843,467,4.649,496,3.253,529,2.496,563,3.773,580,3.686,705,3.773,709,4.001,712,3.415,772,5.963,775,5.04,853,5.082,854,8.062,855,5.782,856,5.782,857,2.991,858,4.001,859,4.001,860,5.082,861,4.276,862,5.782,863,3.576,864,3.576,865,6.263,866,3.253,867,4.276,868,5.782,869,5.782,870,5.082,871,4.276,872,5.082,873,3.405,874,5.782,875,5.782,876,5.782]],["title/modules/LoggerModule.html",[92,1.23,275,2.602]],["body/modules/LoggerModule.html",[0,0.173,3,0.294,4,0.242,5,0.176,25,0.01,39,0.462,41,1.433,43,0.277,55,0.007,56,0.009,57,0.007,92,2.219,94,2.36,95,2.772,96,3.492,97,3.492,98,3.211,99,3.439,100,3.683,104,4.185,105,3.345,106,2.772,275,5.105,452,4.611,877,5.456,878,5.456,879,5.456,880,6.207,881,6.207]],["title/modules/MongoMemoryDatabaseModule.html",[92,1.23,882,3.531]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.128,3,0.219,4,0.18,5,0.131,12,1.992,16,0.439,17,1.185,19,1.516,22,0.716,24,0.983,25,0.011,26,0.769,27,0.769,37,1.542,39,0.479,41,1.065,43,0.33,55,0.005,56,0.007,57,0.005,74,2.063,81,1.579,82,0.957,92,2.063,94,1.755,99,1.992,100,2.133,119,2.387,138,2.809,157,2.661,175,3.1,200,2.025,201,1.755,203,3.688,215,1.703,341,2.85,450,4.022,451,3.209,467,3.011,479,2.854,483,3.321,572,2.06,577,2.854,581,4.022,662,2.854,857,3.189,873,2.717,882,5.548,883,5.548,884,5.613,885,5.548,886,3.688,887,4.614,888,6.164,889,6.982,890,4.614,891,4.529,892,6.786,893,7.72,894,4.614,895,5.418,896,5.48,897,3.688,898,6.101,899,6.482,900,3.011,901,3.688,902,4.055,903,5.418,904,4.559,905,4.559,906,3.688,907,4.022,908,3.688,909,3.011,910,3.193,911,3.413,912,3.688,913,3.193,914,4.055,915,3.413,916,5.418,917,4.055,918,2.717,919,4.055,920,4.055,921,4.614,922,3.193,923,4.614,924,4.614,925,4.926,926,3.413,927,3.413,928,3.193,929,3.413,930,4.614,931,4.614,932,4.614]],["title/classes/News.html",[0,0.123,332,1.494]],["body/classes/News.html",[0,0.17,2,0.592,3,0.143,4,0.256,5,0.085,8,2.036,10,0.274,11,0.801,15,2.543,16,0.593,17,1.169,19,0.99,22,0.976,24,0.97,25,0.011,26,1.017,27,1.28,30,3.078,32,1.256,37,0.754,39,0.444,43,0.292,45,1.301,55,0.004,56,0.005,57,0.004,81,0.642,82,1.36,88,2.182,145,2.493,146,2.895,147,3.187,149,2.447,152,0.936,155,1.324,169,0.936,170,1.393,174,1.966,190,2.57,192,2.551,193,1.679,194,1.9,195,2.103,197,2.103,199,3.221,200,0.99,201,1.146,205,3.429,212,2.447,217,2.022,225,2.263,226,2.348,228,2.263,230,1.486,231,2.022,234,1.695,235,1.444,237,1.444,238,1.444,240,2.451,261,1.864,297,1.219,309,3.261,311,1.774,312,1.774,313,1.774,314,1.774,315,3.596,319,1.966,320,3.083,321,2.559,324,2.559,327,3.158,330,1.695,331,1.966,332,2.855,333,3.109,334,2.975,335,3.391,336,2.926,337,4.226,338,2.621,339,3.984,340,3.777,341,2.534,342,3.365,343,4.44,346,2.968,347,3.39,348,2.968,351,3.148,352,3.984,353,3.148,354,2.968,355,2.263,356,2.814,357,3.148,360,3.29,361,2.18,363,2.953,364,3.228,368,2.814,370,2.814,372,3.148,380,3.148,381,4.426,383,3.984,384,2.085,385,2.559,386,1.623,387,0.608,388,2.085,389,1.558,390,2.085,391,2.085,392,2.085,393,2.085,394,2.085,395,2.085,396,2.085,397,2.085,398,3.148,399,2.447,400,2.534,401,2.447,402,2.447,403,2.447,404,3.228,405,2.835,406,2.085,407,3.148,408,2.085,409,2.085,410,3.793,411,1.774,412,1.774,933,4.549,934,3.013,935,3.013,936,3.013,937,3.013,938,3.013,939,3.013,940,3.013,941,3.013,942,3.013,943,3.013,944,3.013,945,3.013]],["title/controllers/NewsController.html",[946,2.286,947,3.268]],["body/controllers/NewsController.html",[0,0.102,3,0.173,4,0.143,5,0.104,10,0.332,12,1.578,16,0.506,17,1.347,22,0.824,24,1.512,25,0.011,26,1.182,27,1.182,32,1.212,37,1.775,39,0.499,41,0.844,43,0.163,55,0.004,56,0.006,57,0.004,74,2.207,81,1.512,82,0.758,88,1.873,91,1.689,121,1.969,138,3.406,152,2.082,154,2.342,155,1.059,157,3.473,172,1.818,173,2.95,175,3.169,193,1.277,332,2.719,338,1.994,355,2.609,413,4.373,416,3.647,539,2.836,557,2.26,576,4.35,580,3.173,665,2.826,700,2.92,751,4.987,828,2.703,946,1.89,947,3.879,948,3.212,949,3.212,950,4.638,951,4.537,952,6.133,953,4.537,954,3.654,955,4.537,956,3.654,957,5.918,958,3.654,959,5.244,960,3.654,961,7.387,962,3.212,963,4.638,964,3.947,965,4.373,966,3.654,967,3.654,968,5.244,969,3.654,970,4.609,971,5.244,972,4.146,973,5.244,974,3.422,975,4.609,976,3.654,977,4.638,978,5.244,979,3.654,980,4.537,981,3.212,982,3.212,983,4.911,984,3.654,985,3.654,986,2.384,987,3.212,988,3.794,989,3.212,990,2.703,991,3.212,992,3.212,993,2.529,994,2.703,995,3.654,996,3.654,997,3.212,998,3.654,999,3.212,1000,3.212,1001,6.237,1002,3.212,1003,3.212,1004,5.891,1005,2.92,1006,4.609,1007,3.654,1008,3.654,1009,3.654,1010,3.654,1011,3.654,1012,2.703,1013,2.92,1014,3.654,1015,6.133,1016,3.654,1017,3.654,1018,3.654,1019,5.244,1020,3.654]],["title/classes/NewsFilterQuery.html",[0,0.123,963,3.058]],["body/classes/NewsFilterQuery.html",[0,0.185,2,1.024,3,0.247,4,0.203,5,0.148,10,0.473,11,1.175,16,0.525,22,0.855,25,0.01,27,1.368,32,1.187,39,0.482,43,0.232,55,0.006,56,0.008,57,0.006,61,2.637,74,1.45,88,1.943,91,2.407,146,3.247,148,3.967,154,2.979,155,1.052,170,3.404,193,1.625,332,2.776,333,3.141,428,4.617,429,4.617,430,4.802,433,5.095,434,5.332,435,3.753,439,5.332,440,3.221,441,3.604,442,4.162,443,3.398,749,4.554,750,3.929,963,4.617,1021,6.205,1022,4.162,1023,5.207,1024,5.332,1025,6.672,1026,5.207,1027,5.207,1028,5.207,1029,5.207,1030,5.864,1031,6.672,1032,4.617,1033,5.207,1034,5.742,1035,6.672,1036,5.207,1037,6.672,1038,6.824,1039,5.332,1040,5.207,1041,5.207]],["title/classes/NewsMapper.html",[0,0.123,994,3.268]],["body/classes/NewsMapper.html",[0,0.124,2,0.875,3,0.211,4,0.174,5,0.126,10,0.405,15,2.22,16,0.521,17,1.546,22,0.848,24,1.556,25,0.011,26,1.217,27,1.217,37,1.826,39,0.453,43,0.199,55,0.005,56,0.007,57,0.005,74,2.033,81,1.556,82,0.924,146,2.435,147,3.152,148,3.243,152,1.383,155,0.899,332,2.578,333,1.801,334,2.598,336,2.884,338,1.693,341,3.936,413,4.764,416,3.918,539,2.782,576,3.544,733,4.448,746,4.718,748,4.764,749,2.754,963,5.053,977,5.053,993,5.053,994,4.451,1042,3.913,1043,6.018,1044,6.018,1045,4.451,1046,6.018,1047,6.018,1048,4.452,1049,6.018,1050,4.452,1051,6.018,1052,4.452,1053,6.018,1054,4.452,1055,3.293,1056,3.293,1057,6.018,1058,3.293,1059,3.293,1060,3.913,1061,4.452,1062,4.452,1063,4.452,1064,4.452,1065,4.452,1066,3.913,1067,4.452,1068,4.452,1069,4.452,1070,4.452,1071,4.452,1072,4.452,1073,4.452,1074,3.913,1075,4.452,1076,4.452,1077,4.452,1078,4.452,1079,4.452,1080,4.452,1081,4.452,1082,3.913,1083,4.452,1084,3.913,1085,4.452,1086,4.452,1087,3.913,1088,6.018,1089,4.452,1090,4.452,1091,4.452,1092,4.452,1093,6.018,1094,6.018,1095,6.018,1096,4.452,1097,4.452]],["title/modules/NewsModule.html",[92,1.23,1098,3.058]],["body/modules/NewsModule.html",[0,0.156,3,0.267,4,0.22,5,0.159,25,0.01,39,0.52,41,1.298,43,0.251,55,0.007,56,0.008,57,0.007,92,2.124,94,2.138,95,2.51,96,3.162,97,3.162,98,2.908,99,3.293,100,3.526,104,3.939,105,3.029,106,2.51,119,3.622,121,3.773,122,5.464,275,4.931,947,5.641,988,5.447,989,4.941,1098,6.118,1099,4.941,1100,4.941,1101,4.941,1102,5.621,1103,5.18,1104,5.621,1105,4.941,1106,5.621,1107,5.621,1108,4.941]],["title/injectables/NewsRepo.html",[135,1.166,1103,2.733]],["body/injectables/NewsRepo.html",[0,0.113,3,0.193,4,0.159,5,0.115,10,0.37,12,1.755,16,0.545,17,1.452,19,1.335,22,0.888,24,1.63,25,0.011,26,1.274,27,1.274,37,1.848,39,0.496,41,0.939,43,0.181,55,0.005,56,0.007,57,0.005,74,2.057,81,1.498,82,0.843,135,1.492,136,1.815,138,3.46,145,2.672,155,0.821,157,3.552,169,1.263,172,2.022,173,3.657,175,3.415,193,1.377,200,1.335,202,2.514,215,1.5,230,1.102,231,1.5,332,2.929,333,1.645,335,2.925,338,2.672,340,3.497,418,3.181,451,3.006,477,2.287,536,4.242,539,2.614,572,2.525,580,2.925,749,4.347,750,3.828,950,3.913,951,4.808,964,4.784,974,3.689,975,4.969,1005,4.518,1006,4.969,1103,3.497,1109,3.573,1110,5.654,1111,5.654,1112,4.518,1113,3.573,1114,5.616,1115,4.065,1116,4.182,1117,5.654,1118,4.065,1119,4.065,1120,4.585,1121,5.429,1122,4.065,1123,5.654,1124,4.065,1125,5.654,1126,4.065,1127,5.654,1128,4.969,1129,5.654,1130,3.913,1131,5.654,1132,4.065,1133,4.065,1134,2.813,1135,3.006,1136,3.913,1137,4.065,1138,4.065,1139,4.065,1140,4.065,1141,4.065,1142,4.065,1143,5.654,1144,4.065,1145,4.065,1146,4.065,1147,4.065,1148,4.065,1149,4.065]],["title/classes/NewsResponse.html",[0,0.123,993,3.058]],["body/classes/NewsResponse.html",[0,0.101,2,0.711,3,0.172,4,0.303,5,0.103,10,0.329,11,0.918,15,2.609,16,0.609,22,0.969,25,0.011,27,1.227,32,1.293,39,0.414,43,0.161,55,0.004,56,0.006,57,0.004,61,2.818,74,1.699,88,2.203,89,4.62,91,1.673,146,2.468,148,3.287,149,3.157,152,2.357,154,2.326,155,1.755,161,3.852,170,2.821,193,1.848,225,3.035,226,2.637,228,3.035,332,2.929,333,2.7,334,3.052,335,3.156,336,2.924,338,2.8,339,3.981,340,3.774,363,1.95,364,2.131,368,4.127,422,4.162,423,3.067,424,4.162,425,3.852,428,4.618,429,4.618,430,4.127,433,4.222,434,4.162,435,2.93,441,2.505,442,4.876,443,3.981,710,4.162,864,3.222,953,3.852,993,3.604,1034,4.935,1150,2.677,1151,5.849,1152,3.619,1153,6.673,1154,3.619,1155,4.893,1156,3.619,1157,3.619,1158,3.619,1159,3.852,1160,3.619,1161,4.222,1162,4.577,1163,3.619,1164,5.362,1165,3.619,1166,4.876,1167,3.619,1168,5.208,1169,3.619,1170,2.892,1171,3.619,1172,3.619,1173,3.619,1174,3.619,1175,3.619,1176,3.852,1177,3.619,1178,5.208,1179,3.619,1180,3.619]],["title/classes/NewsScope.html",[0,0.123,1136,3.058]],["body/classes/NewsScope.html",[0,0.128,2,0.908,3,0.219,4,0.181,5,0.131,10,0.42,11,1.087,16,0.529,17,1.585,22,0.897,24,1.481,25,0.011,26,1.157,27,1.157,37,1.738,39,0.46,43,0.206,55,0.007,56,0.007,57,0.005,74,1.934,81,1.646,82,0.959,146,1.87,151,2.49,155,0.933,200,1.518,201,1.757,226,1.655,230,1.253,231,1.705,332,2.086,333,1.87,336,2.215,451,3.674,469,4.808,477,2.6,536,3.015,539,3.811,543,3.693,613,3.418,749,3.817,750,4.091,918,3.634,1120,4.837,1136,5.5,1181,6.351,1182,4.062,1183,6.947,1184,6.17,1185,6.17,1186,6.17,1187,6.17,1188,8.243,1189,4.621,1190,6.17,1191,4.621,1192,6.17,1193,4.621,1194,6.17,1195,4.621,1196,4.621,1197,4.621,1198,4.931,1199,4.062,1200,6.17,1201,4.27,1202,4.621,1203,4.621,1204,4.026,1205,4.621,1206,4.621,1207,4.621,1208,6.17,1209,4.621,1210,4.621,1211,3.015,1212,4.621,1213,4.621,1214,6.17,1215,4.621,1216,4.621,1217,4.621]],["title/interfaces/NewsTargetFilter.html",[387,0.892,1120,2.883]],["body/interfaces/NewsTargetFilter.html",[3,0.303,4,0.25,5,0.181,10,0.581,11,1.334,16,0.54,25,0.01,39,0.47,43,0.285,55,0.007,56,0.009,57,0.007,145,3.171,146,3.374,147,3.855,155,1.291,169,1.985,333,2.585,387,1.291,542,6.168,549,2.43,1120,4.939,1181,5.107,1218,5.616]],["title/injectables/NewsUc.html",[135,1.166,988,2.733]],["body/injectables/NewsUc.html",[0,0.069,3,0.117,4,0.096,5,0.07,10,0.224,16,0.529,17,1.001,19,0.81,22,0.844,24,1.55,25,0.011,26,1.212,27,1.212,32,0.739,37,1.939,39,0.428,41,0.569,43,0.11,55,0.003,56,0.005,57,0.003,61,0.81,74,2.223,81,1.55,82,0.511,128,3.919,135,1.028,136,1.101,138,3.368,145,3.285,146,2.942,147,2.537,148,3.585,149,3.418,152,1.705,154,1.101,155,0.498,156,4.521,157,3.346,169,0.766,170,1.14,172,1.226,173,4.361,175,3.663,193,1.771,226,1.73,230,0.668,231,1.782,235,2.315,327,2.015,332,2.856,333,2.571,335,1.275,336,1.867,338,0.937,341,2.233,355,3.432,356,2.41,361,2.865,399,1.101,400,1.14,401,1.101,402,1.101,435,1.387,441,1.706,451,3.584,452,3.442,477,1.387,502,3.114,511,3.424,536,4.342,542,2.881,547,1.823,572,1.74,576,4.182,577,2.41,580,3.568,665,2.099,723,1.387,730,1.387,733,3.581,746,3.798,748,4.342,749,3.697,750,2.845,757,2.41,791,3.798,801,2.192,864,1.525,918,1.452,950,2.696,953,3.573,964,3.52,988,2.41,1005,3.114,1032,3.343,1060,2.167,1066,2.167,1074,4.824,1087,3.424,1103,3.93,1105,2.167,1120,2.542,1134,1.706,1135,1.823,1219,1.97,1220,3.896,1221,3.896,1222,3.896,1223,3.896,1224,4.83,1225,2.465,1226,2.465,1227,3.896,1228,2.465,1229,3.896,1230,2.465,1231,3.896,1232,2.465,1233,3.896,1234,2.465,1235,3.896,1236,2.465,1237,2.465,1238,3.896,1239,2.465,1240,2.696,1241,2.465,1242,4.83,1243,2.465,1244,3.896,1245,2.465,1246,2.465,1247,2.465,1248,2.465,1249,3.114,1250,4.386,1251,2.465,1252,2.167,1253,2.465,1254,5.488,1255,2.465,1256,2.465,1257,3.896,1258,2.465,1259,4.824,1260,2.465,1261,2.465,1262,2.465,1263,3.896,1264,2.465,1265,3.896,1266,2.465,1267,3.896,1268,2.465,1269,2.465,1270,1.452,1271,4.83,1272,2.465,1273,3.896,1274,2.465,1275,2.465,1276,5.488,1277,2.465,1278,2.167,1279,1.97,1280,2.465,1281,2.465,1282,2.465,1283,2.465,1284,2.167,1285,3.896,1286,2.465,1287,2.465,1288,2.465,1289,3.896,1290,2.465,1291,2.465,1292,2.465,1293,2.465,1294,2.465]],["title/interfaces/PaginationModel.html",[387,0.892,1121,3.058]],["body/interfaces/PaginationModel.html",[3,0.307,4,0.253,5,0.183,10,0.588,11,1.344,12,3.292,16,0.544,25,0.01,27,1.395,29,3.394,43,0.289,55,0.008,56,0.009,57,0.008,387,1.307,549,2.461,793,5.18,794,5.18,1121,5.278,1295,5.688]],["title/classes/PaginationQuery.html",[0,0.123,965,2.883]],["body/classes/PaginationQuery.html",[0,0.196,2,1.12,3,0.27,4,0.222,5,0.161,10,0.518,11,1.244,16,0.503,22,0.819,25,0.01,27,1.336,29,3.294,39,0.438,43,0.254,55,0.007,56,0.008,57,0.007,61,2.319,88,1.863,91,2.633,230,1.913,231,2.605,440,3.523,726,5.642,793,5.1,794,4.746,918,4.157,965,4.606,1034,5.674,1128,6.205,1201,4.886,1296,5.006,1297,6.409,1298,5.695,1299,3.383,1300,6.205,1301,7.059,1302,7.059,1303,7.059,1304,5.695,1305,5.695,1306,7.059,1307,5.695,1308,7.672,1309,5.006,1310,5.695,1311,5.695,1312,5.695,1313,5.695]],["title/classes/PaginationResponse.html",[0,0.123,986,2.883]],["body/classes/PaginationResponse.html",[0,0.152,2,1.077,3,0.26,4,0.214,5,0.155,10,0.498,11,1.214,16,0.581,19,1.8,22,0.946,24,1.168,25,0.01,26,0.913,27,1.358,29,3.479,39,0.34,43,0.244,55,0.006,56,0.008,57,0.006,88,2.087,89,4.848,91,2.533,577,4.263,609,5.641,712,3.907,793,5.224,794,5.224,986,4.496,1314,4.816,1315,5.511,1316,6.891,1317,5.479,1318,5.479,1319,5.479,1320,5.479,1321,5.479,1322,5.479,1323,5.479,1324,5.479,1325,5.479]],["title/injectables/ParseObjectIdPipe.html",[135,1.166,983,3.058]],["body/injectables/ParseObjectIdPipe.html",[0,0.168,3,0.286,4,0.236,5,0.171,10,0.549,16,0.43,17,1.879,22,0.7,24,1.286,25,0.01,26,1.005,27,1.005,32,1.282,37,1.509,39,0.488,41,1.393,43,0.269,55,0.007,56,0.009,57,0.007,74,1.68,81,1.286,82,1.252,135,1.93,136,2.695,145,2.295,169,1.875,185,3.554,194,2.521,231,2.699,467,3.937,713,5.062,741,3.937,983,5.062,1326,6.429,1327,3.941,1328,4.823,1329,7.314,1330,6.034,1331,7.314,1332,6.034,1333,3.733,1334,7.314,1335,6.034,1336,6.034]],["title/classes/SampleError.html",[0,0.123,266,3.268]],["body/classes/SampleError.html",[0,0.195,2,0.927,3,0.224,4,0.184,5,0.134,8,2.18,9,5.122,10,0.429,11,1.102,12,3.708,13,3.101,14,4.218,15,3.009,16,0.612,17,1.606,18,5.972,19,2.054,22,0.928,24,1.005,25,0.011,26,0.785,27,0.785,29,2.452,30,3.472,31,4.144,32,1.282,33,4.144,34,4.144,35,4.144,36,4.144,37,1.179,38,3.781,39,0.435,40,4.625,41,1.089,43,0.279,45,2.7,49,2.93,50,5.172,55,0.005,56,0.007,57,0.005,61,1.549,65,2.997,81,1.005,82,0.978,230,1.278,239,3.768,240,3.369,241,3.076,242,3.629,243,3.076,244,2.54,245,2.652,246,2.916,247,2.035,248,4.625,250,4.08,256,4.144,257,4.144,258,3.768,259,5.496,260,4.144,261,3.868,262,5.496,263,4.144,264,5.172,265,3.682,266,4.625,267,5.496,268,4.144,269,4.144,577,2.916,1337,4.714]],["title/classes/SchoolInfo.html",[0,0.123,360,2.381]],["body/classes/SchoolInfo.html",[0,0.159,2,1.126,3,0.272,4,0.224,5,0.162,8,2.201,10,0.521,11,1.248,16,0.6,19,1.882,22,0.933,24,1.221,25,0.011,26,1.376,27,0.954,30,3.163,32,1.229,39,0.44,43,0.255,45,2.473,55,0.007,56,0.008,57,0.007,88,2.03,155,1.431,169,1.779,190,3.238,192,2.959,193,1.725,194,2.393,195,2.648,197,2.648,199,3.016,200,1.882,201,2.178,237,2.745,238,2.745,317,3.373,323,3.964,324,3.985,325,4.382,326,5.24,327,2.963,328,4.577,329,4.577,360,3.817,737,3.737,1338,6.76]],["title/classes/SchoolInfoMapper.html",[0,0.123,1056,3.268]],["body/classes/SchoolInfoMapper.html",[0,0.171,2,1.208,3,0.291,4,0.24,5,0.174,10,0.559,16,0.438,17,1.9,22,0.713,24,1.31,25,0.01,26,1.024,27,1.024,37,1.537,39,0.459,43,0.274,55,0.007,56,0.009,57,0.007,74,1.711,81,1.31,82,1.275,155,1.241,341,3.667,360,4.538,416,3.544,1045,5.469,1055,4.545,1056,5.469,1059,4.545,1161,5.697,1339,6.499,1340,4.911,1341,7.394,1342,5.4,1343,6.144,1344,5.4,1345,6.144]],["title/classes/SchoolInfoResponse.html",[0,0.123,1161,3.058]],["body/classes/SchoolInfoResponse.html",[0,0.168,2,1.191,3,0.287,4,0.237,5,0.172,10,0.551,11,1.292,16,0.523,22,0.851,25,0.01,26,1.398,32,1.253,39,0.376,43,0.27,55,0.007,56,0.009,57,0.007,61,2.59,88,1.935,89,4.435,91,2.801,155,1.655,193,2.043,338,3.115,428,5.074,429,5.074,443,3.953,1151,4.481,1161,5.074,1170,4.842,1346,6.93,1347,4.842,1348,5.325,1349,5.325]],["title/classes/SchoolNews.html",[0,0.123,411,2.602]],["body/classes/SchoolNews.html",[0,0.162,2,0.538,3,0.13,4,0.245,5,0.078,8,1.951,10,0.249,11,0.745,15,2.45,16,0.597,17,1.087,22,0.987,24,0.584,25,0.011,26,0.861,27,1.222,30,3.783,32,1.253,37,0.685,39,0.429,43,0.28,45,1.182,55,0.003,56,0.005,57,0.003,81,0.584,82,1.436,88,2.228,145,2.388,146,2.8,147,3.069,149,2.307,152,0.851,155,1.269,169,0.851,170,1.266,174,1.787,190,2.463,192,2.986,193,1.825,194,2.428,195,2.687,197,2.687,199,3.191,200,0.9,201,1.041,205,3.182,212,2.307,217,1.907,225,2.891,226,2.479,228,2.891,230,1.702,231,2.318,234,2.379,235,2.027,237,1.312,238,1.312,240,2.279,261,1.694,297,1.108,309,3.125,311,1.613,312,1.613,313,1.613,314,1.613,315,3.422,319,1.787,320,2.907,321,2.379,324,1.541,327,2.673,330,1.541,331,1.787,332,2.961,333,3.132,334,2.866,335,3.249,336,2.785,337,4.022,338,2.524,339,3.792,340,3.595,341,2.389,342,3.128,343,4.412,345,2.189,346,2.76,347,3.196,348,2.76,349,2.189,350,2.189,351,2.927,352,3.792,353,2.927,354,2.76,355,2.104,356,2.616,357,2.927,358,2.189,359,2.189,360,3.384,361,2.027,362,2.189,363,2.784,364,3.043,365,2.189,366,2.189,367,2.189,368,2.616,369,2.189,370,2.616,371,2.189,372,2.927,373,2.189,374,2.189,375,2.189,376,2.189,377,2.189,378,2.189,379,2.189,380,2.927,381,3.885,382,2.189,383,3.792,384,1.895,385,2.379,386,1.476,387,0.553,388,1.895,389,1.417,390,1.895,391,1.895,392,1.895,393,1.895,394,1.895,395,1.895,396,1.895,397,1.895,398,2.927,399,2.307,400,2.389,401,2.307,402,2.307,403,2.307,404,3.043,405,2.673,406,1.895,407,2.927,408,1.895,409,1.895,410,3.576,411,2.491,412,1.613,1350,2.738]],["title/controllers/ServerController.html",[946,2.286,1351,3.268]],["body/controllers/ServerController.html",[0,0.173,3,0.294,4,0.242,5,0.176,10,0.564,12,2.68,17,1.911,22,0.721,25,0.01,32,1.138,37,1.553,39,0.462,41,1.433,43,0.277,55,0.007,56,0.009,57,0.007,81,1.323,88,1.638,121,3.345,172,3.088,230,2.017,523,3.701,533,5.149,558,4.009,946,3.848,1351,5.503,1352,5.456,1353,7.26,1354,6.207,1355,5.503,1356,5.198,1357,5.456,1358,6.207]],["title/modules/ServerModule.html",[92,1.23,1359,3.058]],["body/modules/ServerModule.html",[0,0.13,3,0.223,4,0.183,5,0.133,16,0.335,25,0.011,32,0.718,39,0.538,41,1.084,43,0.209,52,2.528,55,0.005,56,0.007,57,0.005,81,1,82,0.974,92,1.949,93,5.524,94,1.784,95,2.095,96,2.64,97,2.64,98,2.427,99,3.022,100,2.169,104,3.507,105,2.528,106,2.095,119,3.225,121,3.359,164,2.528,200,2.048,201,1.784,215,1.731,270,5.524,297,2.522,309,3.101,321,3.507,330,3.507,332,2.107,360,3.359,383,4.067,385,3.507,399,2.095,400,2.169,401,2.095,402,2.095,403,2.095,411,3.671,412,3.671,519,3.75,676,3.75,677,3.75,678,3.75,845,3.856,891,4.067,896,3.471,897,3.75,905,3.471,907,4.067,1098,5.524,1333,2.903,1351,5.178,1356,5.208,1357,4.124,1359,6.005,1360,4.124,1361,4.124,1362,4.124,1363,5.524,1364,4.692,1365,6.234,1366,6.234,1367,4.692,1368,4.692,1369,4.692,1370,6.234,1371,3.062,1372,4.692,1373,4.692,1374,2.988,1375,4.067,1376,4.692,1377,4.692,1378,4.692,1379,4.692,1380,4.124,1381,2.763,1382,4.692,1383,4.692,1384,6.234,1385,4.692,1386,3.75,1387,3.248]],["title/injectables/ServerService.html",[135,1.166,1356,2.883]],["body/injectables/ServerService.html",[0,0.181,3,0.309,4,0.254,5,0.185,10,0.592,17,1.967,22,0.756,25,0.01,32,1.171,37,1.629,39,0.404,41,1.504,43,0.291,55,0.008,56,0.009,57,0.008,81,1.388,135,2.02,136,2.908,1353,7.375,1356,4.995,1388,5.725,1389,6.513,1390,6.513,1391,5.205]],["title/classes/Submission.html",[0,0.123,1375,2.883]],["body/classes/Submission.html",[0,0.144,2,1.018,3,0.246,4,0.202,5,0.147,8,2.066,10,0.471,11,1.172,16,0.585,22,0.981,25,0.011,30,3.662,32,1.017,39,0.481,43,0.231,55,0.006,56,0.008,57,0.006,82,1.38,88,2.229,155,1.343,169,1.609,171,3.585,190,2.608,192,3.237,193,1.887,194,2.778,195,3.074,197,3.074,199,2.031,200,1.702,201,1.97,205,3.997,225,3.308,226,2.382,228,3.308,230,1.803,231,2.454,234,2.914,235,2.483,237,2.483,238,2.483,309,3.654,311,3.051,312,3.051,313,3.051,314,3.051,317,3.051,320,3.741,343,4.325,347,4.113,1374,3.52,1375,4.339,1392,4.553,1393,5.87,1394,5.432,1395,6.65,1396,5.18,1397,6.65,1398,5.18,1399,5.18,1400,4.553]],["title/classes/Task.html",[0,0.123,1374,2.118]],["body/classes/Task.html",[0,0.134,2,0.944,3,0.228,4,0.188,5,0.136,8,1.967,10,0.437,11,1.115,16,0.6,22,0.993,25,0.011,26,1.18,27,1.339,30,3.588,32,1.151,39,0.467,43,0.214,55,0.006,56,0.007,57,0.006,82,1.314,88,2.258,155,1.279,169,1.492,190,2.483,192,3.145,193,1.833,194,2.645,195,2.927,197,2.927,199,3.26,200,1.578,201,1.827,205,3.926,225,3.15,226,2.697,228,3.15,230,1.716,231,2.336,234,2.702,235,2.302,237,2.302,238,2.302,297,3.251,311,2.829,312,2.829,313,2.829,314,2.829,317,2.829,320,3.562,343,4.171,347,3.916,451,3.274,750,3.728,845,4.97,848,5.565,851,4.222,1374,3.034,1401,4.222,1402,5.66,1403,4.804,1404,4.804,1405,6.331,1406,4.804,1407,4.804,1408,4.804,1409,4.804,1410,4.222]],["title/controllers/TaskController.html",[946,2.286,1411,3.268]],["body/controllers/TaskController.html",[0,0.144,3,0.245,4,0.202,5,0.146,10,0.469,12,2.229,16,0.368,17,1.705,22,0.599,24,1.1,25,0.011,26,0.86,27,1.106,37,1.291,39,0.529,41,1.192,43,0.23,55,0.009,56,0.008,57,0.006,74,2.155,81,1.1,82,1.071,88,1.362,91,2.387,121,2.782,138,2.967,157,2.865,172,2.569,175,2.305,215,1.905,416,2.474,539,3.578,727,3.194,730,2.904,751,4.558,793,4.104,794,4.104,828,3.819,946,2.671,949,4.538,951,5.423,957,5.356,962,4.538,965,5.564,972,3.194,982,4.538,986,3.369,987,4.538,990,3.819,991,4.538,992,4.538,997,4.538,1012,3.819,1315,4.329,1327,2.782,1374,2.474,1411,4.908,1412,4.538,1413,6.635,1414,5.163,1415,5.163,1416,4.784,1417,4.538,1418,3.573,1419,3.819,1420,5.163,1421,3.819,1422,5.163,1423,4.538,1424,5.163,1425,3.194,1426,6.635,1427,5.163,1428,5.163,1429,3.369,1430,5.163,1431,5.163,1432,5.163,1433,5.163,1434,5.163]],["title/classes/TaskMapper.html",[0,0.123,1419,3.268]],["body/classes/TaskMapper.html",[0,0.166,2,1.177,3,0.284,4,0.234,5,0.17,10,0.544,16,0.427,17,1.87,22,0.695,24,1.276,25,0.011,26,0.997,27,0.997,37,1.498,39,0.452,43,0.267,55,0.007,56,0.008,57,0.007,74,1.667,81,1.276,82,1.242,155,1.209,341,3.626,416,3.489,1045,5.384,1055,4.428,1059,4.428,1082,5.262,1084,5.262,1344,5.262,1374,4.008,1418,5.647,1419,5.384,1435,5.262,1436,7.279,1437,5.987,1438,5.987,1439,5.987,1440,5.987,1441,5.987,1442,5.987,1443,5.987,1444,5.987,1445,5.987,1446,5.987,1447,5.987]],["title/modules/TaskModule.html",[92,1.23,1363,3.058]],["body/modules/TaskModule.html",[0,0.169,3,0.288,4,0.237,5,0.172,25,0.01,39,0.509,41,1.402,43,0.271,55,0.007,56,0.009,57,0.007,92,2.197,94,2.308,95,2.711,96,3.415,97,3.415,98,3.14,99,3.407,100,2.807,104,4.13,105,3.271,106,2.711,121,3.955,1363,6.026,1411,5.837,1416,5.566,1417,5.336,1448,5.336,1449,5.336,1450,5.566,1451,6.071,1452,6.071,1453,5.336]],["title/injectables/TaskRepo.html",[135,1.166,1450,2.883]],["body/injectables/TaskRepo.html",[0,0.118,3,0.201,4,0.165,5,0.12,10,0.385,12,1.828,16,0.415,17,1.494,19,1.391,22,0.675,24,1.24,25,0.011,26,0.969,27,0.969,37,1.059,39,0.492,41,0.978,43,0.189,52,2.282,55,0.005,56,0.007,57,0.005,74,2.156,81,0.903,82,0.879,135,1.535,136,1.891,138,2.688,145,2.72,152,1.315,155,0.855,156,3.579,157,2.511,169,1.315,172,2.107,175,3.193,193,1.031,200,1.911,201,1.61,202,2.619,215,2.857,226,1.517,230,1.148,231,1.563,235,2.03,297,2.893,300,3.132,332,1.431,389,2.19,451,1.958,477,3.272,539,1.958,541,2.382,547,4.302,793,3.598,794,3.598,845,4.109,847,3.132,859,2.931,863,2.619,964,3.425,972,2.619,1113,3.722,1114,5.715,1116,4.302,1121,4.949,1134,2.931,1135,3.132,1136,2.931,1159,3.132,1199,3.722,1315,3.795,1374,3.184,1375,2.763,1394,3.132,1402,5.715,1429,2.763,1450,3.795,1454,3.722,1455,5.816,1456,4.235,1457,5.816,1458,4.235,1459,4.235,1460,3.722,1461,2.282,1462,4.235,1463,3.722,1464,3.384,1465,4.235,1466,2.931,1467,4.235,1468,4.648,1469,3.722,1470,3.132,1471,2.763,1472,3.384,1473,4.235,1474,2.931,1475,3.132,1476,6.643,1477,4.235,1478,5.816,1479,4.235,1480,4.235,1481,4.235,1482,5.816,1483,4.235,1484,4.235,1485,5.816,1486,4.235,1487,3.384,1488,5.816,1489,4.235,1490,4.235,1491,2.763,1492,3.722,1493,4.235,1494,4.235,1495,4.235,1496,4.235,1497,4.648,1498,3.722,1499,3.722,1500,4.235,1501,4.235,1502,4.235,1503,4.235]],["title/classes/TaskResponse.html",[0,0.123,1418,3.058]],["body/classes/TaskResponse.html",[0,0.149,2,1.054,3,0.254,4,0.21,5,0.152,10,0.488,11,1.198,16,0.599,22,0.976,25,0.01,26,1.244,27,1.379,32,1.313,39,0.333,43,0.239,47,3.258,55,0.006,56,0.008,57,0.006,61,1.762,88,2.218,89,4.979,91,2.48,193,1.818,225,3.714,226,2.964,228,3.714,416,3.258,418,3.825,1374,3.258,1402,5.966,1418,4.705,1504,4.714,1505,5.976,1506,4.004,1507,7.465,1508,7.465,1509,5.363,1510,5.363,1511,5.363,1512,5.363,1513,5.363,1514,5.363,1515,5.363,1516,3.967]],["title/injectables/TaskUC.html",[135,1.166,1416,2.883]],["body/injectables/TaskUC.html",[0,0.153,3,0.262,4,0.216,5,0.156,10,0.502,16,0.494,17,1.778,19,1.813,22,0.804,24,1.475,25,0.011,26,1.153,27,1.153,37,1.381,39,0.507,41,1.274,43,0.246,55,0.006,56,0.008,57,0.006,74,1.537,81,1.176,135,1.827,136,2.465,138,3.06,145,3.016,149,2.465,152,1.715,155,1.115,156,2.974,157,2.989,169,1.715,172,2.746,175,2.465,214,3.25,215,2.791,477,3.105,791,5.489,964,4.671,1134,3.82,1135,4.082,1315,4.517,1374,2.645,1416,4.517,1429,5.175,1450,5.439,1453,4.851,1469,4.851,1517,4.851,1518,6.923,1519,5.519,1520,5.519,1521,6.923,1522,5.519,1523,4.411,1524,3.601,1525,5.519,1526,4.082,1527,4.082,1528,4.851,1529,3.82,1530,5.519]],["title/classes/TeamInfo.html",[0,0.123,385,2.486]],["body/classes/TeamInfo.html",[0,0.159,2,1.126,3,0.272,4,0.224,5,0.162,8,2.201,10,0.521,11,1.248,16,0.6,19,1.882,22,0.933,24,1.221,25,0.011,26,1.376,27,0.954,30,3.163,32,1.229,39,0.44,43,0.255,45,2.473,55,0.007,56,0.008,57,0.007,88,2.03,155,1.431,169,1.779,190,3.238,192,2.959,193,1.725,194,2.393,195,2.648,197,2.648,199,3.016,200,1.882,201,2.178,237,2.745,238,2.745,317,3.373,323,3.964,324,3.985,325,4.382,326,5.24,327,2.963,328,4.577,329,4.577,385,3.985,738,3.964,1531,6.76]],["title/classes/TeamNews.html",[0,0.123,412,2.602]],["body/classes/TeamNews.html",[0,0.162,2,0.538,3,0.13,4,0.245,5,0.078,8,1.951,10,0.249,11,0.745,15,2.45,16,0.597,17,1.087,22,0.987,24,0.584,25,0.011,26,0.861,27,1.222,30,3.783,32,1.253,37,0.685,39,0.429,43,0.28,45,1.182,55,0.003,56,0.005,57,0.003,81,0.584,82,1.436,88,2.228,145,2.388,146,2.8,147,3.069,149,2.307,152,0.851,155,1.269,169,0.851,170,1.266,174,1.787,190,2.463,192,2.986,193,1.825,194,2.428,195,2.687,197,2.687,199,3.191,200,0.9,201,1.041,205,3.182,212,2.307,217,1.907,225,2.891,226,2.479,228,2.891,230,1.702,231,2.318,234,2.379,235,2.027,237,1.312,238,1.312,240,2.279,261,1.694,297,1.108,309,3.125,311,1.613,312,1.613,313,1.613,314,1.613,315,3.422,319,1.787,320,2.907,321,2.379,324,1.541,327,2.673,330,1.541,331,1.787,332,2.961,333,3.132,334,2.866,335,3.249,336,2.785,337,4.022,338,2.524,339,3.792,340,3.595,341,2.389,342,3.128,343,4.412,345,2.189,346,2.76,347,3.196,348,2.76,349,2.189,350,2.189,351,2.927,352,3.792,353,2.927,354,2.76,355,2.104,356,2.616,357,2.927,358,2.189,359,2.189,360,3.131,361,2.027,362,2.189,363,2.784,364,3.043,365,2.189,366,2.189,367,2.189,368,2.616,369,2.189,370,2.616,371,2.189,372,2.927,373,2.189,374,2.189,375,2.189,376,2.189,377,2.189,378,2.189,379,2.189,380,2.927,381,3.885,382,2.189,383,3.792,384,1.895,385,2.907,386,1.476,387,0.553,388,1.895,389,1.417,390,1.895,391,1.895,392,1.895,393,1.895,394,1.895,395,1.895,396,1.895,397,1.895,398,2.927,399,2.307,400,2.389,401,2.307,402,2.307,403,2.307,404,3.043,405,2.673,406,1.895,407,2.927,408,1.895,409,1.895,410,3.576,411,1.613,412,2.491,1532,2.738]],["title/injectables/TimeoutInterceptor.html",[135,1.166,804,3.268]],["body/injectables/TimeoutInterceptor.html",[0,0.143,3,0.244,4,0.201,5,0.146,10,0.469,11,1.168,12,3.339,16,0.473,17,1.703,22,0.769,24,1.098,25,0.011,26,0.859,27,0.859,29,2.599,37,1.289,39,0.455,41,1.19,43,0.23,55,0.006,56,0.008,57,0.006,61,1.693,81,1.561,135,1.749,136,2.301,172,2.564,215,1.902,230,1.397,231,1.902,341,3.387,399,2.301,400,2.383,401,3.453,402,2.301,403,2.301,404,3.035,447,4.902,453,5.826,454,5.826,455,5.72,456,6.798,458,2.564,459,6.44,462,5.826,463,4.119,465,4.53,467,3.363,560,3.429,561,3.177,587,4.119,625,4.119,802,5.419,804,4.902,928,4.587,946,3.429,1533,4.53,1534,6.628,1535,4.587,1536,4.587,1537,6.628,1538,4.587,1539,5.297,1540,7.327,1541,7.327,1542,5.154,1543,7.327,1544,5.154,1545,6.628,1546,5.154,1547,6.628,1548,5.154,1549,3.363,1550,4.119,1551,5.154,1552,5.154,1553,5.154,1554,5.154,1555,5.154,1556,5.154,1557,5.154]],["title/classes/UpdateNewsParams.html",[0,0.123,977,3.058]],["body/classes/UpdateNewsParams.html",[0,0.218,2,1.051,3,0.253,4,0.209,5,0.152,10,0.486,11,1.381,15,2.985,16,0.531,22,0.865,25,0.01,27,1.13,32,1.199,39,0.421,43,0.238,55,0.006,56,0.008,57,0.006,61,2.575,88,1.967,91,2.471,155,1.67,226,2.43,332,2.873,334,3.493,336,3.572,415,3.953,416,3.251,418,3.816,420,4.698,422,5.421,423,3.995,424,5.421,425,5.017,438,5.962,439,5.956,440,3.306,705,4.426,745,4.695,977,4.695,1034,5.798,1038,6.89,1558,6.89,1559,6.784,1560,6.784,1561,5.017,1562,4.695,1563,5.962,1564,6.784,1565,5.345,1566,5.345,1567,5.345]],["title/interfaces/User.html",[152,1.373,387,0.892]],["body/interfaces/User.html",[0,0.129,3,0.22,4,0.181,5,0.131,10,0.421,11,1.088,16,0.496,25,0.011,32,1.182,39,0.48,41,1.069,43,0.206,55,0.005,56,0.007,57,0.005,74,2.349,81,1.694,82,0.96,129,2.726,135,1.63,138,3.127,145,3.175,146,2.499,147,3.214,148,3.328,149,3.55,152,2.594,156,3.328,157,3.336,158,3.02,169,1.438,171,3.203,172,2.303,175,3.451,185,2.726,190,2.422,192,3.099,194,3.391,200,1.521,202,2.863,338,1.76,361,3.704,387,0.935,451,2.14,499,3.699,500,3.423,502,3.699,505,3.699,507,3.911,509,4.068,513,4.068,515,4.068,519,4.936,520,4.068,521,3.699,522,5.429,523,2.303,524,3.699,525,5.429,526,4.068,527,4.068,528,4.068,529,3.001,530,4.068,531,5.429,532,5.429,533,4.275,534,5.429,535,4.068,536,3.02,537,4.068,538,4.068,539,2.14,540,4.068,541,2.604,542,4.569,543,3.699,544,4.068,545,4.068,546,4.068,547,3.423,549,1.76]],["title/classes/UserDTO.html",[0,0.123,1568,3.531]],["body/classes/UserDTO.html",[0,0.17,2,1.203,3,0.29,4,0.239,5,0.173,10,0.556,11,1.3,16,0.526,22,0.856,25,0.01,32,1.257,39,0.38,43,0.273,55,0.007,56,0.009,57,0.007,61,2.423,88,1.946,89,4.455,91,2.829,152,2.554,1151,5.456,1568,5.895,1569,5.379,1570,6.724,1571,7.395,1572,6.08,1573,7.376,1574,6.12,1575,7.376,1576,6.12]],["title/classes/UserInfo.html",[0,0.123,309,2.198]],["body/classes/UserInfo.html",[0,0.154,2,1.087,3,0.262,4,0.216,5,0.157,8,2.153,10,0.503,11,1.221,16,0.603,19,1.817,22,0.949,24,1.178,25,0.011,26,0.921,27,0.921,30,3.095,32,1.294,39,0.43,43,0.247,45,2.387,55,0.006,56,0.008,57,0.006,88,2.094,155,1.4,169,1.718,190,3.205,192,2.895,193,1.688,194,2.31,195,2.556,197,2.556,199,3.205,200,1.817,201,2.103,237,2.65,238,2.65,309,3.448,317,3.256,323,3.827,324,3.899,325,4.287,326,4.09,327,2.86,757,3.42,1577,6.975,1578,6.975,1579,6.975,1580,6.931,1581,5.529,1582,5.529,1583,5.529,1584,5.529]],["title/classes/UserInfoMapper.html",[0,0.123,1058,3.268]],["body/classes/UserInfoMapper.html",[0,0.17,2,1.201,3,0.29,4,0.239,5,0.173,10,0.555,16,0.435,17,1.893,22,0.709,24,1.302,25,0.01,26,1.018,27,1.018,37,1.528,39,0.457,43,0.272,55,0.007,56,0.009,57,0.007,74,1.701,81,1.302,82,1.267,155,1.233,309,4.183,341,3.658,416,3.531,1045,5.449,1055,4.517,1058,5.449,1059,4.517,1155,5.685,1340,4.881,1342,5.368,1585,6.476,1586,7.367,1587,6.107,1588,6.107,1589,6.107,1590,6.107,1591,6.107]],["title/classes/UserInfoResponse.html",[0,0.123,1155,3.058]],["body/classes/UserInfoResponse.html",[0,0.161,2,1.141,3,0.275,4,0.227,5,0.165,10,0.528,11,1.258,16,0.552,22,0.898,25,0.01,26,1.345,32,1.291,39,0.36,43,0.259,55,0.007,56,0.008,57,0.007,61,2.652,88,2.042,89,4.542,91,2.683,152,2.622,155,1.443,193,2.019,428,4.943,429,4.943,443,3.787,1151,5.283,1155,4.943,1170,4.638,1347,4.638,1348,5.101,1349,5.101,1578,6.8,1579,6.8,1592,7.096,1593,4.943,1594,6.278,1595,5.804]],["title/classes/ValidationErrorDetailResponse.html",[0,0.123,68,3.268]],["body/classes/ValidationErrorDetailResponse.html",[0,0.18,2,1.272,3,0.307,4,0.253,5,0.183,12,2.794,16,0.461,19,2.126,22,0.751,24,1.379,25,0.01,26,1.078,27,1.078,32,1.324,43,0.289,44,5.688,49,2.99,55,0.008,56,0.009,57,0.008,65,3.886,68,5.641,1596,6.703,1597,5.688,1598,6.471,1599,6.471,1600,6.095]],["title/modules/ValidationModule.html",[92,1.23,276,3.058]],["body/modules/ValidationModule.html",[0,0.18,3,0.308,4,0.253,5,0.184,25,0.01,39,0.504,41,1.498,43,0.289,55,0.008,56,0.009,57,0.008,92,2.126,94,2.466,99,2.8,276,5.285,290,6.712,479,4.012,483,3.494,484,5.183,697,5.648,1601,6.485,1602,6.485,1603,6.485]],["title/changelog.html",[1604,2.745,1605,2.745,1606,3.262]],["body/changelog.html",[0,0.062,2,0.805,3,0.032,4,0.027,5,0.128,10,0.062,13,1.135,14,0.351,22,0.259,25,0.003,26,0.296,27,0.296,29,0.497,37,0.445,39,0.11,47,2.612,48,1.71,49,2.184,51,1.231,53,0.42,55,0.001,56,0.003,57,0.002,65,1.963,81,0.145,82,1.156,92,0.353,95,0.565,100,0.314,105,0.682,106,0.565,133,0.852,138,0.275,149,1.333,151,0.366,152,2.118,154,0.303,156,0.682,157,0.547,158,0.443,161,0.503,164,0.958,165,1.315,173,0.382,175,0.303,185,0.4,193,0.543,204,0.503,209,0.42,210,2.247,213,0.543,216,1.937,217,1.667,219,2.873,221,0.876,222,0.443,226,0.941,230,0.604,231,0.467,242,0.351,243,0.443,244,0.682,245,1.478,246,0.783,247,0.293,282,0.543,284,2.673,286,2.345,297,1.208,300,2.658,302,0.443,315,1.312,318,1.379,334,0.547,335,0.92,338,2.506,354,0.443,355,1.788,361,0.326,363,0.958,370,0.42,386,1.416,387,0.137,389,0.351,399,0.794,400,0.585,403,0.565,405,0.351,417,1.315,418,0.712,423,1.758,430,0.783,435,1.254,450,0.443,458,0.338,469,4.603,477,1,483,0.682,490,0.876,492,0.597,494,1.312,495,0.529,496,0.712,497,0.443,523,2.147,524,1.012,529,3.112,533,3.374,539,1.215,541,0.712,558,1.608,559,0.382,560,0.351,561,1.723,562,1.946,564,1.947,568,1.38,572,0.995,576,0.4,580,0.351,582,0.42,584,0.543,586,2.223,600,0.503,604,0.543,626,0.543,627,1.012,629,0.443,631,0.47,633,0.783,644,0.47,648,1.012,658,1.454,660,0.937,665,2.078,679,0.503,680,1.421,689,0.543,701,1.846,703,0.543,704,1.781,705,1.715,708,2.444,709,1.231,710,2.641,712,1.963,721,2.385,723,2.17,726,0.543,727,1.1,729,1.944,730,0.382,737,3.068,738,1.542,739,0.4,740,0.746,741,0.826,745,0.47,755,1.542,756,2.873,757,4.307,758,0.937,759,0.876,761,0.503,769,1.231,775,1.16,799,0.42,801,1.679,803,3.082,814,0.503,818,0.543,828,1.315,830,2.641,832,1.231,845,0.783,852,1.563,857,1.995,859,5.222,861,0.503,864,0.783,866,4.45,870,0.597,873,1.946,884,0.876,891,0.443,900,0.826,913,0.47,915,0.503,918,0.746,925,1.012,926,1.315,927,2.444,928,0.47,929,0.937,950,1.542,953,2.208,964,0.746,972,1.1,974,1.16,981,2.623,1012,0.503,1024,0.543,1030,2.623,1130,0.47,1159,1.315,1176,2.208,1201,1.231,1204,0.826,1211,1.16,1240,0.47,1270,1.047,1278,0.597,1279,2.1,1297,4.628,1299,1.068,1300,0.597,1309,0.597,1327,1.201,1333,1.626,1355,0.503,1371,1.947,1374,0.607,1375,0.826,1381,4.2,1386,1.421,1387,0.47,1393,3.082,1394,0.503,1400,1.563,1410,1.563,1421,0.937,1425,0.783,1429,0.826,1460,0.597,1461,1.416,1464,0.543,1466,0.876,1468,2.385,1471,1.16,1475,0.937,1487,0.543,1491,0.826,1492,1.113,1497,0.543,1505,0.597,1506,1.312,1516,0.937,1523,0.543,1524,0.443,1529,0.47,1535,0.876,1536,0.876,1550,0.543,1561,2.208,1562,0.876,1570,1.012,1571,1.113,1593,0.876,1594,1.563,1600,1.012,1606,2.623,1607,0.679,1608,1.231,1609,1.012,1610,0.597,1611,1.542,1612,0.679,1613,0.679,1614,1.778,1615,3.03,1616,5.571,1617,7.317,1618,4.141,1619,0.679,1620,7.834,1621,0.679,1622,6.764,1623,1.113,1624,2.066,1625,0.876,1626,1.113,1627,0.597,1628,0.679,1629,6.916,1630,4.874,1631,4.703,1632,0.679,1633,0.679,1634,7.596,1635,1.266,1636,0.679,1637,4.096,1638,3.594,1639,0.679,1640,4.874,1641,0.679,1642,0.679,1643,2.985,1644,0.679,1645,2.628,1646,0.679,1647,1.959,1648,4.517,1649,0.679,1650,0.679,1651,1.778,1652,0.679,1653,1.959,1654,0.679,1655,1.944,1656,1.959,1657,0.679,1658,1.778,1659,3.082,1660,1.113,1661,1.113,1662,1.266,1663,1.266,1664,1.959,1665,3.305,1666,1.266,1667,0.679,1668,0.597,1669,0.679,1670,2.905,1671,0.679,1672,3.478,1673,0.679,1674,1.266,1675,0.679,1676,0.679,1677,1.113,1678,1.959,1679,0.679,1680,1.113,1681,0.679,1682,1.454,1683,3.6,1684,0.679,1685,0.597,1686,0.679,1687,5.034,1688,2.905,1689,2.985,1690,1.266,1691,1.266,1692,0.679,1693,0.503,1694,0.597,1695,0.679,1696,0.679,1697,0.679,1698,0.597,1699,0.679,1700,1.778,1701,0.679,1702,0.597,1703,2.628,1704,2.31,1705,0.597,1706,0.679,1707,0.679,1708,0.679,1709,0.679,1710,1.778,1711,0.679,1712,1.846,1713,0.679,1714,1.113,1715,0.679,1716,1.266,1717,0.679,1718,0.597,1719,1.266,1720,0.679,1721,1.563,1722,1.012,1723,0.679,1724,0.679,1725,1.266,1726,1.266,1727,0.679,1728,5.109,1729,2.444,1730,0.679,1731,1.16,1732,0.679,1733,0.679,1734,2.623,1735,0.679,1736,0.679,1737,2.229,1738,3.857,1739,0.679,1740,3.274,1741,0.679,1742,0.679,1743,1.778,1744,1.113,1745,0.543,1746,0.679,1747,0.679,1748,0.679,1749,2.873,1750,1.266,1751,1.266,1752,1.266,1753,1.113,1754,1.266,1755,0.679,1756,1.563,1757,0.679,1758,0.679,1759,1.315,1760,0.679,1761,2.117,1762,0.679,1763,1.266,1764,0.679,1765,2.905,1766,0.679,1767,1.113,1768,1.959,1769,0.679,1770,1.012,1771,0.679,1772,1.563,1773,1.959,1774,0.679,1775,0.679,1776,1.113,1777,0.679,1778,4.703,1779,0.679,1780,0.679,1781,0.679,1782,0.679,1783,5.034,1784,2.985,1785,1.266,1786,0.679,1787,0.679,1788,0.679,1789,0.679,1790,0.679,1791,0.679,1792,1.113,1793,0.679,1794,4.096,1795,0.679,1796,1.778,1797,2.623,1798,0.679,1799,1.563,1800,0.679,1801,0.679,1802,1.113,1803,0.679,1804,0.679,1805,2.628,1806,1.113,1807,0.679,1808,1.778,1809,0.679,1810,0.597,1811,0.679,1812,0.679,1813,1.266,1814,1.781,1815,0.679,1816,0.679,1817,1.113,1818,0.679,1819,0.679,1820,0.597,1821,1.012,1822,1.266,1823,1.944,1824,2.985,1825,0.679,1826,0.679,1827,0.679,1828,0.543,1829,1.266,1830,0.679,1831,1.266,1832,4.703,1833,1.781,1834,1.266,1835,0.679,1836,0.679,1837,0.679,1838,0.679,1839,2.628,1840,0.597,1841,0.679,1842,1.266,1843,0.679,1844,0.597,1845,2.229,1846,1.113,1847,0.679,1848,1.266,1849,1.778,1850,1.947,1851,0.679,1852,0.679,1853,0.47,1854,0.679,1855,0.679,1856,1.266,1857,0.679,1858,1.626,1859,0.543,1860,0.679,1861,1.563,1862,0.679,1863,0.679,1864,1.778,1865,0.679,1866,0.679,1867,1.266,1868,1.778,1869,0.679,1870,0.679,1871,0.679,1872,0.679,1873,1.266,1874,0.679,1875,1.778,1876,1.113,1877,1.959,1878,0.679,1879,3.6,1880,0.543,1881,0.679,1882,1.231,1883,1.266,1884,1.648,1885,0.679,1886,0.679,1887,0.679,1888,0.679,1889,1.778,1890,1.959,1891,0.679,1892,1.778,1893,0.597,1894,0.679,1895,1.778,1896,2.623,1897,0.679,1898,0.679,1899,0.679,1900,1.778,1901,0.679,1902,0.679,1903,0.679,1904,1.266,1905,0.679,1906,1.563,1907,1.266,1908,0.679,1909,0.679,1910,0.679,1911,0.679,1912,0.679,1913,0.937,1914,0.503,1915,0.937,1916,0.543,1917,0.679,1918,0.679,1919,0.597,1920,1.113,1921,0.679,1922,0.679,1923,0.679,1924,4.874,1925,0.679,1926,1.778,1927,0.679,1928,0.679,1929,0.679,1930,2.229,1931,0.679,1932,1.266,1933,0.876,1934,1.266,1935,0.679,1936,0.679,1937,0.679,1938,1.266,1939,0.679,1940,0.679,1941,0.679,1942,0.597,1943,0.597,1944,0.679,1945,0.679,1946,0.597,1947,0.679,1948,1.266,1949,0.597,1950,0.679,1951,0.679,1952,0.679,1953,0.679,1954,0.679,1955,0.679,1956,0.679,1957,0.679,1958,2.985,1959,0.679,1960,0.679,1961,0.679,1962,0.679,1963,0.679,1964,0.679,1965,0.679,1966,1.266,1967,0.679,1968,0.679,1969,1.778,1970,0.679,1971,1.266,1972,0.679,1973,1.454,1974,0.679,1975,1.266,1976,0.597,1977,0.679,1978,0.597,1979,0.679,1980,1.266,1981,0.679,1982,0.679,1983,0.679,1984,2.628,1985,0.679,1986,0.679,1987,0.543,1988,0.679,1989,0.679,1990,0.679,1991,0.679,1992,0.679,1993,0.679,1994,0.679,1995,0.679,1996,0.503,1997,0.679,1998,1.778,1999,0.679,2000,0.503,2001,0.679,2002,0.679,2003,0.679,2004,0.679,2005,1,2006,0.783,2007,1.778,2008,1.266,2009,0.679,2010,1.778,2011,0.679,2012,1.959,2013,0.679,2014,0.679,2015,2.628,2016,2.985,2017,0.679,2018,0.679,2019,0.679,2020,2.985,2021,0.679,2022,1.266,2023,0.679,2024,0.679,2025,1.266,2026,0.543,2027,1.266,2028,0.597,2029,1.421,2030,0.679,2031,0.679,2032,0.543,2033,1.312,2034,0.679,2035,7.75,2036,2.641,2037,0.679,2038,0.679,2039,0.543,2040,0.679,2041,0.679,2042,0.679,2043,0.679,2044,0.679,2045,2.985,2046,0.679,2047,1.315,2048,0.679,2049,0.679,2050,0.679,2051,0.679,2052,0.679,2053,2.229,2054,2.229,2055,2.31,2056,1.648,2057,1.778,2058,2.628,2059,1.266,2060,1.266,2061,3.594,2062,1.648,2063,3.305,2064,1.266,2065,1.266,2066,1.231,2067,1.266,2068,1.012,2069,1.012,2070,1.266,2071,0.679,2072,0.679,2073,2.905,2074,0.543,2075,0.443,2076,2.628,2077,1.113,2078,0.679,2079,0.543,2080,0.47,2081,0.503,2082,0.679,2083,0.679,2084,0.597,2085,1.113,2086,0.679,2087,1.266,2088,0.679,2089,0.679,2090,1.266,2091,0.679,2092,0.679,2093,1.266,2094,0.679,2095,0.679,2096,1.266,2097,0.679,2098,0.679,2099,0.679,2100,0.597,2101,1.542,2102,0.679,2103,0.679,2104,1.113,2105,0.503,2106,0.679,2107,1.778,2108,2.1,2109,0.679,2110,0.597,2111,1.266,2112,0.679,2113,0.679,2114,0.597,2115,0.679,2116,3.39,2117,1.266,2118,0.679,2119,0.679,2120,0.679,2121,0.679,2122,0.679,2123,1.113,2124,1.113,2125,2.229,2126,1.781,2127,0.679,2128,1.778,2129,0.679,2130,0.679,2131,1.421,2132,0.679,2133,0.679,2134,0.679,2135,1.266,2136,1.778,2137,0.543,2138,0.679,2139,0.679,2140,0.679,2141,0.679,2142,1.266,2143,0.679,2144,1.012,2145,0.597,2146,1.266,2147,0.679,2148,0.597,2149,0.679,2150,0.679,2151,0.679,2152,1.266,2153,0.597,2154,1.266,2155,0.679,2156,1.266,2157,0.679,2158,0.679,2159,0.679,2160,0.679,2161,0.679,2162,1.715,2163,1.778,2164,1.778,2165,1.648,2166,0.47,2167,2.1,2168,0.679,2169,1.778,2170,1.266,2171,0.47,2172,0.443,2173,0.597,2174,0.679,2175,0.679,2176,0.597,2177,0.503,2178,1.266,2179,1.315,2180,1.778,2181,1.113,2182,0.679,2183,0.679,2184,0.679,2185,0.597,2186,0.679,2187,0.679,2188,0.679,2189,1.819,2190,0.679,2191,0.679,2192,0.679,2193,0.679,2194,0.937,2195,0.679,2196,0.679,2197,0.679,2198,0.679,2199,0.679,2200,0.679,2201,1.266,2202,0.597,2203,0.543,2204,0.597,2205,0.679,2206,0.597,2207,0.679,2208,0.543,2209,1.113,2210,0.679,2211,1.421,2212,0.679,2213,0.679,2214,0.679,2215,1.266,2216,0.679,2217,0.679,2218,0.679,2219,0.679,2220,0.679,2221,1.012,2222,0.679,2223,0.679,2224,1.266,2225,0.679,2226,0.679,2227,0.679,2228,2.229,2229,0.597,2230,0.679,2231,1.266,2232,0.679,2233,0.679,2234,1.266,2235,1.266,2236,1.266,2237,1.778,2238,1.778,2239,1.959,2240,1.266,2241,1.563,2242,1.012,2243,0.597,2244,0.47,2245,0.679,2246,0.543,2247,0.597,2248,0.679,2249,0.876,2250,0.679,2251,1.778,2252,0.679,2253,0.679,2254,0.679,2255,0.679,2256,1.819,2257,0.597,2258,1.421,2259,0.679,2260,1.266,2261,1.012,2262,1.778,2263,1.113,2264,0.679,2265,0.679,2266,0.679,2267,1.266,2268,1.421,2269,1.113,2270,1.266,2271,0.679,2272,0.679,2273,0.679,2274,0.679,2275,0.679,2276,0.679,2277,0.679,2278,0.679,2279,0.679,2280,0.597,2281,0.597,2282,0.679,2283,0.679,2284,1.778,2285,0.679,2286,1.266,2287,0.679,2288,1.113,2289,0.679,2290,1.266,2291,0.679,2292,1.266,2293,0.47,2294,0.679,2295,1.012,2296,0.679,2297,0.679,2298,0.597,2299,0.679,2300,0.679,2301,0.597,2302,1.778,2303,2.229,2304,1.266,2305,0.826,2306,1.113,2307,1.266,2308,1.113,2309,1.266,2310,0.876,2311,0.679,2312,1.266,2313,0.597,2314,0.679,2315,1.266,2316,1.113,2317,0.679,2318,0.679,2319,0.679,2320,0.597,2321,0.679,2322,0.679,2323,1.266,2324,0.679,2325,0.679,2326,2.623,2327,1.012,2328,0.679,2329,3.594,2330,0.679,2331,0.597,2332,0.597,2333,0.679,2334,0.679,2335,0.679,2336,0.679,2337,2.229,2338,0.679,2339,0.679,2340,1.421,2341,0.679,2342,0.679,2343,0.679,2344,0.679,2345,0.597,2346,1.113,2347,0.679,2348,0.679,2349,0.679,2350,0.679,2351,1.012,2352,0.679,2353,0.679,2354,0.679,2355,0.679,2356,0.679,2357,0.679,2358,0.679,2359,0.679,2360,1.959,2361,0.679,2362,0.679,2363,0.543,2364,0.679,2365,0.543,2366,0.679,2367,0.679,2368,0.597,2369,0.679,2370,0.503,2371,0.679,2372,0.679,2373,0.597,2374,0.679,2375,0.679,2376,0.679,2377,0.679,2378,0.679,2379,0.679,2380,0.679,2381,1.778,2382,0.543,2383,0.679,2384,0.543,2385,0.679,2386,0.679,2387,0.679,2388,0.679,2389,1.778,2390,0.679,2391,1.266,2392,1.778,2393,1.266,2394,1.266,2395,1.266,2396,1.266,2397,0.679,2398,1.266,2399,1.266,2400,0.679,2401,0.679,2402,0.679,2403,0.679,2404,0.679,2405,0.597,2406,0.679,2407,1.266,2408,0.679,2409,0.679,2410,0.503,2411,0.679,2412,0.543,2413,0.679,2414,1.266,2415,0.679,2416,0.597,2417,0.679,2418,0.679,2419,0.679,2420,0.679,2421,0.543,2422,0.679,2423,0.679,2424,1.778,2425,1.778,2426,0.679,2427,0.679,2428,0.679,2429,1.113,2430,0.679,2431,0.679,2432,0.679,2433,0.679,2434,0.679,2435,0.679,2436,0.679,2437,1.266,2438,0.597,2439,0.679,2440,0.597,2441,0.679,2442,0.679,2443,0.679,2444,0.679,2445,0.679,2446,0.679,2447,0.679,2448,0.679,2449,0.679,2450,1.266,2451,1.266,2452,0.679,2453,0.597,2454,0.679,2455,0.679,2456,0.679,2457,1.266,2458,0.679,2459,0.679,2460,1.266,2461,0.679,2462,1.563,2463,1.266,2464,0.679,2465,0.679,2466,1.266,2467,0.443,2468,2.229,2469,0.679,2470,0.679,2471,0.679,2472,0.679,2473,0.543,2474,0.679,2475,0.937,2476,0.597,2477,0.597,2478,1.266,2479,0.679,2480,0.679,2481,1.266,2482,0.679,2483,0.679,2484,0.679,2485,0.679,2486,0.679,2487,1.266,2488,0.679,2489,0.679,2490,0.679,2491,0.679,2492,0.679,2493,0.679,2494,0.679,2495,1.778,2496,0.679,2497,0.679,2498,0.679,2499,0.679,2500,0.679,2501,0.679,2502,0.679,2503,0.679,2504,1.266,2505,1.266,2506,0.679,2507,0.679,2508,0.679,2509,2.229,2510,4.517,2511,1.266,2512,1.113,2513,1.113,2514,1.266,2515,2.229,2516,1.113,2517,1.266,2518,0.679,2519,1.266,2520,1.113,2521,1.266,2522,1.266,2523,1.266,2524,1.113,2525,1.266,2526,2.229,2527,1.266,2528,2.229,2529,1.266,2530,1.266,2531,1.113,2532,1.113,2533,1.778,2534,1.266,2535,0.679,2536,0.679,2537,1.266,2538,0.937,2539,0.503,2540,1.266,2541,0.679,2542,2.628,2543,1.266,2544,0.679,2545,0.597,2546,0.679,2547,2.229,2548,0.679,2549,0.679,2550,0.679,2551,0.679,2552,0.679,2553,0.47,2554,0.597,2555,0.679,2556,0.679,2557,0.679,2558,1.266,2559,1.266,2560,1.266,2561,0.679,2562,0.679,2563,0.47,2564,0.679,2565,0.597,2566,0.543,2567,0.679,2568,0.679,2569,1.266,2570,1.266,2571,0.679,2572,0.679,2573,0.679,2574,1.266,2575,0.503,2576,0.679,2577,0.679,2578,0.679,2579,1.266,2580,0.679,2581,1.778,2582,1.563,2583,0.679,2584,0.679,2585,0.543,2586,1.266,2587,1.266,2588,0.679,2589,0.503,2590,0.679,2591,0.679,2592,1.778,2593,1.266,2594,0.679,2595,1.266,2596,0.543,2597,0.679,2598,1.266,2599,0.679,2600,0.679,2601,0.679,2602,2.229,2603,0.679,2604,0.679,2605,0.679,2606,0.679,2607,0.679,2608,0.679,2609,0.679,2610,1.266,2611,0.679,2612,0.679,2613,0.679,2614,0.597,2615,1.266,2616,0.679,2617,1.266,2618,0.679,2619,0.679,2620,0.543,2621,0.679,2622,1.266,2623,2.229,2624,0.679,2625,0.597,2626,0.679,2627,1.266,2628,1.266,2629,0.679,2630,0.679,2631,0.597,2632,1.266,2633,0.679,2634,0.679,2635,1.266,2636,0.543,2637,0.543,2638,1.266,2639,0.679,2640,0.679,2641,0.679,2642,1.266,2643,1.266,2644,0.679,2645,0.679,2646,1.266,2647,0.679,2648,0.679,2649,0.679,2650,0.679,2651,1.266,2652,0.679,2653,0.679,2654,0.543,2655,0.679,2656,2.229,2657,0.543,2658,0.679,2659,0.679,2660,1.266,2661,0.597,2662,0.503,2663,1.266,2664,0.679,2665,2.628,2666,1.266,2667,0.543,2668,1.266,2669,0.543,2670,0.679,2671,0.679,2672,0.543,2673,0.679,2674,0.679,2675,0.679,2676,0.679,2677,0.679,2678,0.679,2679,0.679,2680,0.679,2681,0.679,2682,0.679,2683,0.679,2684,0.679,2685,1.113,2686,0.679,2687,0.679,2688,0.679,2689,0.679,2690,0.679,2691,0.543,2692,0.679,2693,0.679,2694,0.679,2695,0.679,2696,0.679,2697,0.679,2698,0.679,2699,0.597,2700,0.47,2701,0.679,2702,0.679,2703,0.679,2704,1.778,2705,0.679,2706,0.597,2707,0.597,2708,0.679,2709,0.597,2710,0.679,2711,0.679,2712,0.679,2713,0.679,2714,0.679,2715,2.229,2716,0.679,2717,0.679,2718,0.597,2719,0.679,2720,1.563,2721,0.679,2722,0.679,2723,0.679,2724,0.679,2725,0.679,2726,0.679,2727,1.266,2728,0.679,2729,0.679,2730,0.679,2731,0.543,2732,1.266,2733,0.679,2734,0.679,2735,0.679,2736,0.679,2737,0.679,2738,1.778,2739,1.266,2740,1.266,2741,0.679,2742,0.597,2743,0.679,2744,1.266,2745,0.597,2746,1.778,2747,0.679,2748,0.679,2749,0.679,2750,0.679,2751,0.679,2752,1.266,2753,1.266,2754,1.266,2755,1.266,2756,1.563,2757,1.266,2758,0.679,2759,1.266,2760,0.679,2761,1.266,2762,0.597,2763,1.778,2764,0.679,2765,0.597,2766,0.679,2767,0.679,2768,0.679,2769,2.628,2770,0.679,2771,0.597,2772,0.679,2773,0.679,2774,0.679,2775,0.597,2776,0.679,2777,1.266,2778,1.113,2779,0.679,2780,0.597,2781,0.503,2782,0.679,2783,0.679,2784,0.679,2785,0.679,2786,1.266,2787,0.679,2788,0.679,2789,0.679,2790,0.679,2791,0.597,2792,0.679,2793,0.679,2794,0.543,2795,0.679,2796,0.679,2797,0.503,2798,0.679,2799,0.679,2800,0.679,2801,1.266,2802,0.597,2803,0.597]],["title/coverage.html",[2006,3.704]],["body/coverage.html",[0,0.242,1,1.635,5,0.075,6,2.323,7,2.323,9,1.635,16,0.188,25,0.011,38,1.424,48,1.367,49,2.236,55,0.003,56,0.005,57,0.003,58,2.112,59,2.323,60,2.323,68,1.955,82,0.548,85,2.112,86,2.323,98,1.367,103,1.829,113,2.685,128,1.557,129,1.557,135,2.077,137,2.323,152,0.821,170,1.222,190,1.036,191,3.288,205,1.267,239,3.288,250,1.725,266,1.955,297,1.069,298,2.323,309,1.315,321,1.487,322,2.323,323,3.946,330,1.487,331,4.032,332,0.893,333,1.069,360,1.424,381,1.635,385,1.487,387,1.59,411,1.557,412,1.557,413,1.725,414,3.288,415,3.737,433,3.497,444,2.112,445,2.323,446,2.323,452,1.367,480,1.829,485,2.323,489,2.112,499,3.288,500,3.043,507,1.487,548,1.829,550,2.323,551,2.323,569,1.955,570,3.043,571,2.848,601,5.59,602,5.23,605,2.112,622,2.112,624,2.112,630,2.112,634,2.112,644,4.276,672,1.955,673,2.112,686,2.112,697,1.955,698,2.323,699,2.323,733,1.725,734,3.497,748,1.725,751,1.557,752,3.288,753,3.288,760,1.829,770,2.323,771,2.323,772,1.955,773,2.323,791,1.829,792,2.323,804,1.955,807,1.955,808,2.323,809,2.323,812,4.038,824,2.323,845,1.635,846,2.323,853,2.323,883,2.112,884,2.848,885,2.112,886,2.112,901,2.112,918,5.302,946,2.613,947,1.955,948,2.323,957,1.829,963,1.829,965,1.725,977,1.829,983,1.829,986,1.725,988,1.635,990,1.955,993,1.829,994,1.955,1021,3.288,1022,3.288,1039,2.112,1042,2.323,1056,1.955,1058,1.955,1103,1.635,1109,2.323,1120,1.725,1121,1.829,1136,1.829,1150,3.737,1155,1.829,1161,1.829,1166,2.112,1181,3.288,1182,2.323,1198,2.112,1218,2.323,1219,2.112,1295,2.323,1296,2.323,1314,2.323,1326,2.323,1327,1.424,1328,2.112,1338,2.323,1339,2.323,1340,3.288,1346,2.323,1347,3.288,1351,1.955,1352,2.323,1356,1.725,1371,1.725,1374,1.267,1375,1.725,1388,2.323,1392,2.323,1401,2.323,1411,1.955,1412,2.323,1416,1.725,1418,1.829,1419,1.955,1435,2.323,1450,1.725,1454,2.323,1504,2.323,1517,2.323,1531,2.323,1533,2.323,1558,2.323,1568,2.112,1569,2.323,1577,2.323,1585,2.323,1592,2.323,1596,2.323,1597,2.323,1749,2.112,1759,3.043,1770,3.288,1799,2.323,1817,2.323,1861,4.441,1973,1.725,2006,1.635,2036,2.112,2340,2.112,2345,2.323,2654,6.935,2804,2.323,2805,2.323,2806,5.751,2807,6.543,2808,6.179,2809,6.179,2810,5.052,2811,5.052,2812,7.065,2813,6.543,2814,2.323,2815,8.693,2816,2.323,2817,4.441,2818,4.441,2819,2.323,2820,2.323,2821,5.052,2822,4.557,2823,2.323,2824,2.112,2825,2.323,2826,7.676,2827,4.038,2828,2.112,2829,2.323,2830,2.643,2831,2.643,2832,2.643,2833,2.323,2834,2.643,2835,5.052,2836,4.115,2837,2.643,2838,2.643,2839,6.179,2840,5.052,2841,2.643,2842,5.052,2843,2.643,2844,2.643,2845,2.643,2846,4.115,2847,2.643,2848,6.004,2849,2.323,2850,2.323,2851,2.323,2852,2.323,2853,4.115,2854,2.323,2855,2.323,2856,2.323,2857,2.323,2858,4.441,2859,2.643]],["title/dependencies.html",[95,2.368,2363,2.966]],["body/dependencies.html",[0,0.151,4,0.15,5,0.154,16,0.273,25,0.011,41,0.884,47,1.835,55,0.004,56,0.006,57,0.004,91,1.77,95,1.71,109,2.832,111,3.366,133,3.017,138,2.194,157,2.955,164,2.063,193,0.933,200,2.068,201,1.456,202,2.369,245,3.541,278,2.498,280,2.369,346,3.538,364,2.255,399,2.421,440,3.894,463,3.06,479,2.369,529,1.653,561,2.598,582,4.234,583,3.06,618,3.366,831,5.532,832,2.65,897,3.06,900,2.498,972,2.369,980,2.832,1333,4.874,1421,4.01,1623,3.366,1722,4.333,1753,3.366,1853,2.65,1919,3.366,1920,3.366,1976,3.366,2100,3.366,2123,3.366,2124,3.366,2162,2.498,2171,2.65,2172,3.538,2173,3.366,2176,3.366,2185,3.366,2229,3.366,2244,2.65,2249,3.752,2263,3.366,2268,3.06,2477,3.366,2742,3.366,2780,3.366,2860,5.422,2861,7.713,2862,3.829,2863,3.829,2864,3.829,2865,3.829,2866,3.829,2867,5.422,2868,5.422,2869,3.829,2870,5.422,2871,3.829,2872,3.829,2873,3.829,2874,3.829,2875,3.829,2876,3.829,2877,3.829,2878,3.829,2879,3.829,2880,5.422,2881,3.829,2882,3.829,2883,5.422,2884,3.829,2885,3.829,2886,3.829,2887,5.422,2888,3.829,2889,3.829,2890,5.422,2891,3.829,2892,3.829,2893,7.225,2894,3.829,2895,3.829,2896,3.829,2897,3.829,2898,3.829,2899,3.829,2900,3.829,2901,3.829,2902,3.829,2903,3.829,2904,3.829,2905,3.829,2906,2.832,2907,3.829,2908,3.829,2909,5.422,2910,3.829,2911,3.829,2912,5.422,2913,5.422,2914,3.829,2915,3.829,2916,3.829,2917,3.06,2918,3.829,2919,3.829,2920,3.829,2921,3.829,2922,3.829,2923,5.422,2924,3.829,2925,3.829,2926,3.829,2927,3.829,2928,3.829,2929,3.829,2930,3.829,2931,3.829,2932,3.829,2933,3.829,2934,3.829,2935,3.829,2936,3.829,2937,3.829,2938,3.829,2939,3.829,2940,3.829,2941,5.422,2942,5.422,2943,3.829,2944,3.829,2945,3.829,2946,3.829,2947,3.829,2948,3.829,2949,3.829,2950,3.829,2951,5.422,2952,3.829,2953,3.829,2954,3.829,2955,3.829,2956,3.829,2957,3.829,2958,3.829,2959,3.829,2960,3.829,2961,3.829,2962,3.829,2963,3.829,2964,5.422,2965,3.829,2966,3.829,2967,3.829,2968,3.829,2969,3.829,2970,5.422,2971,3.829,2972,3.366,2973,3.06,2974,3.829,2975,3.829,2976,3.829,2977,3.829,2978,3.829,2979,3.829,2980,3.829,2981,3.829,2982,3.829,2983,3.829,2984,3.829,2985,3.829,2986,3.829,2987,3.829,2988,3.829,2989,3.829,2990,3.829,2991,3.06,2992,3.829,2993,3.829,2994,3.829,2995,3.829,2996,3.829,2997,3.829,2998,3.829,2999,3.829,3000,3.829,3001,3.829,3002,3.829,3003,3.829]],["title/miscellaneous/functions.html",[3004,2.422,3005,3.67]],["body/miscellaneous/functions.html",[10,0.566,24,1.699,25,0.01,26,1.329,27,1.329,37,1.995,38,4.014,49,3.127,55,0.007,56,0.009,57,0.007,98,4.125,577,3.847,601,4.6,602,5.72,645,4.971,647,4.971,652,4.971,672,5.509,1039,6.373,2814,6.547,2816,6.547,2822,4.971,2856,5.467,2857,6.547,3004,4.058,3005,4.305,3006,5.467,3007,7.009,3008,6.22,3009,6.22]],["title/index.html",[10,0.337,1604,2.745,1605,2.745]],["body/index.html",[5,0.171,13,2.594,14,2.306,15,1.645,17,1.145,25,0.009,26,1.004,29,2.865,52,3.676,53,2.758,55,0.005,56,0.007,57,0.005,61,1.465,64,2.909,82,0.925,133,2.137,193,1.086,209,4.519,210,3.913,214,3.547,216,3.246,217,1.645,230,1.208,245,2.508,297,1.804,405,2.306,418,2.508,423,2.626,497,2.909,523,3.797,529,1.925,561,2.887,562,2.626,586,2.758,658,2.909,665,4.332,701,4.22,720,3.298,723,2.508,730,3.389,801,2.508,806,2.909,857,3.116,866,3.389,900,2.909,904,3.298,972,2.758,1270,2.626,1421,3.298,1474,3.086,1538,3.086,1549,3.93,1593,3.086,1608,3.086,1609,5.452,1611,4.169,1620,3.919,1626,3.919,1627,3.919,1672,4.455,1682,5.556,1729,3.298,1761,4.018,1772,3.919,1810,7.067,1814,3.563,1823,3.298,1850,2.909,1946,3.919,1973,2.909,2005,2.508,2006,2.758,2026,4.814,2056,3.298,2105,3.298,2166,3.086,2171,3.086,2172,3.93,2206,5.996,2208,4.814,2211,3.563,2247,3.919,2293,3.086,2440,3.919,2476,3.919,2538,4.455,2539,3.298,2585,3.563,2699,3.919,2700,3.086,2775,3.919,2797,3.298,2806,3.919,2991,3.563,3010,3.563,3011,6.024,3012,6.285,3013,4.458,3014,3.919,3015,4.458,3016,3.086,3017,4.458,3018,4.458,3019,3.086,3020,3.086,3021,4.458,3022,3.919,3023,3.919,3024,4.458,3025,3.563,3026,4.458,3027,5.996,3028,5.404,3029,5.404,3030,3.726,3031,3.919,3032,6.024,3033,6.024,3034,7.631,3035,7.306,3036,4.458,3037,4.458,3038,6.024,3039,3.919,3040,4.458,3041,3.919,3042,6.024,3043,4.458,3044,3.919,3045,6.024,3046,6.024,3047,3.298,3048,3.919,3049,4.458,3050,4.458,3051,4.458,3052,4.458,3053,4.458,3054,2.758,3055,4.458,3056,4.458,3057,3.563,3058,4.458,3059,3.298,3060,3.919,3061,4.458,3062,4.458,3063,4.458,3064,3.563,3065,3.919,3066,4.455,3067,4.458,3068,4.458,3069,3.919,3070,4.458,3071,3.919]],["title/license.html",[1604,2.745,1605,2.745,3072,3.262]],["body/license.html",[0,0.025,4,0.308,5,0.047,13,2.835,17,0.231,22,0.105,25,0.002,29,0.644,39,0.056,52,1.503,53,0.557,55,0.003,56,0.002,57,0.002,64,1.071,81,0.192,82,0.89,106,0.402,149,2.147,151,1.503,152,1.779,154,1.246,155,0.332,161,1.214,166,1.988,167,3.346,199,0.353,204,2.947,217,2.373,222,5.522,226,0.323,242,0.466,244,0.885,247,0.389,265,0.967,280,0.557,285,0.666,334,0.389,338,0.342,352,0.587,355,2.392,356,0.557,387,0.805,401,0.402,402,0.402,418,1.273,423,1.643,425,0.666,435,0.507,451,0.416,458,0.448,483,1.96,490,0.623,494,1.643,495,2.329,497,2.799,529,0.709,549,0.86,557,1.399,558,2.312,562,2.142,568,1.29,572,0.733,580,0.466,582,1.015,613,0.666,633,1.015,679,1.214,705,0.587,708,0.666,712,1.084,716,0.666,721,2.23,723,0.923,724,1.136,727,1.726,730,0.923,740,0.53,757,3.11,793,1.015,797,3.618,857,2.601,858,0.623,863,0.557,866,1.273,867,0.666,891,0.587,909,0.587,910,2.757,912,0.72,913,2.518,915,1.673,927,2.063,929,3.866,974,1.071,980,0.666,1013,0.72,1024,4.178,1032,1.931,1130,0.623,1201,2.245,1240,0.623,1270,2.142,1279,0.72,1297,1.808,1327,3.466,1355,5.24,1381,1.643,1387,0.623,1423,1.988,1425,1.399,1461,2.817,1471,1.82,1475,1.214,1487,1.312,1516,0.666,1523,0.72,1524,2.6,1526,0.666,1527,4.001,1528,2.851,1536,1.566,1538,1.931,1549,0.587,1563,4.01,1570,0.72,1572,2.399,1593,0.623,1610,0.791,1611,1.566,1615,2.063,1617,1.443,1625,0.623,1660,1.443,1672,0.666,1678,0.791,1682,2.6,1693,0.666,1698,0.791,1712,1.726,1718,1.443,1722,1.312,1731,0.587,1749,0.72,1756,0.791,1759,1.214,1761,2.142,1765,1.443,1773,0.791,1776,0.791,1792,0.791,1814,5.86,1821,2.592,1823,1.214,1833,0.72,1844,1.443,1846,0.791,1859,1.312,1879,1.443,1880,2.592,1882,0.623,1890,0.791,1893,0.791,1896,0.791,1914,0.666,1915,2.399,1942,0.791,1978,0.791,1996,0.666,2006,1.015,2028,1.443,2032,1.312,2039,0.72,2056,0.666,2062,2.947,2069,2.23,2077,0.791,2079,5.705,2080,3.327,2081,1.673,2084,5.945,2101,2.245,2105,1.214,2145,0.791,2162,1.476,2165,3.173,2179,4.888,2189,2.969,2194,0.666,2203,0.72,2221,0.72,2239,0.791,2241,1.443,2242,1.312,2246,3.429,2280,0.791,2305,1.82,2306,0.791,2308,0.791,2340,0.72,2346,0.791,2351,0.72,2370,1.214,2373,0.791,2384,0.72,2410,1.214,2429,0.791,2467,2.374,2473,1.312,2512,1.443,2538,2.063,2539,1.673,2545,1.443,2553,1.931,2563,0.623,2566,0.72,2585,1.312,2589,1.673,2625,1.443,2636,0.72,2662,1.673,2669,0.72,2672,2.907,2691,4.018,2700,0.623,2706,5.272,2707,1.443,2709,1.443,2718,0.791,2756,0.791,2762,1.443,2765,0.791,2781,3.719,2791,1.988,2833,0.791,2917,0.72,3012,0.72,3016,2.245,3019,1.931,3020,0.623,3023,2.452,3025,1.808,3030,0.557,3044,0.791,3047,1.673,3054,3.11,3066,1.673,3072,7.489,3073,5.998,3074,5.868,3075,0.9,3076,2.262,3077,7.027,3078,3.244,3079,4.69,3080,4.947,3081,3.244,3082,0.9,3083,0.9,3084,1.642,3085,2.262,3086,2.262,3087,5.227,3088,0.9,3089,0.9,3090,1.443,3091,3.244,3092,3.502,3093,1.642,3094,1.642,3095,4.9,3096,4.29,3097,0.9,3098,0.9,3099,3.638,3100,1.443,3101,0.791,3102,0.791,3103,4.419,3104,7.631,3105,2.262,3106,1.988,3107,0.9,3108,0.9,3109,2.79,3110,4.563,3111,0.9,3112,4.563,3113,1.214,3114,0.9,3115,2.79,3116,0.72,3117,2.79,3118,0.72,3119,5.034,3120,0.791,3121,0.9,3122,4.807,3123,5.028,3124,3.244,3125,5.227,3126,0.9,3127,1.642,3128,0.9,3129,0.9,3130,1.988,3131,0.9,3132,0.9,3133,0.9,3134,0.9,3135,0.9,3136,0.9,3137,2.79,3138,0.9,3139,2.262,3140,0.9,3141,0.9,3142,4.979,3143,1.673,3144,0.9,3145,0.9,3146,1.808,3147,2.262,3148,0.9,3149,0.666,3150,1.642,3151,1.642,3152,2.262,3153,7.662,3154,0.9,3155,3.244,3156,3.244,3157,3.638,3158,0.72,3159,2.262,3160,4.608,3161,1.642,3162,0.9,3163,0.9,3164,0.9,3165,2.262,3166,0.9,3167,0.9,3168,1.642,3169,3.638,3170,0.9,3171,1.642,3172,0.9,3173,3.327,3174,0.9,3175,2.79,3176,0.791,3177,1.642,3178,7.599,3179,2.262,3180,4.563,3181,2.452,3182,1.214,3183,0.9,3184,1.642,3185,2.262,3186,4.563,3187,4.807,3188,0.9,3189,2.79,3190,1.642,3191,2.79,3192,2.452,3193,0.9,3194,2.262,3195,6.835,3196,1.443,3197,0.9,3198,4.29,3199,0.9,3200,1.988,3201,2.374,3202,0.9,3203,5.728,3204,1.988,3205,1.642,3206,3.502,3207,5.028,3208,3.638,3209,0.9,3210,1.642,3211,3.984,3212,0.9,3213,5.409,3214,1.642,3215,0.9,3216,0.9,3217,0.9,3218,2.262,3219,0.9,3220,0.9,3221,0.9,3222,0.72,3223,2.262,3224,2.452,3225,0.9,3226,0.9,3227,0.9,3228,1.443,3229,4.807,3230,0.791,3231,0.791,3232,1.988,3233,2.262,3234,1.673,3235,2.262,3236,0.9,3237,2.851,3238,3.198,3239,0.791,3240,1.988,3241,0.9,3242,0.9,3243,0.9,3244,0.9,3245,1.443,3246,0.9,3247,6.067,3248,1.443,3249,1.988,3250,0.623,3251,1.642,3252,2.79,3253,0.791,3254,0.9,3255,1.642,3256,0.9,3257,0.9,3258,0.9,3259,1.642,3260,0.9,3261,1.312,3262,0.9,3263,2.851,3264,0.9,3265,0.72,3266,3.984,3267,2.23,3268,0.9,3269,2.851,3270,0.9,3271,1.642,3272,0.9,3273,0.9,3274,0.9,3275,0.9,3276,0.9,3277,2.262,3278,0.9,3279,1.642,3280,1.642,3281,1.642,3282,0.9,3283,5.409,3284,1.642,3285,0.9,3286,0.9,3287,0.791,3288,0.9,3289,0.666,3290,0.9,3291,0.9,3292,2.262,3293,0.791,3294,0.9,3295,5.034,3296,0.666,3297,0.9,3298,0.9,3299,3.244,3300,3.198,3301,0.9,3302,0.9,3303,2.262,3304,0.9,3305,0.9,3306,2.79,3307,0.9,3308,0.9,3309,0.9,3310,0.9,3311,0.9,3312,0.9,3313,1.642,3314,0.9,3315,2.262,3316,0.9,3317,0.9,3318,1.642,3319,0.9,3320,0.9,3321,0.9,3322,0.9,3323,0.9,3324,1.642,3325,1.136,3326,4.01,3327,0.9,3328,3.638,3329,0.9,3330,0.9,3331,1.443,3332,2.262,3333,2.79,3334,2.79,3335,2.79,3336,0.9,3337,2.851,3338,3.244,3339,0.9,3340,2.262,3341,0.9,3342,1.642,3343,0.9,3344,1.443,3345,3.244,3346,1.642,3347,2.79,3348,2.79,3349,0.9,3350,2.262,3351,3.244,3352,0.9,3353,0.9,3354,3.184,3355,2.262,3356,2.262,3357,1.642,3358,0.623,3359,0.9,3360,0.791,3361,0.9,3362,0.9,3363,1.988,3364,0.9,3365,0.9,3366,0.9,3367,0.9,3368,0.9,3369,2.262,3370,0.9,3371,0.791,3372,1.988,3373,1.642,3374,3.638,3375,5.653,3376,2.262,3377,1.642,3378,1.642,3379,1.642,3380,0.791,3381,0.9,3382,0.9,3383,0.9,3384,3.198,3385,1.642,3386,0.9,3387,0.9,3388,0.9,3389,0.9,3390,1.642,3391,0.9,3392,1.642,3393,0.9,3394,3.244,3395,0.9,3396,2.969,3397,0.9,3398,4.419,3399,0.9,3400,0.9,3401,0.9,3402,0.9,3403,1.642,3404,0.9,3405,2.79,3406,1.642,3407,0.791,3408,0.9,3409,0.9,3410,0.9,3411,0.9,3412,1.642,3413,0.9,3414,0.9,3415,0.72,3416,2.452,3417,0.9,3418,1.642,3419,0.9,3420,0.9,3421,1.988,3422,0.9,3423,0.9,3424,0.9,3425,0.9,3426,2.79,3427,0.9,3428,0.9,3429,0.9,3430,0.791,3431,0.791,3432,0.791,3433,0.9,3434,0.9,3435,0.9,3436,3.244,3437,0.9,3438,0.9,3439,2.79,3440,0.9,3441,0.791,3442,0.9,3443,0.9,3444,0.9,3445,0.9,3446,0.9,3447,2.79,3448,0.9,3449,0.9,3450,2.262,3451,0.9,3452,0.72,3453,2.262,3454,0.9,3455,0.9,3456,0.9,3457,0.9,3458,0.9,3459,0.9,3460,0.9,3461,0.791,3462,1.443,3463,0.9,3464,0.623,3465,1.642,3466,0.791,3467,0.9,3468,2.79,3469,0.9,3470,0.9,3471,1.642,3472,2.262,3473,2.262,3474,0.72,3475,1.642,3476,0.9,3477,2.262,3478,3.984,3479,0.9,3480,0.9,3481,1.642,3482,0.9,3483,0.9,3484,0.9,3485,0.9,3486,2.79,3487,2.262,3488,0.9,3489,3.244,3490,0.9,3491,0.9,3492,0.9,3493,0.9,3494,0.791,3495,0.9,3496,1.642,3497,1.642,3498,1.443,3499,2.262,3500,0.791,3501,0.9,3502,1.312,3503,2.262,3504,0.9,3505,1.443,3506,0.9,3507,1.642,3508,0.9,3509,0.9,3510,1.642,3511,6.608,3512,2.262,3513,0.9,3514,3.244,3515,4.807,3516,2.262,3517,0.9,3518,0.791,3519,0.9,3520,0.9,3521,2.79,3522,0.9,3523,2.262,3524,0.9,3525,0.9,3526,0.9,3527,0.9,3528,0.9,3529,0.9,3530,0.9,3531,2.79,3532,1.642,3533,0.9,3534,0.9,3535,2.262,3536,0.9,3537,1.642,3538,2.262,3539,1.642,3540,0.9,3541,0.9,3542,0.9,3543,1.642,3544,2.262,3545,0.9,3546,0.791,3547,0.9,3548,0.9,3549,1.642,3550,0.9,3551,0.791,3552,0.9,3553,0.9,3554,0.9,3555,0.9,3556,2.262,3557,1.642,3558,0.791,3559,0.9,3560,0.9,3561,2.79,3562,0.9,3563,2.262,3564,0.9,3565,0.9,3566,1.642,3567,0.9,3568,0.9,3569,0.9,3570,2.262,3571,1.642,3572,1.642,3573,0.9,3574,1.642,3575,3.984,3576,1.443,3577,2.262,3578,2.79,3579,0.791,3580,0.9,3581,1.642,3582,0.9,3583,2.262,3584,0.9,3585,0.9,3586,0.9,3587,0.9,3588,0.9,3589,0.9,3590,2.262,3591,1.642,3592,0.9,3593,1.642,3594,0.791,3595,0.9,3596,0.9,3597,1.642,3598,1.642,3599,0.9,3600,1.642,3601,0.9,3602,0.9,3603,0.72,3604,0.9,3605,2.262,3606,0.9,3607,0.9,3608,0.9,3609,0.9,3610,1.642,3611,2.262,3612,0.9,3613,0.9,3614,0.9,3615,0.9,3616,0.72,3617,1.642,3618,0.9,3619,0.9,3620,0.9,3621,0.9,3622,0.9,3623,0.9,3624,0.9,3625,0.9,3626,0.666,3627,0.9,3628,0.9,3629,0.9,3630,2.79,3631,0.9,3632,0.9,3633,1.642,3634,0.9,3635,0.9,3636,0.9,3637,0.9,3638,0.9,3639,0.9,3640,0.9,3641,0.72,3642,0.9,3643,0.9,3644,0.9,3645,0.791,3646,1.642,3647,0.9,3648,0.9,3649,0.9,3650,0.9,3651,0.791,3652,1.642,3653,0.9,3654,0.9,3655,0.791,3656,0.791,3657,0.587,3658,0.9,3659,1.642,3660,1.642,3661,2.851,3662,0.9,3663,0.9,3664,0.791,3665,0.9,3666,0.9,3667,2.262,3668,1.443,3669,0.9,3670,1.642,3671,1.642,3672,1.642,3673,0.9,3674,0.791,3675,0.791,3676,0.9,3677,0.791,3678,0.9,3679,0.9,3680,1.642,3681,0.9,3682,2.262,3683,0.9,3684,0.9,3685,0.9,3686,0.9,3687,0.9,3688,0.9,3689,0.9,3690,0.9,3691,0.9,3692,0.9,3693,0.791,3694,0.9,3695,0.72,3696,0.9,3697,0.9,3698,0.791,3699,0.9,3700,0.9,3701,0.9,3702,0.9,3703,0.9,3704,0.9,3705,0.9,3706,0.9,3707,0.9,3708,0.9,3709,0.9,3710,0.72,3711,0.791,3712,1.642,3713,1.443,3714,0.9,3715,0.9,3716,0.9,3717,0.9,3718,0.9,3719,0.9,3720,1.642,3721,0.9,3722,0.9,3723,0.791,3724,0.72,3725,0.9,3726,0.9,3727,0.72,3728,0.9,3729,0.9,3730,0.9,3731,0.9]],["title/modules.html",[94,2.277]],["body/modules.html",[25,0.009,55,0.007,56,0.009,57,0.007,93,4.305,94,2.365,122,4.058,127,4.058,270,4.305,273,4.305,274,4.305,275,3.663,276,4.305,882,4.971,1098,4.305,1359,4.305,1363,4.305,2162,5.706,3054,5.113,3732,8.745,3733,8.745,3734,7.837,3735,8.265]],["title/overview.html",[3736,4.785]],["body/overview.html",[2,0.955,25,0.01,55,0.006,56,0.007,57,0.006,92,1.353,93,5.434,94,1.847,95,2.169,96,2.733,97,2.733,98,2.513,99,2.097,100,2.246,101,4.269,102,4.269,103,4.928,104,3.588,105,2.617,106,2.169,121,2.617,122,5.551,123,4.269,124,4.269,125,4.269,126,4.269,127,5.259,128,4.837,129,4.193,136,2.169,270,5.933,271,4.269,272,4.269,273,4.928,274,4.928,275,4.837,276,4.928,452,4.249,507,4.621,549,1.847,553,4.269,554,4.269,555,4.269,877,4.269,878,4.269,879,4.269,988,5.081,1098,5.971,1099,4.269,1100,4.269,1101,4.269,1103,4.405,1356,4.646,1359,5.971,1360,4.269,1361,4.269,1362,4.269,1363,5.685,1416,4.646,1448,4.269,1449,4.269,1450,4.646,1524,3.169,1770,5.097,2036,3.882,3736,3.882,3737,4.857]],["title/todo.html",[215,1.369,1604,2.745,1605,2.745]],["body/todo.html",[0,0.119,5,0.121,11,0.752,16,0.417,25,0.01,26,0.975,32,0.653,47,2.804,48,2.209,49,2.294,51,2.955,52,4.051,55,0.007,56,0.007,57,0.005,65,2.047,92,1.858,100,1.974,106,2.612,119,2.209,133,2.804,138,2.367,152,1.327,154,1.907,155,1.518,164,2.301,169,1.327,193,1.425,206,4.675,209,3.618,210,3.955,215,1.576,216,3.595,217,2.648,230,1.586,241,3.817,278,3.817,284,3.817,288,2.402,289,3.413,292,3.159,332,1.443,335,2.209,400,2.705,405,2.209,416,2.804,418,3.291,452,2.209,458,2.91,476,2.515,477,2.402,496,2.402,523,3.74,549,1.624,559,3.753,561,2.804,568,1.974,572,2.979,581,2.786,600,3.159,602,2.955,629,2.786,632,2.642,662,4.439,663,3.817,701,2.642,702,6.008,708,3.159,723,4.037,739,3.445,740,2.515,775,3.817,802,3.159,857,2.209,858,2.955,873,2.515,891,4.354,895,5.865,907,2.786,909,2.786,910,2.955,922,2.955,926,4.935,927,3.159,946,2.209,974,2.786,1116,3.159,1176,3.159,1327,2.301,1333,3.618,1470,3.159,1474,2.955,1529,2.955,1611,2.955,1615,3.159,1670,3.753,1683,3.753,1712,4.439,1728,5.736,1729,3.159,1734,3.753,1858,2.642,1913,3.159,1973,2.786,1987,3.413,2033,2.515,2069,3.413,2108,3.413,2144,3.413,2162,2.786,2165,3.159,2166,2.955,2172,2.786,2261,4.675,2293,2.955,2351,3.413,2363,3.413,2365,3.413,2467,2.786,2563,2.955,2700,2.955,2731,3.413,2794,3.413,2797,3.159,2972,3.753,2973,3.413,3030,2.642,3041,3.753,3059,3.159,3113,3.159,3116,3.413,3250,2.955,3287,3.753,3331,3.753,3415,3.413,3664,5.142,3710,4.675,3738,3.413,3739,4.27,3740,3.753,3741,3.753,3742,3.159,3743,3.413,3744,4.27,3745,4.27,3746,4.27,3747,5.142,3748,4.27,3749,4.618,3750,4.27,3751,4.27,3752,4.27,3753,3.753,3754,4.27,3755,3.413,3756,4.27,3757,4.27,3758,4.27,3759,4.27,3760,4.27,3761,4.27,3762,4.27,3763,4.27,3764,4.27,3765,2.955,3766,3.753,3767,4.27,3768,4.27,3769,4.27,3770,3.753,3771,3.753,3772,4.27,3773,3.753,3774,4.27,3775,4.27,3776,4.27,3777,4.27,3778,4.27,3779,4.27,3780,5.865,3781,4.27,3782,4.27,3783,4.27,3784,4.27,3785,4.27,3786,4.27,3787,3.753,3788,3.753,3789,4.27,3790,5.85,3791,3.753,3792,4.27]],["title/miscellaneous/typealiases.html",[3004,2.422,3793,5.303]],["body/miscellaneous/typealiases.html",[10,0.531,16,0.553,25,0.009,29,2.289,32,0.893,55,0.007,56,0.008,57,0.007,145,2.726,147,3.314,154,2.607,155,1.179,212,3.201,302,3.809,325,4.434,332,2.734,333,2.9,355,3.566,387,1.179,570,4.318,571,5.368,572,2.607,574,5.728,588,5.728,589,5.728,609,4.961,734,4.04,736,5.728,742,6.199,744,5.728,745,4.04,746,4.961,1134,5.368,1150,4.318,1164,6.3,1219,4.665,1249,4.665,1250,4.665,1315,3.809,1705,5.131,1745,4.665,2827,4.665,2828,5.728,3004,3.809,3407,5.131,3794,5.837,3795,5.837,3796,5.837,3797,7.168,3798,7.168,3799,7.298,3800,5.837,3801,5.131,3802,5.131,3803,5.837,3804,5.837,3805,5.837,3806,3.809,3807,5.837]],["title/miscellaneous/variables.html",[1624,3.67,3004,2.422]],["body/miscellaneous/variables.html",[1,2.315,9,2.315,10,0.213,13,1.423,15,1.724,16,0.539,25,0.011,29,0.919,32,0.714,37,0.586,38,2.517,43,0.208,47,1.794,48,1.212,49,3.383,50,1.622,55,0.004,56,0.004,57,0.003,62,1.45,63,3.141,65,1.123,74,2.159,81,1.652,82,1.107,88,0.618,99,1.012,113,3.048,133,2.239,138,0.948,151,1.263,152,1.811,168,2.06,170,1.73,175,1.046,185,2.204,192,0.979,199,0.919,210,1.862,214,1.38,215,0.865,230,2.325,231,3.165,235,1.123,242,1.936,248,3.455,250,1.529,288,1.318,297,0.948,318,1.45,325,1.45,338,0.891,363,1.263,364,1.38,386,1.263,389,1.936,399,1.046,400,1.083,401,1.046,402,1.046,403,1.046,414,1.873,415,2.768,433,4.302,441,3.233,452,3.374,455,1.733,458,1.862,476,3.141,478,1.936,483,2.016,496,1.318,523,1.862,533,1.622,539,1.73,541,2.105,548,2.59,559,1.318,560,1.212,561,1.794,568,1.083,572,1.046,581,1.529,601,1.733,602,4.689,604,1.873,605,2.991,613,1.733,622,2.991,623,2.06,624,2.991,625,4.967,626,1.873,627,1.873,628,2.06,629,2.442,630,2.991,631,1.622,632,2.89,633,1.45,634,2.991,635,2.06,636,3.289,637,2.06,638,1.873,639,2.06,640,2.06,641,2.06,642,2.06,643,2.06,645,1.873,647,1.873,648,4.659,652,1.873,658,1.529,659,3.289,660,1.733,661,2.06,662,1.45,663,1.529,664,3.289,665,2.517,666,1.873,667,3.289,668,2.06,669,2.991,670,2.06,671,2.06,672,1.733,673,2.991,674,2.06,675,2.06,676,1.873,677,1.873,678,1.873,679,1.733,680,1.873,681,2.06,682,2.06,683,2.06,684,2.06,685,5.124,686,2.991,687,5.124,688,2.06,689,1.873,690,2.06,704,1.873,713,1.622,716,1.733,727,1.45,734,1.622,737,1.529,738,1.622,740,1.38,751,1.38,759,1.622,797,1.622,812,1.873,813,2.06,814,1.733,815,2.06,818,1.873,822,2.06,823,2.06,830,1.873,832,3.692,863,1.45,866,1.318,873,1.38,883,1.873,884,3.233,885,1.873,886,2.991,889,3.289,891,2.442,892,3.289,896,2.768,899,4.659,901,2.991,902,2.06,903,3.289,904,1.733,905,2.768,906,1.873,907,1.529,908,1.873,909,1.529,910,1.622,911,1.733,912,1.873,913,1.622,914,2.06,915,1.733,916,3.289,917,2.06,918,1.38,919,2.06,920,2.06,957,3.233,990,2.768,1021,1.873,1022,2.991,1150,1.733,1159,1.733,1166,2.991,1198,2.991,1211,1.529,1327,1.263,1371,3.048,1381,2.751,1386,1.873,1387,2.59,1506,2.204,1535,1.622,1550,1.873,1562,1.622,1624,1.622,1668,2.06,1677,3.289,1682,3.048,1693,1.733,1712,1.45,1768,2.06,1850,1.529,1915,1.733,2006,1.45,2033,1.38,2075,1.529,2144,1.873,2203,1.873,2211,1.873,2243,2.06,2244,2.59,2256,4.035,2281,3.289,2293,1.622,2327,1.873,2438,2.06,2794,1.873,2804,2.06,2805,2.06,2817,2.06,2818,4.688,2819,3.289,2820,4.106,2822,1.873,2823,3.289,2824,2.991,2825,3.289,2827,1.873,2828,4.263,2829,4.106,2848,2.06,2849,4.106,2850,4.106,2851,4.106,2852,4.106,2854,2.06,2855,3.289,2858,4.688,2906,1.733,3004,1.529,3005,2.59,3006,4.106,3007,5.734,3029,3.945,3250,1.622,3743,1.873,3755,3.734,3765,1.622,3780,2.06,3799,2.06,3801,3.289,3802,4.106,3808,6.523,3809,2.344,3810,2.344,3811,3.742,3812,4.672,3813,2.344,3814,2.344,3815,2.344,3816,2.344,3817,2.344,3818,2.344,3819,3.289,3820,2.344,3821,2.344,3822,2.344,3823,2.06,3824,2.344,3825,2.344,3826,2.344,3827,2.344,3828,2.344,3829,2.06,3830,2.344,3831,2.344,3832,2.344,3833,2.344,3834,2.344,3835,2.991,3836,2.06,3837,2.06,3838,2.06,3839,2.344,3840,1.733,3841,2.344,3842,2.344,3843,3.289,3844,3.742,3845,2.344,3846,2.344,3847,2.344,3848,2.06,3849,2.344,3850,2.344,3851,2.344,3852,2.344,3853,2.344,3854,2.344,3855,2.344,3856,2.344,3857,2.344,3858,2.344,3859,2.344,3860,2.344,3861,2.344,3862,2.344,3863,2.344,3864,2.344,3865,2.344,3866,2.344,3867,2.344,3868,2.344,3869,2.344]],["title/additional-documentation/nestjs-application.html",[247,1.381,478,1.655,495,1.336,1299,1.533]],["body/additional-documentation/nestjs-application.html",[8,1.315,13,2.945,25,0.009,55,0.005,56,0.007,57,0.007,92,1.179,94,1.61,133,2.03,151,2.282,167,2.619,210,3.946,215,1.563,216,3.134,217,2.451,230,1.148,244,2.282,247,3.488,265,2.494,334,1.828,341,2.689,399,2.597,403,2.597,430,2.619,478,4.006,495,1.769,496,2.382,497,3.795,498,3.384,523,2.894,529,1.828,549,1.61,559,2.382,562,3.425,568,1.958,572,2.597,582,2.619,629,4.335,658,2.763,662,4.109,669,3.384,712,2.03,716,3.132,723,2.382,774,3.722,796,3.722,797,4.025,806,2.763,857,3.009,859,2.931,861,3.132,863,2.619,866,2.382,911,3.132,1032,4.025,1112,3.384,1176,3.132,1299,2.787,1387,2.931,1471,2.763,1562,4.949,1682,5.271,1712,2.619,1728,3.384,1731,2.763,1806,3.722,1833,3.384,1858,2.619,1933,2.931,1973,5.176,1987,3.384,2000,3.132,2005,2.382,2006,3.598,2029,5.309,2171,2.931,2172,2.763,2189,4.025,2368,5.112,2475,3.132,2516,5.112,2532,3.722,2563,4.598,2566,5.309,2824,5.309,2906,3.132,3010,3.384,3012,3.384,3014,3.722,3028,4.913,3029,5.29,3030,4.109,3054,2.619,3079,3.384,3234,3.132,3239,3.722,3249,3.722,3250,4.598,3295,3.722,3325,2.931,3396,2.931,3464,2.931,3551,3.722,3558,3.722,3695,3.384,3734,3.722,3753,3.722,3765,2.931,3766,5.839,3770,5.112,3771,5.112,3806,3.795,3819,3.722,3835,4.648,3836,3.722,3837,3.722,3838,3.722,3840,4.913,3870,4.235,3871,3.384,3872,4.235,3873,4.235,3874,5.816,3875,3.384,3876,4.235,3877,6.643,3878,3.722,3879,3.132,3880,4.235,3881,3.722,3882,4.235,3883,4.235,3884,4.235,3885,7.496,3886,4.235,3887,4.235,3888,3.722,3889,4.235,3890,4.235,3891,4.235,3892,4.235,3893,4.235,3894,5.816,3895,4.235,3896,4.235,3897,4.235,3898,4.235,3899,4.235,3900,4.235,3901,4.235,3902,4.235,3903,4.235,3904,4.235,3905,4.235,3906,4.235,3907,4.235,3908,3.132,3909,4.235,3910,4.235,3911,4.235,3912,4.235,3913,5.816,3914,3.722,3915,4.235,3916,5.816,3917,4.235,3918,4.235,3919,4.648,3920,3.722,3921,4.235,3922,4.235,3923,6.643,3924,5.816,3925,4.235,3926,4.235,3927,4.235,3928,3.722,3929,4.235,3930,3.384,3931,3.722,3932,4.235,3933,4.235,3934,4.235,3935,4.235,3936,4.235,3937,4.235]],["title/additional-documentation/nestjs-application/software-architecture.html",[495,1.336,1299,1.533,3080,2.366,3938,2.087]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.578,4,0.086,5,0.083,13,2.556,14,0.642,22,0.518,24,0.626,25,0.005,26,0.365,29,0.487,45,0.946,47,3.222,48,2.092,49,2.291,51,0.86,52,1.584,53,1.818,55,0.003,56,0.003,57,0.001,62,1.355,63,1.29,65,1.699,81,0.265,82,0.61,95,1.806,100,0.574,106,0.978,119,0.642,149,0.978,151,1.584,152,2.014,154,3.319,155,0.594,158,0.81,164,0.669,167,2.193,178,0.993,185,0.731,193,1.174,209,4.522,210,0.618,212,0.555,215,0.458,216,1.18,217,2.555,221,0.86,222,1.918,230,0.337,231,1.085,240,0.669,242,4.27,243,0.81,244,1.91,245,3.486,247,2.947,265,1.731,280,3.174,281,1.751,284,3.147,285,0.919,286,3.677,288,0.699,297,0.502,300,1.62,318,1.818,333,0.886,334,0.946,355,1.09,363,1.584,368,0.768,386,0.669,387,1.138,389,0.642,402,0.555,405,1.133,417,0.919,423,1.29,430,2.762,435,1.232,443,0.81,449,4.168,450,3.348,458,3.397,469,0.86,476,0.731,483,2.909,494,2.84,495,1.228,497,3.677,523,1.462,529,3.063,539,1.639,549,0.833,558,3.823,559,1.653,560,2.494,561,3.68,562,2.382,564,1.429,568,1.639,580,0.642,586,1.818,590,2.174,631,0.86,632,3.615,633,0.768,638,0.993,660,0.919,663,0.81,665,1.91,701,1.355,712,3.719,713,0.86,723,0.699,727,1.355,729,3.795,730,1.232,737,0.81,739,0.731,740,0.731,741,0.81,755,1.516,757,2.983,758,0.919,759,0.86,769,0.86,775,1.918,781,3.568,794,0.768,798,0.919,799,2.193,801,1.994,802,0.919,803,4.315,806,0.81,814,0.919,847,0.919,858,2.034,859,0.86,863,1.355,864,0.768,866,0.699,867,2.622,871,1.62,900,0.81,908,0.993,909,0.81,910,2.799,913,2.034,926,2.992,928,0.86,929,2.992,964,0.731,970,1.926,972,0.768,1130,0.86,1204,0.81,1211,0.81,1240,0.86,1270,0.731,1299,0.595,1327,0.669,1355,0.919,1381,1.29,1391,0.993,1394,0.919,1425,2.193,1429,1.918,1461,2.765,1463,1.926,1464,3.233,1466,0.86,1471,3.147,1472,0.993,1474,0.86,1475,0.919,1491,5.337,1499,2.583,1506,2.629,1526,2.174,1535,0.86,1538,0.86,1539,0.993,1549,0.81,1561,1.62,1572,4.583,1608,1.516,1609,1.751,1615,2.174,1618,2.349,1624,0.86,1625,2.799,1647,1.092,1656,1.092,1659,1.751,1661,1.092,1664,1.092,1702,1.092,1704,2.583,1729,0.919,1731,0.81,1740,0.993,1744,1.092,1745,1.751,1759,0.919,1761,2.088,1802,1.926,1821,6.553,1823,0.919,1828,1.751,1850,1.429,1853,2.034,1858,2.193,1876,1.092,1877,1.092,1882,2.453,1884,5.407,1906,1.092,1914,1.62,1933,0.86,1949,1.926,1973,1.429,1996,1.62,2000,0.919,2005,0.699,2012,2.583,2026,0.993,2032,0.993,2033,3.179,2047,2.992,2055,1.092,2056,2.174,2062,2.622,2066,0.86,2073,3.116,2080,3.09,2081,0.919,2085,1.092,2101,4.487,2104,1.092,2105,1.62,2108,0.993,2110,1.092,2116,1.092,2126,1.751,2131,2.349,2148,4.953,2165,2.174,2166,0.86,2167,0.993,2171,2.034,2172,1.918,2177,3.302,2179,3.302,2189,1.516,2208,0.993,2242,0.993,2249,0.86,2256,0.86,2257,3.555,2258,0.993,2269,1.926,2301,2.583,2305,2.639,2310,0.86,2320,1.926,2326,2.583,2360,1.092,2365,0.993,2370,0.919,2382,2.349,2384,0.993,2410,2.622,2412,0.993,2421,0.993,2467,2.913,2473,0.993,2475,0.919,2513,1.092,2520,1.092,2531,1.926,2553,2.034,2554,3.555,2565,1.926,2575,1.62,2589,1.62,2620,0.993,2654,0.993,2657,0.993,2661,3.116,2662,0.919,2669,2.349,2672,0.993,2685,1.092,2691,1.751,2720,1.092,2731,3.854,2745,1.092,2771,1.092,2781,1.62,2802,1.926,2803,1.926,2991,1.751,3010,2.349,3016,2.034,3019,3.337,3020,2.453,3025,1.751,3027,1.092,3028,0.919,3047,0.919,3054,1.355,3066,1.62,3079,1.751,3080,0.919,3090,1.926,3092,1.092,3095,1.092,3100,1.092,3103,1.092,3106,1.092,3116,0.993,3119,1.092,3130,1.092,3142,1.751,3143,3.302,3146,3.568,3149,1.62,3160,2.622,3173,2.799,3176,1.092,3181,1.092,3182,4.168,3201,0.81,3204,1.092,3206,1.926,3222,0.993,3224,2.583,3228,1.092,3230,1.092,3237,1.092,3238,2.583,3247,1.092,3248,1.092,3261,0.993,3263,1.092,3265,1.751,3267,0.993,3269,1.092,3289,0.919,3296,2.622,3300,1.092,3325,0.86,3326,1.092,3344,1.092,3354,0.993,3358,0.86,3372,1.092,3375,1.092,3380,1.092,3384,1.926,3396,0.86,3398,1.092,3416,1.092,3430,1.926,3431,3.555,3441,1.092,3452,0.993,3461,3.116,3462,1.092,3464,0.86,3466,1.092,3474,0.993,3494,1.092,3498,1.092,3500,1.092,3502,4.315,3505,1.092,3518,1.092,3546,3.924,3576,1.092,3594,1.092,3603,3.854,3626,4.46,3641,0.993,3655,1.092,3656,1.092,3657,3.677,3668,1.092,3698,1.926,3711,1.092,3727,0.993,3736,0.993,3738,1.751,3741,1.092,3742,3.302,3747,1.092,3773,1.926,3791,1.092,3875,0.993,3879,1.62,3908,0.919,3920,1.092,3938,4.849,3939,1.242,3940,1.242,3941,5.136,3942,5.399,3943,2.191,3944,2.939,3945,2.939,3946,4.1,3947,2.191,3948,2.583,3949,4.822,3950,1.242,3951,1.242,3952,2.622,3953,3.116,3954,1.242,3955,1.242,3956,1.242,3957,1.242,3958,1.242,3959,2.191,3960,2.191,3961,1.242,3962,1.242,3963,4.045,3964,1.242,3965,1.242,3966,2.939,3967,2.191,3968,1.242,3969,1.242,3970,1.242,3971,1.242,3972,6.261,3973,1.242,3974,1.242,3975,1.242,3976,1.242,3977,2.191,3978,4.465,3979,1.242,3980,1.242,3981,2.191,3982,2.191,3983,3.545,3984,2.939,3985,3.545,3986,1.242,3987,3.116,3988,3.116,3989,1.242,3990,1.242,3991,1.242,3992,1.242,3993,1.242,3994,1.242,3995,2.833,3996,2.191,3997,0.993,3998,2.583,3999,1.242,4000,1.242,4001,1.242,4002,6.723,4003,1.242,4004,6.244,4005,1.242,4006,1.926,4007,1.242,4008,1.242,4009,2.191,4010,1.092,4011,3.736,4012,5.399,4013,1.242,4014,2.939,4015,1.926,4016,2.191,4017,1.242,4018,1.242,4019,1.242,4020,1.242,4021,1.242,4022,1.242,4023,3.116,4024,2.191,4025,1.242,4026,1.092,4027,1.242,4028,1.242,4029,1.242,4030,1.092,4031,1.242,4032,2.583,4033,1.242,4034,1.242,4035,1.242,4036,1.242,4037,1.242,4038,1.242,4039,1.242,4040,1.092,4041,1.242,4042,2.939,4043,1.242,4044,1.242,4045,1.242,4046,2.833,4047,2.191,4048,1.242,4049,2.191,4050,2.939,4051,1.242,4052,1.242,4053,1.242,4054,1.926,4055,2.191,4056,2.939,4057,1.242,4058,1.242,4059,1.242,4060,1.242,4061,1.242,4062,1.242,4063,1.092,4064,1.242,4065,2.191,4066,1.242,4067,1.62,4068,1.242,4069,5.399,4070,1.242,4071,1.092,4072,0.993,4073,1.242,4074,1.242,4075,1.242,4076,0.919,4077,1.242,4078,1.242,4079,1.242,4080,1.242,4081,1.242,4082,2.191,4083,2.939,4084,1.242,4085,1.242,4086,1.242,4087,1.242,4088,2.191,4089,1.242,4090,1.242,4091,1.242,4092,1.926,4093,1.242,4094,1.242,4095,1.242,4096,2.191,4097,1.242,4098,1.242,4099,2.191,4100,1.242,4101,1.242,4102,1.092,4103,1.242,4104,1.242,4105,1.092,4106,1.242,4107,1.242,4108,2.191,4109,1.242,4110,1.242,4111,1.242,4112,1.242,4113,1.242,4114,1.092,4115,1.242,4116,1.242,4117,1.242,4118,1.092,4119,1.092,4120,2.939,4121,1.242,4122,1.242,4123,1.242,4124,1.242,4125,1.242,4126,1.242,4127,2.191,4128,1.242,4129,1.092,4130,1.242,4131,2.939,4132,1.242,4133,1.242,4134,1.242,4135,2.191,4136,1.242,4137,2.191,4138,1.242,4139,1.242,4140,1.242,4141,1.242,4142,1.242,4143,1.242,4144,1.242,4145,2.191,4146,1.242,4147,1.242,4148,1.242,4149,1.242,4150,1.242,4151,1.242,4152,1.242,4153,1.242,4154,7.244,4155,1.242,4156,1.242,4157,4.045,4158,1.092,4159,1.242,4160,1.242,4161,2.191,4162,1.242,4163,1.242,4164,1.242,4165,1.242,4166,1.242,4167,1.242,4168,1.242,4169,1.092,4170,1.242,4171,1.242,4172,1.242,4173,1.092,4174,1.242,4175,1.242,4176,1.242,4177,1.242,4178,2.191,4179,1.242,4180,1.242,4181,2.349,4182,1.242,4183,1.242,4184,1.092,4185,1.242,4186,1.242,4187,1.242,4188,4.045,4189,1.242,4190,1.242,4191,1.242,4192,1.242,4193,1.242,4194,1.242,4195,1.242,4196,1.242,4197,1.242,4198,1.242,4199,1.242,4200,1.242,4201,1.242,4202,2.191,4203,1.242,4204,1.242,4205,1.242,4206,2.191,4207,1.242,4208,1.242,4209,1.242,4210,2.191,4211,1.242,4212,1.242,4213,1.242,4214,1.242,4215,1.242,4216,1.092,4217,2.191,4218,1.242,4219,2.191,4220,1.242,4221,1.242,4222,1.242,4223,1.092,4224,2.191]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.069,495,1.174,1299,1.347,3938,1.834,4011,1.946]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.201,2,0.44,3,0.106,4,0.087,5,0.205,11,0.798,13,1.372,16,0.257,19,0.735,22,0.773,25,0.01,26,1.11,39,0.224,43,0.272,47,2.918,48,2.343,52,1.943,55,0.006,56,0.004,57,0.003,63,1.318,64,3.39,65,1.073,74,1.447,81,0.965,82,0.748,88,1.503,92,2.218,94,2.745,95,0.999,99,1.557,100,2.815,119,1.866,121,3.07,122,1.46,127,2.956,128,2.124,129,3.059,133,2.73,135,0.591,138,1.459,151,1.206,152,1.77,154,2.32,155,1.293,157,1.557,158,1.46,164,3.706,172,1.114,175,1.611,193,0.545,199,0.878,210,2.254,212,2.719,214,3.059,217,2.979,223,1.655,224,1.789,230,0.607,240,1.943,241,1.46,242,2.687,244,2.441,246,2.231,247,0.966,264,1.549,265,1.318,278,2.956,288,2.029,302,1.46,332,1.531,334,1.557,338,1.723,363,1.943,387,0.452,403,0.999,405,1.158,413,1.46,416,3.069,418,1.259,430,2.231,435,1.259,440,2.802,447,1.655,449,3.351,476,1.318,478,2.947,494,3.355,495,1.893,496,1.259,498,1.789,500,1.655,505,1.789,507,3.425,523,1.794,529,3.175,539,1.035,549,1.372,557,1.384,558,3.45,559,3.205,560,3.15,563,2.956,564,1.46,565,1.46,566,1.46,568,2.402,571,1.549,572,0.999,576,1.318,581,2.353,586,1.384,590,1.655,617,1.967,629,1.46,632,1.384,663,2.956,665,2.799,700,3.62,702,2.883,712,3.296,713,1.549,720,1.655,724,1.549,727,1.384,729,3.351,730,2.029,739,1.318,740,3.586,741,2.956,751,2.124,769,1.549,798,1.655,799,2.231,807,1.655,832,1.549,847,2.668,857,1.158,866,2.548,871,2.668,873,1.318,909,2.353,946,3.446,955,1.655,957,2.496,965,1.46,974,3.717,980,1.655,983,1.549,999,1.967,1000,1.967,1001,1.967,1002,1.967,1003,1.967,1004,1.967,1013,1.789,1032,3.135,1162,1.967,1204,1.46,1270,2.124,1327,1.943,1328,1.789,1333,1.384,1371,1.46,1374,1.073,1381,1.318,1393,1.789,1425,1.384,1461,3.281,1466,1.549,1468,1.789,1470,1.655,1491,4.347,1506,1.318,1529,3.135,1536,1.549,1549,1.46,1593,1.549,1618,1.789,1624,1.549,1625,3.135,1659,4.152,1685,1.967,1712,2.802,1761,2.124,1820,1.967,1853,2.496,1858,1.384,1882,2.496,1884,1.655,1913,1.655,1915,1.655,1916,2.883,2005,2.029,2033,1.318,2062,1.655,2066,1.549,2068,1.789,2074,1.789,2075,2.353,2080,1.549,2081,1.655,2101,1.549,2126,3.62,2137,1.789,2177,1.655,2189,2.496,2194,2.668,2202,1.967,2204,1.967,2244,3.943,2256,2.496,2288,1.967,2295,1.789,2298,1.967,2305,1.46,2310,1.549,2313,1.967,2331,1.967,2332,1.967,2416,1.967,2462,1.967,2467,1.46,2538,1.655,2575,1.655,2596,2.883,2631,1.967,2637,1.789,2657,1.789,2667,1.789,3019,1.549,3022,1.967,3028,3.842,3030,1.384,3039,1.967,3047,1.655,3048,1.967,3054,1.384,3060,1.967,3065,1.967,3066,3.842,3069,1.967,3071,1.967,3102,1.967,3118,1.789,3120,1.967,3149,1.655,3158,3.62,3160,1.655,3173,3.943,3182,1.655,3196,1.967,3201,1.46,3222,1.789,3231,1.967,3232,1.967,3234,1.655,3253,1.967,3261,1.789,3267,1.789,3289,1.655,3296,1.655,3325,2.496,3337,1.967,3358,1.549,3396,1.549,3452,1.789,3464,1.549,3502,2.883,3579,3.982,3616,2.883,3626,2.668,3651,1.967,3657,1.46,3677,1.967,3727,1.789,3742,3.842,3743,3.62,3749,4.76,3755,3.62,3787,3.982,3806,2.956,3823,1.967,3829,1.967,3840,1.655,3843,1.967,3848,1.967,3875,1.789,3881,1.967,3919,2.883,3938,2.956,3941,1.967,3952,1.655,3972,3.62,3988,1.967,4004,6.098,4006,1.967,4010,3.17,4011,3.943,4026,1.967,4030,1.967,4032,1.967,4040,1.967,4046,1.789,4054,1.967,4063,3.17,4067,5.087,4071,3.982,4076,2.668,4102,1.967,4105,3.17,4119,3.982,4129,3.17,4169,3.17,4173,1.967,4181,1.789,4225,1.789,4226,2.238,4227,2.238,4228,4.53,4229,2.238,4230,5.628,4231,3.17,4232,2.238,4233,2.238,4234,3.607,4235,5.195,4236,2.238,4237,2.238,4238,2.238,4239,2.238,4240,2.238,4241,2.238,4242,2.238,4243,3.607,4244,2.238,4245,5.007,4246,2.238,4247,2.238,4248,1.967,4249,3.607,4250,4.53,4251,2.238,4252,2.238,4253,2.238,4254,2.238,4255,2.238,4256,2.238,4257,1.967,4258,3.607,4259,2.238,4260,1.789,4261,2.238,4262,2.238,4263,2.238,4264,2.238,4265,2.238,4266,2.238,4267,2.238,4268,2.238,4269,3.607,4270,3.607,4271,2.238,4272,2.238,4273,3.607,4274,2.238,4275,2.238,4276,2.238,4277,2.238,4278,2.238,4279,2.238,4280,2.238,4281,2.238,4282,2.238,4283,2.238,4284,2.238,4285,2.238,4286,2.238,4287,2.238,4288,2.238,4289,2.238,4290,2.238,4291,2.238,4292,2.238,4293,2.238,4294,2.238,4295,2.238,4296,1.655,4297,2.238,4298,2.238,4299,2.238,4300,2.238,4301,2.238,4302,1.967,4303,2.238,4304,2.238,4305,2.238,4306,2.238,4307,2.238,4308,2.238,4309,2.238,4310,1.967,4311,2.238,4312,2.238,4313,2.238,4314,1.967,4315,2.238,4316,2.238,4317,2.238,4318,2.238,4319,2.238,4320,2.238,4321,2.238,4322,2.238,4323,2.238,4324,1.967,4325,2.238]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[495,1.174,1299,1.347,3749,1.946,3952,2.079,4326,2.471]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,1.947,22,0.41,25,0.01,32,0.541,46,2.825,49,1.386,52,3.244,53,3.167,55,0.004,56,0.006,57,0.004,64,2.307,74,1.426,81,1.091,82,1.369,88,0.933,106,1.578,138,1.43,145,1.947,152,2.48,155,1.034,157,1.526,164,3.935,175,3.128,178,4.092,185,2.082,212,2.286,215,1.304,216,2.759,217,2.984,242,3.897,243,3.928,244,1.905,245,1.989,246,2.187,247,3.153,264,2.447,265,3.015,278,2.307,281,4.092,284,2.307,285,2.615,286,2.307,327,1.829,335,1.829,338,2.289,348,3.341,355,1.759,361,2.454,387,0.714,417,4.453,435,3.713,450,2.307,458,1.759,469,2.447,476,2.082,478,2.649,494,4.543,529,1.526,539,2.367,558,1.905,560,4.067,565,2.307,566,2.307,568,2.367,631,2.447,632,2.187,644,2.447,658,2.307,665,2.759,712,3.357,720,2.615,724,2.447,739,3.015,797,2.447,801,1.989,864,3.724,866,2.88,918,2.082,922,2.447,955,2.615,1211,2.307,1240,2.447,1252,3.107,1284,3.107,1333,2.187,1374,1.694,1391,2.825,1425,2.187,1429,2.307,1461,3.244,1472,2.825,1491,2.307,1498,4.5,1524,2.307,1527,2.615,1549,2.307,1562,2.447,1608,2.447,1611,2.447,1653,5.291,1655,2.615,1682,2.307,1688,3.107,1761,2.082,1858,3.167,1882,4.166,1914,2.615,1916,2.825,1933,2.447,2039,2.825,2047,2.615,2075,2.307,2079,4.092,2137,2.825,2179,2.615,2209,3.107,2249,2.447,2268,4.092,2305,2.307,2310,4.848,2410,2.615,2421,2.825,2553,3.544,2596,4.092,2620,2.825,2637,4.092,2662,2.615,2781,2.615,2917,2.825,3005,2.447,3016,3.544,3019,2.447,3020,3.544,3057,2.825,3059,2.615,3113,2.615,3118,4.092,3143,5.402,3149,2.615,3160,2.615,3173,3.544,3201,2.307,3289,3.787,3358,2.447,3396,3.544,3464,2.447,3603,2.825,3626,2.615,3645,3.107,3657,2.307,3695,2.825,3710,2.825,3723,4.5,3724,2.825,3738,2.825,3749,5.796,3806,2.307,3871,2.825,3908,2.615,3919,2.825,3938,4.306,3948,3.107,3952,3.787,3953,3.107,3995,2.825,3997,2.825,4004,5.181,4046,2.825,4067,2.615,4076,3.787,4118,3.107,4158,3.107,4184,3.107,4225,2.825,4230,4.5,4248,4.5,4296,2.615,4310,3.107,4314,3.107,4326,3.107,4327,3.535,4328,3.535,4329,3.535,4330,3.535,4331,3.535,4332,3.535,4333,3.535,4334,3.535,4335,5.12,4336,3.535,4337,3.535,4338,3.535,4339,3.535,4340,3.535,4341,3.535,4342,3.535,4343,3.535,4344,3.535,4345,3.535,4346,3.535,4347,3.535,4348,3.535,4349,3.535,4350,3.535,4351,3.535,4352,3.535,4353,3.535,4354,3.107,4355,3.535,4356,3.535,4357,3.107,4358,3.535,4359,3.535,4360,3.535,4361,3.535,4362,3.535,4363,3.535,4364,5.12,4365,3.535,4366,3.535,4367,3.535,4368,3.535,4369,3.535,4370,3.535,4371,3.535,4372,3.535,4373,3.535,4374,3.535,4375,3.535,4376,3.535,4377,3.535,4378,3.535,4379,3.535,4380,3.535,4381,3.535,4382,3.535,4383,3.535,4384,3.535,4385,3.535,4386,3.535,4387,3.535,4388,3.535,4389,3.535,4390,3.535,4391,3.535,4392,3.535,4393,3.535,4394,3.535,4395,3.107,4396,3.535,4397,2.825,4398,3.535,4399,3.107,4400,3.535,4401,3.535,4402,3.535,4403,3.535,4404,2.825]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[280,1.739,495,1.174,1299,1.347,3657,1.834,3946,2.247]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.162,13,2.53,14,2.197,15,1.567,16,0.51,19,1.395,21,4.657,25,0.01,26,0.707,29,2.285,32,1.254,39,0.413,43,0.189,46,3.394,47,2.793,48,3.441,49,2.942,53,2.627,55,0.005,56,0.007,57,0.007,62,2.627,63,2.501,65,3.596,92,2.089,119,3.014,135,1.121,138,1.718,151,2.288,167,4.115,207,3.394,210,2.113,212,2.971,214,2.501,217,2.642,230,2.034,240,2.288,242,3.881,243,2.771,244,3.14,245,2.389,247,1.833,264,2.939,275,3.432,278,2.771,280,3.605,284,2.771,286,4.672,292,3.141,387,1.177,423,3.432,451,1.963,452,4.182,458,4.081,466,3.732,475,3.732,476,3.432,477,2.389,478,3.014,480,2.939,489,3.394,490,4.033,494,2.501,495,2.434,496,3.743,529,2.516,561,2.035,563,2.771,632,4.115,633,5.001,662,3.605,666,3.394,712,2.035,730,3.278,775,3.802,780,3.732,781,3.394,783,3.732,787,3.732,789,3.732,790,3.732,799,2.627,801,3.278,857,2.197,858,2.939,860,3.732,863,2.627,871,4.31,873,3.432,1012,4.31,1108,3.732,1259,3.732,1270,2.501,1381,2.501,1461,3.14,1466,2.939,1600,3.394,1672,3.141,1761,2.501,1850,2.771,2005,2.389,2033,2.501,2066,2.939,2177,3.141,2316,3.732,2370,3.141,2524,5.122,3030,2.627,3245,3.732,3371,3.732,3616,3.394,3657,2.771,3661,3.732,3879,3.141,3914,3.732,3946,4.657,4072,3.394,4114,3.732,4231,3.732,4257,3.732,4260,3.394,4296,3.141,4302,3.732,4324,3.732,4404,3.394,4405,4.246,4406,7.16,4407,4.246,4408,7.16,4409,3.732,4410,4.246,4411,4.246,4412,6.653,4413,4.246,4414,4.246,4415,4.246,4416,4.246,4417,5.827,4418,4.246,4419,4.246,4420,4.246,4421,4.246,4422,3.732,4423,4.246,4424,5.827,4425,4.246,4426,4.246,4427,4.246,4428,4.246,4429,4.246,4430,4.246,4431,4.246,4432,4.246,4433,4.246,4434,4.246,4435,4.246,4436,4.246]],["title/additional-documentation/nestjs-application/testing.html",[495,1.55,806,2.422,1299,1.779]],["body/additional-documentation/nestjs-application/testing.html",[0,0.103,2,0.453,13,2.009,16,0.164,22,0.536,24,0.491,25,0.01,37,0.576,39,0.143,47,1.104,49,0.904,55,0.005,56,0.004,57,0.003,62,2.858,63,3.405,74,1.984,81,0.787,82,0.478,92,2.027,94,1.404,95,2.063,99,1.994,106,1.029,119,2.39,121,1.242,128,2.174,138,1.494,139,2.025,140,2.025,146,0.932,149,1.029,151,3.324,152,1.435,154,1.029,155,0.465,156,1.242,162,2.025,164,2.489,175,3.362,200,0.757,210,4.182,212,1.649,216,1.989,217,2.816,221,1.595,223,1.704,230,1.432,241,1.504,242,2.39,244,1.242,246,2.284,247,2.281,265,3.111,275,1.357,282,1.842,330,1.296,332,1.786,361,1.104,370,1.425,389,1.192,401,1.029,405,1.91,416,1.104,449,1.704,450,2.409,455,1.704,458,1.146,478,1.192,483,3.115,490,1.595,494,3.405,496,1.296,523,3.92,529,1.994,536,1.504,541,1.296,557,1.425,558,3.115,560,1.192,561,2.214,568,2.443,580,1.91,586,2.284,600,1.704,633,1.425,644,4.001,662,3.816,663,3.447,665,2.847,701,1.425,703,1.842,709,2.555,712,3.227,724,1.595,739,1.357,754,1.842,755,1.595,799,2.284,801,1.296,806,5.141,857,1.192,861,1.704,864,1.425,865,2.025,867,3.908,873,2.721,884,1.595,896,1.704,898,2.025,899,2.951,904,1.704,905,1.704,906,1.842,907,1.504,911,1.704,922,4.27,925,2.951,928,1.595,946,2.733,950,1.595,951,2.731,955,2.731,964,2.174,986,1.504,988,1.425,1103,2.284,1112,1.842,1114,1.842,1116,2.731,1201,4.001,1204,3.447,1211,2.409,1249,1.842,1250,1.842,1315,1.504,1327,1.242,1359,2.555,1380,2.025,1425,1.425,1461,2.489,1470,1.704,1474,1.595,1491,4.394,1506,1.357,1516,1.704,1524,3.447,1526,1.704,1527,2.731,1529,5.211,1535,4.001,1536,1.595,1539,1.842,1572,2.731,1625,3.656,1655,1.704,1680,3.245,1693,1.704,1694,2.025,1714,2.025,1721,5.081,1731,1.504,1740,1.842,1761,1.357,1767,5.695,1797,2.025,1840,2.025,1850,1.504,1858,2.284,1859,1.842,1880,4.222,1884,1.704,1913,1.704,1933,3.656,2005,4.17,2033,4.287,2047,2.731,2066,4.27,2068,1.842,2074,1.842,2075,1.504,2080,2.555,2101,2.555,2114,2.025,2131,1.842,2166,1.595,2167,1.842,2194,4.563,2221,3.692,2246,1.842,2249,1.595,2256,2.555,2261,1.842,2293,1.595,2310,2.555,2327,3.692,2412,1.842,2453,4.06,2475,1.704,2539,2.731,2553,4.001,2563,2.555,2575,1.704,2582,5.081,2589,2.731,2778,2.025,2906,2.731,2973,1.842,3005,3.656,3016,2.555,3020,1.595,3054,2.284,3057,1.842,3059,1.704,3080,1.704,3101,2.025,3113,1.704,3142,1.842,3143,3.417,3146,1.842,3173,1.595,3182,1.704,3192,2.025,3200,2.025,3201,1.504,3234,2.731,3240,2.025,3265,1.842,3293,2.025,3296,1.704,3325,1.595,3354,1.842,3358,1.595,3363,2.025,3415,1.842,3421,2.025,3432,5.081,3474,1.842,3674,2.025,3675,2.025,3693,4.644,3742,3.417,3749,1.595,3765,1.595,3788,2.025,3806,1.504,3840,4.276,3871,1.842,3878,5.081,3888,2.025,3908,4.793,3972,1.842,3987,2.025,3995,1.842,3998,3.245,4004,5.27,4011,4.27,4015,2.025,4067,3.908,4072,1.842,4076,3.908,4223,3.245,4225,2.951,4245,2.025,4260,1.842,4296,3.908,4354,2.025,4357,2.025,4395,5.081,4399,2.025,4404,1.842,4409,2.025,4422,2.025,4437,3.692,4438,2.304,4439,2.304,4440,2.304,4441,2.304,4442,2.304,4443,2.304,4444,2.304,4445,2.304,4446,2.304,4447,2.304,4448,2.304,4449,3.692,4450,2.304,4451,3.692,4452,2.304,4453,2.304,4454,2.304,4455,3.692,4456,2.304,4457,5.781,4458,2.304,4459,5.781,4460,2.304,4461,4.62,4462,3.692,4463,3.692,4464,2.304,4465,2.304,4466,5.283,4467,2.304,4468,2.304,4469,2.304,4470,2.304,4471,2.304,4472,2.304,4473,2.304,4474,3.692,4475,3.692,4476,3.692,4477,2.304,4478,3.692,4479,3.692,4480,2.304,4481,3.692,4482,3.692,4483,3.692,4484,2.304,4485,2.304,4486,2.304,4487,3.692,4488,2.304,4489,2.304,4490,2.304,4491,2.304,4492,5.283,4493,2.304,4494,2.304,4495,3.692,4496,3.692,4497,2.304,4498,2.304,4499,2.304,4500,2.304,4501,2.304,4502,2.304,4503,2.304,4504,2.304,4505,2.304,4506,2.304,4507,2.304,4508,2.304,4509,2.304,4510,2.304,4511,2.304,4512,2.304,4513,2.304,4514,2.304,4515,2.304,4516,2.304,4517,2.304,4518,2.304,4519,2.304,4520,2.304,4521,2.304,4522,2.304,4523,2.304,4524,2.304,4525,2.304,4526,2.304,4527,2.304,4528,2.304,4529,2.304,4530,2.304,4531,2.304,4532,2.304,4533,2.304,4534,2.304,4535,2.304]],["title/additional-documentation/nestjs-application/decisions.html",[495,1.55,1299,1.779,4397,2.966]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.38,25,0.009,47,2.704,55,0.007,56,0.008,57,0.007,88,1.489,155,1.14,164,3.782,193,1.374,200,1.854,209,3.49,217,2.819,222,3.682,245,3.174,315,3.323,403,3.134,478,2.919,483,3.04,561,2.704,565,4.58,566,3.682,580,2.919,705,3.682,709,3.905,712,2.704,857,2.919,872,4.959,900,4.985,907,3.682,922,3.905,1204,4.58,1270,3.323,1461,3.04,1497,5.609,1506,4.133,1608,3.905,1731,3.682,1828,4.509,1853,3.905,1943,4.959,2000,5.651,2005,3.174,2029,4.509,2033,3.323,2153,4.959,2162,4.985,2181,4.959,2244,3.905,2258,4.509,2305,3.682,2382,5.609,2405,4.959,2467,3.682,2614,4.959,2667,4.509,3201,3.682,3641,4.509,3724,4.509,3879,4.173,3938,3.682,3997,5.609,4011,3.905,4023,4.959,4181,4.509,4216,4.959,4397,5.609,4536,5.642,4537,5.642,4538,5.642,4539,5.642,4540,5.642,4541,5.642,4542,5.642,4543,5.642,4544,5.642,4545,7.019,4546,5.642,4547,5.642,4548,5.642,4549,5.642,4550,5.642,4551,5.642,4552,5.642,4553,5.642,4554,5.642,4555,5.642,4556,5.642,4557,5.642,4558,5.642,4559,5.642]],["title/additional-documentation/nestjs-application/vscode.html",[495,1.55,1299,1.779,3930,2.966]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.21,25,0.009,52,3.999,55,0.007,56,0.009,57,0.007,210,3.692,246,3.824,247,3.204,280,3.824,478,3.839,523,3.076,572,3.314,1130,4.278,1461,3.331,1471,4.034,1506,3.641,1538,4.278,1561,4.572,1655,4.572,1712,4.591,1996,4.572,2005,3.478,2075,4.034,2295,5.931,2636,4.94,3029,4.572,3030,3.824,3031,6.523,3158,4.94,3250,4.278,3360,5.433,3713,6.99,3740,5.433,3765,5.136,3806,4.034,3835,4.94,3928,5.433,3930,5.931,3931,5.433,4560,6.182,4561,6.182,4562,6.182,4563,6.182,4564,6.182,4565,6.182,4566,6.182,4567,6.182,4568,6.182,4569,6.182]],["title/additional-documentation/nestjs-application/git.html",[495,1.55,1299,1.779,3064,2.966]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.008,56,0.009,57,0.008,288,3.803,402,3.018,799,4.181,801,3.803,1371,4.41,1381,3.981,2700,4.678,2797,5.786,3064,6.598,4092,5.941,4570,6.759,4571,6.759,4572,6.759,4573,6.759,4574,6.759]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":918,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2815,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2812,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2813,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1201,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2811,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1297,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{}}}],["100",{"_index":2806,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1879,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2036,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["12.0.0",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1776,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1770,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1765,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1706,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1759,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1861,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3312,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1880,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.0.3",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["2.2.6",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1749,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3076,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2345,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1799,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":1887,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1874,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1811,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1735,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2340,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3761,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1524,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1792,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":3737,"title":{},"body":{"overview.html":{}}}],["3821",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2539,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2861,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3018,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3773,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1693,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2810,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5000",{"_index":1543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["5007",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1694,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1753,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2833,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3391,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3410,"title":{},"body":{"license.html":{}}}],["7",{"_index":1487,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1654,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1701,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8020",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":3889,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1836,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1650,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":1891,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1873,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1696,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1843,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1739,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1725,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1662,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1736,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1666,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1621,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":3897,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1303,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3038,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":429,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":617,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":3906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":192,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1183,"title":{},"body":{"classes/NewsScope.html":{}}}],["a.m",{"_index":3068,"title":{},"body":{"index.html":{}}}],["ability",{"_index":3452,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3066,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3336,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3703,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":240,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3532,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3531,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3753,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":558,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["access_token",{"_index":87,"title":{},"body":{"classes/AuthEntity.html":{}}}],["accessable",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":357,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2242,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2257,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1187,"title":{},"body":{"classes/NewsScope.html":{}}}],["accompanied",{"_index":3376,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3707,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3148,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3335,"title":{},"body":{"license.html":{}}}],["according",{"_index":3698,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":756,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["accountid",{"_index":754,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3275,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3581,"title":{},"body":{"license.html":{}}}],["action",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2636,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3194,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3622,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3603,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3431,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3172,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1381,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["added",{"_index":866,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1656,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":495,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":3886,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1184,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1190,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3656,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3167,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2269,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2012,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1730,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1612,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2116,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1738,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3310,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3458,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3694,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3459,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3074,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3562,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3272,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2532,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3325,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3363,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3731,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3639,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3681,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3590,"title":{},"body":{"license.html":{}}}],["aims",{"_index":3939,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":820,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3794,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":3992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3569,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1655,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1425,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1561,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["along",{"_index":3338,"title":{},"body":{"license.html":{}}}],["already",{"_index":1130,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3131,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3387,"title":{},"body":{"license.html":{}}}],["always",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1745,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":3914,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3533,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3124,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":3988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3298,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3348,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3181,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":3820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":89,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({description",{"_index":1151,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1172,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1170,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1034,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1168,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1165,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":3963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":982,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":996,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1427,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":732,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":292,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":291,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":289,"title":{},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"todo.html":{}}}],["app_pipe",{"_index":290,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3792,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3186,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":3899,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":247,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":595,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3879,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3662,"title":{},"body":{"license.html":{}}}],["apply",{"_index":797,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":3821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":3978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3206,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3330,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3702,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3802,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../create",{"_index":3813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":3815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3798,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3006,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":3809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":3814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3801,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3799,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":3808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../to",{"_index":3008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server",{"_index":3881,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":3922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":3927,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":277,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":485,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":487,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1596,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":474,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":601,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":770,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":550,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":795,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":773,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":784,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":782,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":788,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":779,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":786,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":880,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":853,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":698,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1601,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":812,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts",{"_index":1569,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:5",{"_index":1576,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:8",{"_index":1574,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2827,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts",{"_index":86,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts:5",{"_index":90,"title":{},"body":{"classes/AuthEntity.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":808,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":752,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":824,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":825,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":130,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":137,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":150,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":143,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":499,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":883,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":570,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":556,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":414,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1021,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1150,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1158,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1174,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1152,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1157,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1167,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1169,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1173,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1171,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1163,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1156,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1177,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1154,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1175,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1160,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1346,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1558,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1592,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":948,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":956,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":966,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":969,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":979,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":960,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":322,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":331,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":344,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1532,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":943,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":934,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":936,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":937,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":939,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":940,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":941,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":942,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":938,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":935,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":944,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":933,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":945,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1350,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":734,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1338,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1531,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1577,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1042,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1050,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1048,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1054,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1052,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1339,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1585,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1104,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1181,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1109,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1115,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:14",{"_index":1132,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:25",{"_index":1122,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:40",{"_index":1126,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:45",{"_index":1118,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:49",{"_index":1124,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1219,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1245,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1230,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1226,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1237,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1243,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1236,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1239,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1228,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1232,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1234,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1504,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1512,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1509,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1511,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1513,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1510,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1515,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1514,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1412,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1414,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":298,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":305,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":304,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":310,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":303,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":846,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:11",{"_index":849,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:8",{"_index":850,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1392,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1398,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1396,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1401,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1404,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1408,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1403,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1406,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1407,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1435,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":1437,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1454,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":1456,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:15",{"_index":1458,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1451,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1517,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1522,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1520,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1352,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:10",{"_index":1354,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1364,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/server.service.ts",{"_index":1388,"title":{},"body":{"injectables/ServerService.html":{},"coverage.html":{}}}],["apps/server/src/server.service.ts:5",{"_index":1389,"title":{},"body":{"injectables/ServerService.html":{}}}],["apps/server/src/shared/$1",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1296,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1304,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1307,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1314,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1318,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1321,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1320,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1319,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1317,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/domain/entity",{"_index":3807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":191,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":198,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":229,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":233,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":232,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":236,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":196,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":792,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts",{"_index":239,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts:10",{"_index":252,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:12",{"_index":254,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:14",{"_index":253,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:16",{"_index":251,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:26",{"_index":255,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:34",{"_index":1337,"title":{},"body":{"classes/SampleError.html":{}}}],["apps/server/src/shared/interceptor/duration",{"_index":445,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts",{"_index":1533,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:11",{"_index":1544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:15",{"_index":1542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/pipe/parse",{"_index":1326,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/interface/pagination.interface.ts",{"_index":1295,"title":{},"body":{"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/transformer/to",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/types/counted.ts",{"_index":3803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arc",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3938,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3726,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["aren't",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":611,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":3971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3685,"title":{},"body":{"license.html":{}}}],["around",{"_index":3738,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3600,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3611,"title":{},"body":{"license.html":{}}}],["array",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":527,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["arrays",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3307,"title":{},"body":{"license.html":{}}}],["asking",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":3985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3121,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3551,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3256,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3677,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3706,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3498,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":138,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3713,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3509,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3482,"title":{},"body":{"license.html":{}}}],["aud",{"_index":762,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":761,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":809,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":134,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":500,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":508,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":516,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":518,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":512,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":510,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":514,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":817,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":823,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":822,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":990,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":997,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authenticated",{"_index":759,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2256,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":991,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentication/interface/jwt",{"_index":992,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentity",{"_index":85,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["authguard",{"_index":810,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":811,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":93,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3481,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1526,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":132,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1107,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1247,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":122,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":128,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3474,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3576,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3615,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3487,"title":{},"body":{"license.html":{}}}],["auto",{"_index":3904,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":1678,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2538,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":3054,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["avoiding",{"_index":3955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3098,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2780,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2176,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3238,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1626,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["bad_request",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1332,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1336,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":241,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":562,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":190,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":238,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":237,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":205,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":311,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":313,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":312,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":314,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3265,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":1920,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["become",{"_index":3133,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3144,"title":{},"body":{"license.html":{}}}],["before",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":3900,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3039,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3285,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":282,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1539,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2241,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["believe",{"_index":3609,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":3981,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3293,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3127,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3806,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3710,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["better",{"_index":909,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1625,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3365,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1469,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["bob",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":980,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":750,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{}}}],["boolean.transformer.ts",{"_index":2857,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2308,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":1810,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1677,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brb",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3734,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3732,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":224,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":629,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1490,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":3888,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1647,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3744,"title":{},"body":{"todo.html":{}}}],["business",{"_index":242,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businessexception",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1185,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1192,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1186,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1194,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3078,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2405,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3056,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":450,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":930,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["called",{"_index":2553,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":456,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2047,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2075,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3342,"title":{},"body":{"license.html":{}}}],["case",{"_index":494,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3143,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":604,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":608,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1554,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":3979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1844,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":868,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3513,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":735,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3471,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3524,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1615,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changed",{"_index":859,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1606,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changeme",{"_index":1573,"title":{},"body":{"classes/UserDTO.html":{}}}],["changes",{"_index":1608,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1833,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3449,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3110,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1802,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":139,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":144,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":703,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3049,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3062,"title":{},"body":{"index.html":{}}}],["checks",{"_index":2475,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2545,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["choosing",{"_index":3666,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1856,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3291,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3299,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3705,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3566,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3578,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":552,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":800,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2310,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2261,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3399,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":3923,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":1946,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":245,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":905,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clipboard",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3063,"title":{},"body":{"index.html":{}}}],["close",{"_index":925,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":3701,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3010,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3776,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":2775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2173,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":123,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":126,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":124,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":125,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":271,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":272,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":553,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":554,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":555,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":877,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":878,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":879,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1099,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1100,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1102,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1101,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1360,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1361,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_providers",{"_index":1362,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1448,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1449,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2440,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2453,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":715,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":3967,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3641,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":315,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":306,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1892,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":299,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3651,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1423,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3138,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3349,"title":{},"body":{"license.html":{}}}],["command",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3216,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3434,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2208,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3591,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3061,"title":{},"body":{"index.html":{}}}],["common",{"_index":2917,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3094,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":626,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3357,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3364,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3625,"title":{},"body":{"license.html":{}}}],["compile",{"_index":3878,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3244,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3048,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":871,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["compliance",{"_index":3547,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":3989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3282,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":3916,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1821,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["component(s",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":3972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3189,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1659,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3657,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["conditioned",{"_index":3619,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1527,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1371,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1729,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configurations",{"_index":3929,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":279,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2531,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":927,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1661,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2360,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3535,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3684,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3500,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2032,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":3920,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3329,"title":{},"body":{"license.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constitutes",{"_index":3274,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":592,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1316,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1113,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":142,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":506,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1598,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":267,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["constructor(newsrepo",{"_index":1225,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":301,"title":{},"body":{"classes/Course.html":{}}}],["constructor(private",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":324,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":597,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1519,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":486,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":249,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3629,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3416,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1698,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3626,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":3960,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3044,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3502,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":334,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3588,"title":{},"body":{"license.html":{}}}],["context",{"_index":458,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2028,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3443,"title":{},"body":{"license.html":{}}}],["contract",{"_index":3959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3497,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3635,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3101,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3575,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3577,"title":{},"body":{"license.html":{}}}],["control",{"_index":2672,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3580,"title":{},"body":{"license.html":{}}}],["controller",{"_index":946,"title":{"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":998,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1428,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller.ts",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1055,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1106,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1452,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3209,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["converted",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3195,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3613,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3450,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3203,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3496,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3093,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3087,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2084,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3155,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3089,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3077,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3164,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3288,"title":{},"body":{"license.html":{}}}],["core",{"_index":278,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1377,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/error/dto/error.response",{"_index":257,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/error/interface",{"_index":256,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/logger/logger.module",{"_index":1108,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":466,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":270,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2066,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3679,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2582,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3247,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3385,"title":{},"body":{"license.html":{}}}],["count",{"_index":1006,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1134,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1143,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3567,"title":{},"body":{"license.html":{}}}],["counties",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3193,"title":{},"body":{"license.html":{}}}],["country",{"_index":3605,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":3969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":297,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course.entity",{"_index":851,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1467,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":848,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":321,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1507,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":330,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":318,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1476,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3634,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3700,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3595,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3057,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2006,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3178,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":999,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":954,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1227,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":864,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":225,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":605,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":614,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":634,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":342,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":901,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":924,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":413,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":631,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating",{"_index":417,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":710,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":335,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":348,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3221,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":280,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2326,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3527,"title":{},"body":{"license.html":{}}}],["current",{"_index":1159,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":911,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":957,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1002,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1001,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":496,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3378,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3648,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3382,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":283,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":875,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":3946,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":3986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3355,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3682,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2247,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":712,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":2033,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1382,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":886,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:47",{"_index":890,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:57",{"_index":894,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":885,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1463,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":226,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":470,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1718,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":926,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_url",{"_index":1370,"title":{},"body":{"modules/ServerModule.html":{}}}],["dbs",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dburl",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dd",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1462,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":774,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":778,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":789,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3031,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3311,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3664,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4397,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["declare",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3488,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":722,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":88,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":3940,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3301,"title":{},"body":{"license.html":{}}}],["default",{"_index":230,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1300,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1541,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3676,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3128,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3631,"title":{},"body":{"license.html":{}}}],["define",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":3875,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":223,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3158,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delete",{"_index":950,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":959,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1229,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1117,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":958,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["deletedid",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":1906,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1648,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3455,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3592,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dependecy",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":95,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3871,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":1679,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":584,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3601,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["describe",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["describe('get",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":3980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":3961,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":3952,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3393,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3092,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designing",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":3950,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3655,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1597,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1599,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3021,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":628,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2104,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3425,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":3894,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3012,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developers",{"_index":3117,"title":{},"body":{"license.html":{}}}],["development",{"_index":2166,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3070,"title":{},"body":{"index.html":{}}}],["di",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1365,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3782,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3654,"title":{},"body":{"license.html":{}}}],["different",{"_index":2467,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3479,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3286,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3400,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3182,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1493,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":3750,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3322,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3667,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3476,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":206,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3617,"title":{},"body":{"license.html":{}}}],["display",{"_index":3356,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":336,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1508,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":425,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3205,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2477,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":3882,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguishing",{"_index":3658,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3085,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3717,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3620,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3156,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":3982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3769,"title":{},"body":{"todo.html":{}}}],["docu",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":418,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":1973,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documented",{"_index":1610,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":914,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1422,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3749,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1474,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3427,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3543,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4326,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":416,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1063,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1442,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1082,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1077,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1065,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1444,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1440,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1588,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1059,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1590,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1344,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1086,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1075,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1067,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1069,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1089,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1071,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1073,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1061,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1091,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1084,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1080,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":621,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1009,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":702,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["due",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1402,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1837,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3377,"title":{},"body":{"license.html":{}}}],["duration",{"_index":448,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":444,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2108,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3424,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3257,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":892,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2080,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3177,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3944,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":585,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":354,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3697,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3319,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3302,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3715,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["efforts",{"_index":3560,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3721,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1128,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1116,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":2268,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3373,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3728,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1211,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1198,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":708,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["enabled",{"_index":704,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":718,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enables",{"_index":3197,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":3984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3136,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2194,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2131,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3593,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3324,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":151,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3627,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3347,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3643,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":145,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1114,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1384,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":971,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":442,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":434,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1623,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3756,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2167,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3277,"title":{},"body":{"license.html":{}}}],["err",{"_index":1555,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":780,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":482,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":602,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:115",{"_index":607,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:118",{"_index":612,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:126",{"_index":615,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":551,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":293,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":273,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":263,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["errorresponse(type",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3240,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":3974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2731,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2585,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2346,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1653,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3084,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2068,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3176,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":1572,"title":{},"body":{"classes/UserDTO.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2069,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":476,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":640,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":635,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":637,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":731,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":603,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":639,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":633,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":3958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3414,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1893,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2280,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3585,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3280,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3636,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3233,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2563,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1933,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":3885,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3188,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1535,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":455,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3561,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3320,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1562,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2209,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":764,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expect(data.length).tobe(0",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3432,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2306,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":763,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":821,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":587,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3271,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2313,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3747,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":582,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3669,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3508,"title":{},"body":{"license.html":{}}}],["extend",{"_index":705,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3616,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3360,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3208,"title":{},"body":{"license.html":{}}}],["external",{"_index":1884,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":815,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":337,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":1499,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":728,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3494,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":428,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2148,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitating",{"_index":3649,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3281,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1846,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":1890,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failure",{"_index":3692,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3276,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3419,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3043,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3174,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["favicon",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3429,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":133,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":520,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["feathers/feathers.module",{"_index":131,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":129,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":548,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":623,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2860,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":583,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":127,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":569,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":574,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":507,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":589,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1672,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3042,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3919,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3340,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3933,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1600,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":320,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3746,"title":{},"body":{"todo.html":{}}}],["figure",{"_index":3977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":3907,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1712,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":477,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1022,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1028,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1026,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1033,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1218,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":481,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1188,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1031,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3519,"title":{},"body":{"license.html":{}}}],["find",{"_index":572,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":573,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":951,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":962,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1119,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1220,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1231,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1455,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1457,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1518,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1521,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["finding",{"_index":747,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1110,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1123,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":744,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":952,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":967,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1111,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1125,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1221,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1233,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1383,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1593,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["firstname",{"_index":1578,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3672,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1728,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":3905,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1617,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["fixtures",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1030,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3262,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3028,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2662,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1471,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":3926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3318,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":3822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":725,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2145,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2691,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":490,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2368,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3368,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":887,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":888,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1387,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3081,"title":{},"body":{"license.html":{}}}],["framework",{"_index":3942,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3079,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3099,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3305,"title":{},"body":{"license.html":{}}}],["full",{"_index":1731,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":281,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":3987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3444,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3005,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3396,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":356,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":3924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1741,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2179,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["generalerror",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3254,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2077,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["generated",{"_index":3918,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":968,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1413,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":578,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":140,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":1353,"title":{},"body":{"controllers/ServerController.html":{},"injectables/ServerService.html":{}}}],["getnewspermissions",{"_index":1222,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1235,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":141,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":501,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":509,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getpermittedtargets",{"_index":502,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["getpermittedtargets(userid",{"_index":511,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1196,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1223,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1238,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["getservice",{"_index":596,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":593,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1224,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1241,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getting",{"_index":1604,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":503,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":513,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getuserschoolpermissions",{"_index":504,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":515,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getusertargetpermissions",{"_index":505,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":517,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3064,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3874,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1536,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":557,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3343,"title":{},"body":{"license.html":{}}}],["global",{"_index":288,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalerrorfilter",{"_index":480,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":796,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["globals",{"_index":1550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":697,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3073,"title":{},"body":{"license.html":{}}}],["go",{"_index":3027,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3059,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3468,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3150,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3489,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3266,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3538,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3735,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3395,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3709,"title":{},"body":{"license.html":{}}}],["group",{"_index":1492,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1473,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1215,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1496,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1013,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guidelines",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1560,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1466,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":243,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2365,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handling",{"_index":284,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":3970,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":3993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":182,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3279,"title":{},"body":{"license.html":{}}}],["header",{"_index":818,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3135,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hello",{"_index":1390,"title":{},"body":{"injectables/ServerService.html":{}}}],["help",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":627,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":2202,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3582,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":847,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":3957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":3966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["hints",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["history.git",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3515,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3475,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1851,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1465,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1393,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1395,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1410,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1482,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":3973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2073,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2249,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":3718,"title":{},"body":{"license.html":{}}}],["host",{"_index":610,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3402,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3770,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3420,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2171,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":346,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3083,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3015,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3720,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":248,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/mikro",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3775,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":3935,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":3936,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":3934,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":3752,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":258,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.not_implemented",{"_index":269,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["hub",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":765,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":733,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":751,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":193,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1328,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1330,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3797,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3607,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":489,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identity",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":250,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2438,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":772,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":567,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":3996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":858,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":265,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2177,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":467,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3630,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":590,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["importer",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3573,"title":{},"body":{"license.html":{}}}],["imports",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3499,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3633,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1210,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3129,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3686,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3689,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3082,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3683,"title":{},"body":{"license.html":{}}}],["include",{"_index":204,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3235,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3192,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2246,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3367,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":711,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3134,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3650,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3423,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1772,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3495,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3358,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3743,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1683,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3541,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3506,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1859,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3170,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3435,"title":{},"body":{"license.html":{}}}],["inewsproperties",{"_index":381,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":748,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":323,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1580,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":326,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1057,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1340,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1342,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1178,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1347,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1349,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1595,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1348,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3407,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":497,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3539,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3570,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3185,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1667,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":865,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3564,"title":{},"body":{"license.html":{}}}],["inject",{"_index":581,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":921,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":923,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":135,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":136,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"overview.html":{}}}],["injected",{"_index":563,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":861,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":799,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":246,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["install",{"_index":3249,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3439,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3453,"title":{},"body":{"license.html":{}}}],["instance",{"_index":709,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":625,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2778,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":1858,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3022,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3332,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1721,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3102,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3323,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3723,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3645,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3200,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3204,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":453,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":454,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":447,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":296,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":274,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3379,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3557,"title":{},"body":{"license.html":{}}}],["interface",{"_index":387,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"interfaces/User.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":549,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"interfaces/User.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3445,"title":{},"body":{"license.html":{}}}],["internal",{"_index":363,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":616,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3696,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3246,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3260,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":564,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2657,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2620,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3870,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3739,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3353,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":791,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1366,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3268,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1035,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":624,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":438,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":421,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1737,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":622,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1036,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1041,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1308,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1305,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1298,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1037,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1038,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@toboolean()@apipropertyoptional({description",{"_index":1029,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1565,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1023,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1564,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1027,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1272,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":767,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":439,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":419,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":432,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":427,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":766,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2029,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":630,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":876,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["it('should",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3219,"title":{},"body":{"license.html":{}}}],["items",{"_index":1705,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3456,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":746,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3765,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3036,"title":{},"body":{"index.html":{}}}],["job",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2554,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":1575,"title":{},"body":{"classes/UserDTO.html":{}}}],["join",{"_index":1943,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2906,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2144,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":768,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":807,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":113,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":813,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":760,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":103,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1611,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":3883,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3241,"title":{},"body":{"license.html":{}}}],["key",{"_index":1279,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keys",{"_index":3441,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3196,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3090,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3116,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3597,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3604,"title":{},"body":{"license.html":{}}}],["known",{"_index":1916,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["knows",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3046,"title":{},"body":{"index.html":{}}}],["language",{"_index":2473,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3361,"title":{},"body":{"license.html":{}}}],["last",{"_index":1594,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1579,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3661,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":3928,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3187,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3161,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3568,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":3964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3742,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["ldap/:id",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2421,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3725,"title":{},"body":{"license.html":{}}}],["lean",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":3789,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1534,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":559,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3779,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3123,"title":{},"body":{"license.html":{}}}],["legend",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lern",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2720,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":845,"title":{"classes/Lesson.html":{}},"body":{"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":1409,"title":{},"body":{"classes/Task.html":{}}}],["lessonid",{"_index":1405,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":852,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1478,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3140,"title":{},"body":{"license.html":{}}}],["level",{"_index":2575,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3478,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3184,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3232,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3415,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3072,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3165,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3166,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3168,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3096,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3542,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3486,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3536,"title":{},"body":{"license.html":{}}}],["limit",{"_index":793,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3680,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3670,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3477,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1823,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3258,"title":{},"body":{"license.html":{}}}],["links",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3766,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":325,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3565,"title":{},"body":{"license.html":{}}}],["living",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3754,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1722,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3013,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2204,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":618,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":775,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":783,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3767,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":452,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":606,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":460,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":855,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":881,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":294,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":620,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":275,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":286,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":446,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":461,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":457,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1491,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1472,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2462,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3741,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3047,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2476,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3687,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3690,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":3968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1216,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3370,"title":{},"body":{"license.html":{}}}],["made",{"_index":3130,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2429,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":3760,"title":{},"body":{"todo.html":{}}}],["mainly",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2384,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2301,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2565,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3237,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":929,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3296,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1563,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":1828,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3745,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3583,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2105,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":316,"title":{},"body":{"classes/Course.html":{}}}],["manytomany({fieldname",{"_index":307,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":343,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":347,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1853,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1043,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1047,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1044,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1049,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":995,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1420,"title":{},"body":{"controllers/TaskController.html":{}}}],["mapping",{"_index":4011,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1045,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1051,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1341,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1436,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1586,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1046,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1053,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3628,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3484,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3493,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3163,"title":{},"body":{"license.html":{}}}],["master",{"_index":2026,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":498,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3283,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3457,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1657,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1664,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1309,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1313,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1302,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maybe",{"_index":908,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3772,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3501,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3067,"title":{},"body":{"index.html":{}}}],["means",{"_index":3160,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3304,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3315,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3328,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3341,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3220,"title":{},"body":{"license.html":{}}}],["member",{"_index":524,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["members",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":884,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3217,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3671,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3199,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3071,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1806,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3553,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1665,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3270,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":2973,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":586,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2124,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2416,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2685,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["migrations",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["mikro",{"_index":200,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":895,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3764,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":916,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":919,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":920,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":896,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forroot",{"_index":1380,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":902,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":917,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":889,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":1310,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1311,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1312,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1301,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3004,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3483,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1768,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1209,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2211,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocked",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2566,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":435,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1284,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3157,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3223,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2706,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3346,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3125,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3190,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":3873,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":92,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":898,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":94,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1367,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1373,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1378,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1379,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1368,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1376,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1372,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":907,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":904,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongod.geturi",{"_index":906,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongod.stop",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongodb",{"_index":900,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":882,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{}}}],["mongomemoryserver",{"_index":899,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongoose",{"_index":1333,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1761,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3525,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1468,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":1537,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["msg",{"_index":636,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2520,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":729,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["named",{"_index":3065,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["names",{"_index":974,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["naming",{"_index":3787,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["nanoid",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3359,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1495,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2410,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3019,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3248,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1464,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nest",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":3778,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":3877,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":3884,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":3887,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":3917,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":3902,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":3903,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":3876,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":3890,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":3895,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":3892,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":3898,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":3915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":3910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":3912,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":3909,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2614,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":462,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":478,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":3925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":479,"title":{},"body":{"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing.test",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":854,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3095,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":332,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1064,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1083,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1256,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1066,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1060,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":415,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1567,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":437,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":420,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":426,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1566,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":436,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":431,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1087,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1068,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1070,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1276,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1072,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1074,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1062,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1085,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1079,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Submission.html":{},"interfaces/User.html":{}}}],["news:10",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":371,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":345,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":350,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":358,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":349,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":359,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1281,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_create",{"_index":1255,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1250,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1166,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1180,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1249,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":947,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1263,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":963,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":961,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1005,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1269,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1010,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1266,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":994,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1003,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1008,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1004,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1098,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1103,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":993,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1136,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstarget",{"_index":736,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1120,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":407,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":147,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":988,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1274,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1261,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":471,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1494,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2794,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3011,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2165,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3389,"title":{},"body":{"license.html":{}}}],["none",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1289,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":1914,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3418,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":203,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":519,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{},"interfaces/User.html":{}}}],["notfoundexception(`the",{"_index":1385,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3537,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3211,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3207,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3526,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3522,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3472,"title":{},"body":{"license.html":{}}}],["november",{"_index":3075,"title":{},"body":{"license.html":{}}}],["now",{"_index":469,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":473,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3029,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3660,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2258,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3017,"title":{},"body":{"index.html":{}}}],["o",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2229,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":1976,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1147,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1327,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":319,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1280,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":441,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":194,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{}}}],["objects",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":3640,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3404,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3306,"title":{},"body":{"license.html":{}}}],["observable",{"_index":459,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3388,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":638,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3534,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2039,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1500,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["offer",{"_index":3122,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3409,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3392,"title":{},"body":{"license.html":{}}}],["official",{"_index":3225,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1501,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["old",{"_index":1877,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1523,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["once",{"_index":3947,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1270,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1485,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1486,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":893,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":227,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":2244,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":3896,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3693,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3397,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3242,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2762,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2055,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3145,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3647,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1670,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":915,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":891,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1475,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["orderby",{"_index":1502,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3549,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3171,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":3949,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":1942,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2709,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":922,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":3937,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":201,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":202,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":897,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3026,"title":{},"body":{"index.html":{}}}],["others",{"_index":724,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":913,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2370,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3289,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["over",{"_index":2382,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2327,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":475,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":287,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3736,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1840,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3579,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":3990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1162,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2363,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3352,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3236,"title":{},"body":{"license.html":{}}}],["page",{"_index":1299,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1306,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["paginate",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["pagination",{"_index":964,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationmodel",{"_index":1121,"title":{"interfaces/PaginationModel.html":{}},"body":{"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["paginationquery",{"_index":965,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":986,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1011,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1434,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3722,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3512,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3589,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1797,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1633,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1015,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1012,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":576,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1094,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1095,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1253,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1097,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1096,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1093,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1689,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2085,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2288,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":983,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3173,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":302,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1559,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3229,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3198,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3263,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party",{"_index":3398,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3555,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":720,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1424,"title":{},"body":{"controllers/TaskController.html":{}}}],["passport",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":1570,"title":{},"body":{"classes/UserDTO.html":{},"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":351,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":981,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":978,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3511,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3574,"title":{},"body":{"license.html":{}}}],["path",{"_index":600,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2243,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":443,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["payload",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{}}}],["payload.ts",{"_index":753,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payment",{"_index":3621,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3405,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3408,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3060,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["performance",{"_index":1773,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3255,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3521,"title":{},"body":{"license.html":{}}}],["permission",{"_index":355,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1294,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":149,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1293,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3334,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3366,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3139,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1528,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3448,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2137,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2637,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1702,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["personal",{"_index":1660,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3638,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3374,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3386,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3114,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1688,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":700,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1602,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1331,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3394,"title":{},"body":{"license.html":{}}}],["plain",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3559,"title":{},"body":{"license.html":{}}}],["point",{"_index":422,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3716,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2631,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2100,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1497,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":975,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3412,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3383,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3350,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3695,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2056,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["post",{"_index":955,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3758,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3317,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3034,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3097,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3594,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices/layers/orm",{"_index":3763,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3088,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3154,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3556,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3222,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":949,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["preload",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":869,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2203,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3215,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3480,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2239,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3558,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3109,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3623,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":195,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":3948,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3523,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1663,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":451,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["problems",{"_index":1996,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3024,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3440,"title":{},"body":{"license.html":{}}}],["process",{"_index":2412,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3612,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3245,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3375,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":1987,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3624,"title":{},"body":{"license.html":{}}}],["program",{"_index":3104,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3327,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3729,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3230,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3115,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3708,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3287,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3313,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3618,"title":{},"body":{"license.html":{}}}],["project",{"_index":1609,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2123,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3218,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3210,"title":{},"body":{"license.html":{}}}],["promise",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise.all",{"_index":1265,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promisify",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3180,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3540,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3191,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":199,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":234,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":327,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1582,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1584,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":329,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3118,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1540,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3297,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3339,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":3941,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3461,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3675,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":483,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":873,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":867,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":285,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3473,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3517,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3663,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3665,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1355,"title":{},"body":{"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3485,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3147,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3331,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1032,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1141,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["pull",{"_index":2206,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3252,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3610,"title":{},"body":{"license.html":{}}}],["put",{"_index":739,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":1889,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2185,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3530,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1204,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1208,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1090,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1088,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1092,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1459,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1503,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["querys",{"_index":1426,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":972,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["readable",{"_index":3371,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3599,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3464,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reason",{"_index":3608,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3384,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3528,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3112,"title":{},"body":{"license.html":{}}}],["received",{"_index":3354,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3544,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3614,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3447,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3606,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3169,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3226,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":588,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3712,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1744,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2110,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":3956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1714,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":368,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":2667,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3108,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3159,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2972,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3642,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3469,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3351,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3264,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2281,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3516,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":430,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2000,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3290,"title":{},"body":{"license.html":{}}}],["release",{"_index":1680,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3151,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3141,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3344,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3152,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3771,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3598,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3403,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3106,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3644,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3646,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3470,"title":{},"body":{"license.html":{}}}],["remove",{"_index":723,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3688,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1978,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1876,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1913,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["repo",{"_index":1529,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1248,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1105,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1453,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2516,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":3911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["repositories",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3437,"title":{},"body":{"license.html":{}}}],["req",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":561,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["requested",{"_index":1386,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":803,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":1915,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":816,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('./tsconfig.json",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":727,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1273,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3345,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3016,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":716,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3175,"title":{},"body":{"license.html":{}}}],["reset",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3428,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1127,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3321,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3783,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":3983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3546,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1668,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":3880,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3784,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":449,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1277,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3314,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3503,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2625,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3137,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3451,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":970,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1505,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":3954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3050,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3699,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3652,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2791,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3119,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3673,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2320,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":758,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":755,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["rollback",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3454,"title":{},"body":{"license.html":{}}}],["room",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":533,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1734,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["routes.test.js",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3563,"title":{},"body":{"license.html":{}}}],["rss",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1882,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1682,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["runner",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1538,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3243,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":463,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":465,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3714,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3572,"title":{},"body":{"license.html":{}}}],["same",{"_index":2305,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":525,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["sample",{"_index":264,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sample_error",{"_index":268,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["samplecontroller",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleerror",{"_index":266,"title":{"classes/SampleError.html":{}},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["samples",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleservice",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1919,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3751,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1112,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1131,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3401,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1620,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2596,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1685,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["school",{"_index":338,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1852,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":361,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":360,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1343,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1345,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1056,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1076,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1161,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":411,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":737,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":424,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2172,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":2153,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":580,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1138,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1139,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":591,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1142,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1286,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":856,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1182,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1193,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1195,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1191,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1189,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1197,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1283,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1260,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":534,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["scopes",{"_index":973,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1643,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3250,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1740,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3183,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3126,"title":{},"body":{"license.html":{}}}],["secret",{"_index":814,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3295,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3369,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1618,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":3774,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3757,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2803,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3587,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3571,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3162,"title":{},"body":{"license.html":{}}}],["send",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":493,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["sentry",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["sentry/node",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3411,"title":{},"body":{"license.html":{}}}],["separate",{"_index":863,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3041,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2081,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":3953,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["serialization",{"_index":3748,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2181,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":197,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3014,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":857,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1369,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.service",{"_index":1357,"title":{},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3777,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1351,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1359,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":2718,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serverservice",{"_index":1356,"title":{"injectables/ServerService.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"coverage.html":{},"overview.html":{}}}],["serves",{"_index":3239,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":529,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":537,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.findallforuser(userid",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":532,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.provider",{"_index":521,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/User.html":{}}}],["service.provider.ts",{"_index":571,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":579,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":575,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":598,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":599,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":560,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3678,"title":{},"body":{"license.html":{}}}],["session",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":801,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":874,"title":{},"body":{"injectables/Logger.html":{}}}],["sets",{"_index":2114,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setting",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2295,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["setup",{"_index":701,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["shall",{"_index":3300,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3100,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":740,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/controller",{"_index":985,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1415,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":987,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/core",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":169,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/error/api",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{}}}],["shared/error/business.error",{"_index":619,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["shared/interceptor/timeout.interceptor",{"_index":805,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["shared/pipe",{"_index":984,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/pipes",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1199,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TaskRepo.html":{}}}],["shared/repo/interface/pagination.interface",{"_index":1133,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/transformer",{"_index":1040,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/types",{"_index":1135,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/utils",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":1949,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3730,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3438,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3025,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplicity",{"_index":3791,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simulates",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3637,"title":{},"body":{"license.html":{}}}],["single",{"_index":730,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":794,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":726,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":3781,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2771,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3080,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3422,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3278,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3292,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3727,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1140,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":339,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3893,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1164,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":3965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3381,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3107,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3819,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3462,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3091,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2126,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3228,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3659,"title":{},"body":{"license.html":{}}}],["specify",{"_index":912,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":1849,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3653,"title":{},"body":{"license.html":{}}}],["split",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/logger/logger.service",{"_index":1246,"title":{},"body":{"injectables/NewsUc.html":{}}}],["stabilisation",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":3962,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3224,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3227,"title":{},"body":{"license.html":{}}}],["start",{"_index":3030,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1605,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":3891,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2316,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2221,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3269,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3505,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["states",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":341,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":3901,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3333,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1516,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":3991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1498,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3120,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["still",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":928,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":1896,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1704,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":2828,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":3817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":3951,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/AuthEntity.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":870,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["strip",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":565,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["structures",{"_index":872,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1394,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["student_create",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1397,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":300,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3033,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3069,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":3976,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":769,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3552,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3545,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3584,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3294,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1375,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1484,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1400,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1480,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1483,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3259,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3390,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3433,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3550,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["succesful",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2524,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3142,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3596,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3442,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3790,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3740,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3465,"title":{},"body":{"license.html":{}}}],["support",{"_index":2162,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3872,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2707,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3105,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3632,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3504,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3691,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3733,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1421,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["symmetric",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1278,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2101,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2661,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":609,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["t[keyof",{"_index":743,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["tab",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1817,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":317,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2074,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3417,"title":{},"body":{"license.html":{}}}],["tap",{"_index":464,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":333,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["target.targetids",{"_index":1207,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1291,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1205,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1206,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":433,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":148,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetids",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetmodel",{"_index":146,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1242,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1287,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":531,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["targets",{"_index":536,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1290,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{},"interfaces/User.html":{}}}],["task",{"_index":1374,"title":{"classes/Task.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course?.color",{"_index":1445,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1443,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1446,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1441,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1399,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1438,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1439,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1447,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskcontroller",{"_index":1411,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmapper",{"_index":1419,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1433,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodel",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1363,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1450,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1418,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["tasks",{"_index":1429,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1432,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskschema",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1431,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":1416,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2802,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":385,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":412,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":738,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["teardown",{"_index":3759,"title":{},"body":{"todo.html":{}}}],["tech",{"_index":3932,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":632,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":3994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3303,"title":{},"body":{"license.html":{}}}],["technology",{"_index":3943,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":3921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["tells",{"_index":3212,"title":{},"body":{"license.html":{}}}],["template",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3267,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3510,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3529,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3520,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3507,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2079,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":523,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["test/...*.e2e",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3052,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tested",{"_index":3908,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":806,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1820,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3146,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2373,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["third",{"_index":3326,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1202,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1200,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1217,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1203,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery",{"_index":1214,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1212,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1213,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1275,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1254,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1288,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.code",{"_index":259,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.content",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1322,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(course",{"_index":1477,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1479,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1481,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1489,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1148,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1145,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1137,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1149,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1146,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":530,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":535,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1144,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1581,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1267,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1262,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1285,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":522,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.lastname",{"_index":1583,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.limit",{"_index":1325,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1252,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1258,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1268,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1259,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1251,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":468,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":472,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":262,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.mongod.stop",{"_index":932,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":328,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1282,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1264,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1271,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1257,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1000,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1007,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":931,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.request.app",{"_index":594,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.serverservice.gethello",{"_index":1358,"title":{},"body":{"controllers/ServerController.html":{}}}],["this.skip",{"_index":1324,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1530,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1430,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":261,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1323,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":260,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validationerrors",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2781,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3467,"title":{},"body":{"license.html":{}}}],["thr",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2512,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["through",{"_index":3201,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1557,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1556,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3284,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3035,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3037,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":423,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":802,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(timeoutinterceptor.defaulttimeout",{"_index":1553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":804,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutms",{"_index":1551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2513,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1153,"title":{},"body":{"classes/NewsResponse.html":{}}}],["tiny",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toboolean",{"_index":1039,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["todo",{"_index":215,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1025,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["toggle",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1651,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3253,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1315,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":781,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3491,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3490,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3492,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2062,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3202,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3446,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3548,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":713,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1329,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":717,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":714,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":860,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3406,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3466,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3309,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2745,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3755,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2669,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typ",{"_index":819,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":771,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3793,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1179,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":741,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.objectid.isvalid(value",{"_index":1335,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.ts",{"_index":2818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1014,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":403,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3430,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":566,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1470,"title":{},"body":{"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":989,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1417,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":2991,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":488,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":235,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3153,"title":{},"body":{"license.html":{}}}],["understand",{"_index":3945,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unhandled",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":3975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":492,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{}}}],["unit",{"_index":2005,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3055,"title":{},"body":{"index.html":{}}}],["universal",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3436,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3273,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3179,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2765,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3463,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":749,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1619,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3518,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1850,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":953,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1244,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":976,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1176,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":228,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":977,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":340,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":372,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":745,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1129,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":491,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":2293,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":1834,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2331,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":484,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1461,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usefactory",{"_index":903,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":3719,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":3818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":152,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserDTO.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":528,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.repo.ts",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.equals(schoolid",{"_index":526,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.schoolid.tostring",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.test.js",{"_index":3053,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user/class",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userdto",{"_index":1568,"title":{"classes/UserDTO.html":{}},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["userid",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":538,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["userids",{"_index":308,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":309,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1589,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1587,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1591,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1058,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1078,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1081,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1155,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":1571,"title":{},"body":{"classes/UserDTO.html":{},"changelog.html":{}}}],["userrepo",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":757,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/UserInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1488,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2589,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":568,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["util",{"_index":2332,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2298,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2742,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v2",{"_index":1649,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3780,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3785,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":721,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":798,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":826,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1603,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":699,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":707,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":295,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":276,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":706,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":440,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1334,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":231,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":742,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1743,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":2654,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1624,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3086,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":776,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":785,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":790,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":1767,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1814,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1614,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3103,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":3995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1506,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1240,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":353,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3460,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3514,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3762,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":352,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3032,"title":{},"body":{"index.html":{}}}],["void",{"_index":613,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3362,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1875,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3788,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":3930,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3786,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":3931,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3316,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3704,"title":{},"body":{"license.html":{}}}],["want",{"_index":3113,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":777,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":787,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1460,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3214,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3213,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3768,"title":{},"body":{"todo.html":{}}}],["way",{"_index":910,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3372,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3724,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1525,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3020,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3554,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":862,"title":{},"body":{"injectables/Logger.html":{}}}],["whether",{"_index":3426,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":719,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3234,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3413,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3231,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["widespread",{"_index":3132,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2351,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2797,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2263,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3045,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3308,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3058,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3111,"title":{},"body":{"license.html":{}}}],["within",{"_index":244,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2189,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3040,"title":{},"body":{"index.html":{}}}],["work",{"_index":222,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3251,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2700,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["works",{"_index":1024,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":1391,"title":{},"body":{"injectables/ServerService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3586,"title":{},"body":{"license.html":{}}}],["wraps",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writeerrorlog",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3668,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3023,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3380,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":577,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3051,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3602,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '../../../shared/error/api-validation.error';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/entity/auth.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/entity/auth.entity.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthEntity {\n\t@ApiProperty()\n\taccess_token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants)],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '../../core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.equals(schoolId);\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:115\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError } from '@shared/error/business.error';\nimport { ApiValidationError } from '@shared/error/api-validation.error';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '../../../shared/error/api-validation.error';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '../../shared/interceptor/timeout.interceptor';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tvalidate(payload: JwtPayload): JwtPayload {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MikroOrmModuleSyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            MikroOrmModuleSyncOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MikroOrmModuleSyncOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@ToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { ToBoolean } from '@shared/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@ToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:25\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:40\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationModel } from '@shared/repo/interface/pagination.interface';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: PaginationModel = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: PaginationModel): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationModel.html":{"url":"interfaces/PaginationModel.html","title":"interface - PaginationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationModel {\n\treadonly skip?: number;\n\treadonly limit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { Types } from 'mongoose';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = Types.ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleError.html":{"url":"classes/SampleError.html","title":"class - SampleError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                sample business error implementation\n\n            \n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:10\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ServerService } from './server.service';\n\n@Controller()\nexport class ServerController {\n\tconstructor(private readonly serverService: ServerService) {}\n\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn this.serverService.getHello();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { ServerController } from './server.controller';\nimport { ServerService } from './server.service';\nimport { DB_URL } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tNewsModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n\tproviders: [ServerService],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerService.html":{"url":"injectables/ServerService.html","title":"injectable - ServerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ServerService {\n\tgetHello(): string {\n\t\treturn 'Hello World!';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\n\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { PaginationModel } from '@shared/repo';\nimport { Counted } from '@shared/types';\nimport { Task, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: PaginationModel = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task } from '../entity';\n\n// filter tasks older than 3 weeks\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                    Readonly\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                                Readonly\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static readonly defaultTimeout = 5000; // todo take from globals\n\n\t// constructor(private readonly timeoutMs: number = 5000) {}\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(TimeoutInterceptor.defaultTimeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        permissions\n                                \n                                \n                                        schoolId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.equals(schoolId);\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of a user', example: 'changeme'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'username of a user', example: 'john'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDTO {\n\t@ApiProperty({ description: 'username of a user', example: 'john' })\n\tusername: string;\n\n\t@ApiProperty({ description: 'password of a user', example: 'changeme' })\n\tpassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n26.2.2 - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n26.2.1 - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n26.2.0 - 2021-06-01\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/entity/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.service.ts\n            \n            injectable\n            ServerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            SampleError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/interface/pagination.interface.ts\n            \n            interface\n            PaginationModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/transformer/to-boolean.transformer.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.7.0\n        \n            arg : ^5.0.0\n        \n            async : ^3.2.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^6.0.1\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            ToBoolean   (apps/.../to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/transformer/to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nToBoolean()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PropertyDecorator\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\n\nACCEPTED\n\ncheck build & start for production with ops\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../news.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../main.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../main.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../main.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -5,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process. \nIt improves the code quality and ensure that the code operates correctly especially after refactoring. \n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer. \nThey prove that the database queries are executed correctly. \nUse case tests operate on logic layer. \nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application. \nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks \nthe expected status codes and the structure of the received objects.\n\nTesting Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing. \nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests. \n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state. \n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries. \nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function. \nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nDefine MongoMemoryServer\nCreate Nest JS testing module: \n2.1 with MikroOrmModule defining entities which are used in tests.\n2.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    beforeAll(async () => {\n        mongod = new MongoMemoryServer();                               (1)\n        const dbUrl = await mongod.getUri();\n        const module: TestingModule = await Test.createTestingModule({  (2)\n             imports: [\n                 MikroOrmModule.forRoot({                               (2.1)\n                     type: 'mongo',\n                     clientUrl: dbUrl,\n                     entities: [News, CourseNews, ...],\n                 }),\n              ],\n             providers: [NewsRepo],                                     (2.2)                          \n      }).compile();\n      repo = module.get(NewsRepo);                            (3)\n      orm = module.get(MikroORM);\n      em = module.get(EntityManager);\n    })Post conditions (afterAll)\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await orm.close();\n        await mongod.stop();         \n    });\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects. \nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application. \nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story). \n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called. \nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions     it('should search for news by empty scope ', async () => {\n         const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n         await service.findAllForUser(userId, scope, pagination);    (2)\n         const expectedParams = [targets, false, pagination];\n         expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n     });\n\nE2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below \nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside mapping) inside a controller, use the logic layer instead. Mapping can be unit tested.\n\nPreconditions\n\nCreate Nest testing module\n\nImport ServerModule as the whole\n\nOverride authentication using JwAuthGuard\n\n1 Override authorized user with the mocked user data\n\nOverride other services for example for authorization\n\nCreate and initialize the whole Nest Application using createNestApplication()\n\nGet Orm and Entity Manager from module\n\n beforeAll(async () => {\n     const module: TestingModule = await Test.createTestingModule({  (1)\n         imports: [ServerModule],                                    (2)\n     })\n         .overrideGuard(JwtAuthGuard)                                (3)\n         .useValue({\n             canActivate(context: ExecutionContext) {\n                 const req: Request = context.switchToHttp().getRequest();\n                 req.user = {                                        (3.1)\n                         userId: '0000d224816abba584714c9c',\n                         roles: [],\n                         schoolId: '5f2987e020834114b8efd6f8',\n                         accountId: '0000d225816abba584714c9d',\n                 };                                      \n                 return true;\n             },\n         })\n         .overrideProvider(AuthorizationService)                     (4)\n         .useValue({\n             checkEntityPermissions() {},\n             getEntityPermissions() {\n                 return ['NEWS_VIEW', 'NEWS_EDIT'];\n             },\n         })\n         .compile();\n\n     app = module.createNestApplication();                           (5)\n     await app.init();\n     orm = module.get(MikroORM);                           (6)\n     em = module.get(EntityManager);\n });\n\nClean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
