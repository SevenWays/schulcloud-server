var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.109,1,2.693]],["body/classes/Account.html",[0,0.119,1,3.893,2,1.07,3,0.151,4,0.126,5,0.102,6,4.671,7,1.655,8,3.587,9,0.301,10,0.951,11,7.766,12,2.3,13,6.349,14,2.704,15,2.764,16,1.464,17,2.826,18,1.252,19,4.531,20,4.387,21,0.904,22,5.248,23,0.79,24,0.007,25,0.453,26,0.437,27,0.543,28,2.845,29,2.431,30,3.1,31,5.248,32,1.988,33,2.34,34,1.571,35,4.344,36,4.007,37,4.531,38,5.248,39,1.049,40,5.248,41,2.047,42,2.188,43,3.153,44,2.609,45,2.609,46,2.188,47,2.609,48,2.538,49,2.139,50,2.609,51,0.391,52,1.165,53,4.344,54,2.765,55,1.274,56,1.705,57,1.07,58,5.248,59,2.293,60,4.671,61,0.143,62,1.844,63,1.961,64,2.764,65,2.609,66,3.288,67,5.248,68,3.288,69,2.765,70,2.293,71,3.591,72,4.671,73,3.78,74,3.288,75,2.293,76,2.35,77,5.248,78,5.248,79,4.007,80,0.004,81,0.005,82,0.004]],["title/classes/ApiValidationError.html",[0,0.109,83,3.134]],["body/classes/ApiValidationError.html",[0,0.129,2,1.159,3,0.163,4,0.137,5,0.111,7,1.743,9,0.326,10,1.002,18,1.356,21,0.92,23,0.856,24,0.007,25,0.49,26,0.456,27,0.588,39,1.025,43,3.501,51,0.367,61,0.154,62,1.997,65,2.825,80,0.004,81,0.005,82,0.004,83,4.772,84,6.499,85,5.056,86,6.183,87,3.074,88,3.116,89,4.689,90,4.1,91,3.443,92,1.464,93,6.598,94,6.598,95,5.681,96,5.828,97,5.681,98,7.182,99,2.483,100,5.056,101,4.772,102,5.056,103,5.056,104,5.056,105,5.056,106,5.056,107,1.413,108,5.056,109,3.301,110,4.337,111,1.099,112,5.056,113,4.645,114,4.645,115,3.532,116,3.848,117,2.544,118,4.092,119,4.092,120,5.056]],["title/classes/ApiValidationErrorResponse.html",[0,0.109,121,3.662]],["body/classes/ApiValidationErrorResponse.html",[0,0.134,2,1.203,3,0.17,4,0.142,5,0.115,7,1.785,9,0.338,10,1.026,18,1.407,21,0.74,23,0.888,24,0.007,25,0.509,26,0.399,27,0.61,34,1.422,51,0.413,61,0.16,80,0.004,81,0.005,82,0.004,83,5.951,88,3.191,90,4.199,91,3.191,98,7.309,109,4.772,115,3.618,116,4.874,117,2.641,119,4.248,121,5.71,122,7.309,123,5.249,124,2.159,125,4.887,126,4.199,127,4.686,128,4.551,129,7.479,130,5.898,131,6.27,132,5.898,133,4.503,134,5.249,135,5.898,136,1.617,137,5.898,138,5.898,139,5.898,140,7.479,141,7.479,142,5.898,143,1.325,144,7.479,145,5.898]],["title/interfaces/AppendedAttachment.html",[146,0.633,147,2.89]],["body/interfaces/AppendedAttachment.html",[3,0.182,4,0.152,5,0.123,7,2.17,9,0.363,10,1.071,24,0.007,25,0.545,39,1.243,61,0.172,80,0.004,81,0.005,82,0.004,146,1.24,147,5.107,148,1.94,149,3.959,150,5.334,151,5.944,152,4.129,153,4.129,154,4.705,155,4.129,156,4.129,157,4.129,158,5.107,159,3.959,160,4.129,161,4.705,162,5.103,163,5.103,164,4.705,165,4.115,166,3.959,167,4.129,168,4.129,169,4.129]],["title/modules/AuthModule.html",[170,1.343,171,3.454]],["body/modules/AuthModule.html",[0,0.144,3,0.182,4,0.152,5,0.123,12,1.65,24,0.007,51,0.473,61,0.172,80,0.004,81,0.005,82,0.004,111,1.225,170,2.189,171,6.934,172,2.524,173,3.589,174,5.636,175,5.636,176,5.636,177,6.343,178,6.676,179,6.343,180,4.39,181,3.337,182,2.983,183,6.332,184,3.589,185,3.887,186,7.819,187,4.834,188,6.332,189,5.636,190,6.332,191,4.333,192,5.177,193,6.332,194,5.636,195,6.332]],["title/modules/AuthorizationModule.html",[170,1.343,196,3.282]],["body/modules/AuthorizationModule.html",[0,0.145,3,0.184,4,0.154,5,0.125,24,0.007,51,0.448,61,0.174,80,0.004,81,0.005,82,0.004,111,1.241,170,2.206,172,2.555,173,3.617,180,4.423,181,3.378,182,3.02,184,3.617,185,3.917,196,6.634,197,5.706,198,5.706,199,5.706,200,5.706,201,6.362,202,6.1,203,6.076,204,6.411,205,4.151,206,6.411,207,6.411,208,3.279,209,5.706]],["title/injectables/AuthorizationService.html",[202,3.005,210,0.928]],["body/injectables/AuthorizationService.html",[0,0.097,3,0.123,4,0.103,5,0.083,9,0.245,12,2.337,18,1.018,21,0.75,23,1.141,24,0.007,25,0.653,26,0.368,27,0.783,34,0.811,39,1.052,51,0.381,52,1.392,57,0.87,61,0.116,69,3.991,80,0.003,81,0.004,82,0.003,92,1.206,107,1.546,111,0.825,136,1.492,143,1.066,202,3.77,203,5.417,208,2.181,209,3.796,210,1.165,211,1.561,212,3.796,213,2.568,214,6.206,215,5.356,216,6.973,217,4.265,218,4.265,219,4.265,220,2.831,221,4.448,222,4.337,223,5.464,224,3.84,225,4.265,226,3.496,227,6.018,228,4.505,229,3.712,230,2.363,231,4.118,232,6.018,233,4.265,234,5.183,235,3.796,236,4.265,237,4.118,238,5.356,239,3.77,240,4.92,241,3.796,242,1.82,243,5.034,244,4.118,245,2.498,246,4.265,247,4.265,248,3.487,249,4.265,250,4.265,251,4.265,252,6.018,253,4.265,254,4.265,255,2.394,256,4.265,257,6.018,258,4.265,259,4.265]],["title/classes/BaseEntity.html",[0,0.109,260,2.693]],["body/classes/BaseEntity.html",[0,0.188,2,1.226,3,0.173,4,0.145,5,0.117,8,3.017,9,0.345,10,1.137,14,3.392,15,2.396,16,1.837,17,2.45,21,0.749,24,0.007,26,0.368,28,2.744,29,2.238,30,2.854,34,1.576,39,1.052,41,3.392,42,3.626,46,3.626,51,0.381,52,1.461,55,1.838,56,1.953,61,0.206,63,2.247,64,2.396,80,0.004,81,0.005,82,0.004,88,2.566,260,4.652,261,4.916,262,6.012,263,6.012,264,2.908,265,4.59,266,4.33,267,4.916,268,4.916,269,5.351,270,3.929,271,3.075,272,5.351,273,3.268,274,4.59,275,3.493,276,3.268,277,5.351,278,4.916,279,5.351,280,4.114,281,3.767,282,4.59,283,4.916,284,5.351]],["title/classes/BaseEntityWithTimestamps.html",[0,0.109,8,1.912]],["body/classes/BaseEntityWithTimestamps.html",[0,0.184,2,1.169,3,0.165,4,0.138,5,0.112,8,3.231,9,0.329,10,1.112,14,3.333,15,3.231,16,1.805,17,3.303,21,0.846,24,0.007,26,0.357,28,2.927,29,2.386,30,2.944,32,1.881,33,2.213,34,1.68,39,1.029,41,3.333,42,3.563,46,3.563,48,2.774,49,2.337,51,0.369,52,1.436,55,1.784,56,1.863,61,0.2,63,2.143,64,2.285,80,0.004,81,0.005,82,0.004,88,2.447,260,4.124,261,4.688,264,2.774,265,4.378,266,4.13,267,4.688,268,4.688,269,5.103,270,3.747,271,2.933,272,5.103,273,3.116,274,4.378,275,3.332,276,3.116,277,5.103,278,4.688,279,5.103,280,3.924,281,3.592,282,4.378,283,4.688,284,5.103,285,5.734,286,5.734,287,5.734,288,5.734]],["title/injectables/BaseRepo.html",[210,0.928,289,3.662]],["body/injectables/BaseRepo.html",[0,0.102,3,0.129,4,0.108,5,0.088,9,0.258,18,1.072,21,0.897,23,1.348,24,0.007,25,0.772,26,0.435,27,0.926,51,0.361,52,1.416,55,1.091,57,0.916,61,0.122,69,4.083,80,0.003,81,0.004,82,0.003,87,1.46,92,1.251,107,1.732,111,0.87,136,1.229,143,1.494,210,1.208,211,1.645,213,2.735,230,2.584,245,2.547,260,2.523,264,2.174,289,4.766,290,3.999,291,6.897,292,4.079,293,5.556,294,5.556,295,5.556,296,3.392,297,5.556,298,5.556,299,5.556,300,2.936,301,4.503,302,4.494,303,3.505,304,4.494,305,5.556,306,6.687,307,4.494,308,5.556,309,4.494,310,5.556,311,4.494,312,5.556,313,4.494,314,5.556,315,4.494,316,4.083,317,5.556,318,4.494,319,5.556,320,4.494,321,5.556,322,4.494,323,4.494,324,4.494,325,4.494,326,5.917,327,6.242,328,6.242,329,6.242,330,7.172,331,7.172,332,4.494,333,6.242]],["title/classes/BusinessError.html",[0,0.109,86,3.134]],["body/classes/BusinessError.html",[0,0.171,2,1.012,3,0.143,4,0.119,5,0.097,7,1.594,9,0.285,10,0.916,18,1.594,21,0.893,23,0.747,24,0.007,25,0.428,26,0.459,27,0.513,34,0.944,39,1.103,51,0.38,61,0.135,62,1.744,74,4.185,75,2.919,80,0.003,81,0.005,82,0.003,86,4.365,87,3.101,88,3.901,89,5.156,90,4.535,91,3.706,92,1.339,93,6.605,94,6.605,99,2.919,101,5.799,107,1.293,109,4.388,110,6.168,111,0.96,116,2.614,118,5.439,124,1.816,128,4.257,143,1.184,334,4.416,335,4.55,336,4.811,337,3.881,338,4.571,339,3.881,340,4.025,341,6.605,342,4.962,343,5.818,344,6.68,345,2.697,346,4.962,347,4.962,348,4.962,349,4.962,350,4.962,351,4.962,352,4.962,353,4.962,354,4.962,355,3.109,356,4.962,357,4.416,358,6.68,359,4.962,360,4.571,361,6.68,362,6.68,363,4.962]],["title/modules/CoreModule.html",[170,1.343,364,3.454]],["body/modules/CoreModule.html",[0,0.135,3,0.171,4,0.143,5,0.116,24,0.007,51,0.449,61,0.161,75,3.28,80,0.004,81,0.005,82,0.004,111,1.148,117,3.361,124,2.171,170,2.423,172,2.364,173,3.446,180,4.214,181,3.126,182,2.794,185,3.732,364,6.941,365,5.279,366,5.279,367,6.568,368,6.568,369,5.714,370,6.568,371,5.932,372,4.905,373,7.506,374,4.905,375,5.73,376,6.137,377,7.506,378,4.703,379,5.73,380,4.905,381,7.506,382,4.523,383,5.406,384,6.68,385,7.506,386,5.73,387,5.932,388,5.932,389,5.932,390,5.932]],["title/classes/Course.html",[0,0.109,391,1.558]],["body/classes/Course.html",[0,0.059,2,0.531,3,0.075,4,0.063,5,0.051,7,0.991,8,2.874,9,0.414,10,0.57,12,1.082,14,1.619,15,1.655,16,1.247,17,1.692,18,0.622,21,0.909,23,1.191,24,0.007,25,0.752,26,0.433,27,0.818,28,1.375,29,2.219,30,2.831,32,1.975,33,1.56,34,0.79,37,2.714,39,1.166,41,1.016,42,1.086,43,2.254,44,1.296,45,1.296,46,1.086,47,1.296,48,1.26,49,3.291,50,1.296,51,0.26,52,0.698,55,0.633,56,0.847,57,0.531,59,1.139,61,0.071,62,0.916,63,1.935,70,1.139,76,1.859,80,0.002,81,0.003,82,0.002,92,0.832,107,1.615,124,2.639,136,1.474,143,1.367,146,0.683,220,2.805,229,2.752,292,1.703,316,3.944,355,1.633,391,1.349,392,1.989,393,5.889,394,3.254,395,5.504,396,2.58,397,3.7,398,4.041,399,3.859,400,4.153,401,4.153,402,4.153,403,5.256,404,5.256,405,5.256,406,5.256,407,4.153,408,5.247,409,4.041,410,4.508,411,4.508,412,3.17,413,1.956,414,4.508,415,4.153,416,1.296,417,5.177,418,2.606,419,2.606,420,3.62,421,2.606,422,2.257,423,2.842,424,1.956,425,2.606,426,4.153,427,2.606,428,4.153,429,2.606,430,3.395,431,2.606,432,2.606,433,3.696,434,2.606,435,3.696,436,2.606,437,3.696,438,2.606,439,2.606,440,2.606,441,2.606,442,2.606,443,3.696,444,2.606,445,3.858,446,2.009,447,3.696,448,2.413,449,3.17,450,1.956,451,3.395,452,3.859,453,3.558,454,3.7,455,2.714,456,2.842,457,1.906,458,3.931,459,3.17,460,2.606,461,3.696,462,2.606,463,2.714,464,3.17,465,3.17,466,3.696,467,2.606,468,3.696,469,2.606,470,3.696,471,2.606,472,3.696,473,3.696,474,2.991,475,3.17,476,2.602,477,2.602,478,1.633,479,2.319,480,1.227,481,4.608,482,3.395,483,3.696,484,2.714,485,2.991,486,1.989,487,2.13,488,1.227,489,4.608,490,4.608,491,4.608,492,2.319,493,2.319,494,3.383,495,1.703,496,4.608,497,2.319,498,2.13,499,2.319,500,2.319,501,2.319,502,1.989,503,1.989,504,2.319,505,2.319,506,2.319,507,2.319,508,4.608,509,2.319,510,2.319,511,2.319,512,1.989,513,2.319,514,2.319,515,2.319,516,3.696,517,3.696,518,3.696,519,3.696,520,2.319,521,2.319,522,3.696,523,1.633,524,2.319]],["title/classes/CourseGroupInfo.html",[0,0.109,525,3.134]],["body/classes/CourseGroupInfo.html",[0,0.123,2,1.104,3,0.156,4,0.13,5,0.105,7,1.689,8,3.614,9,0.311,10,0.971,12,1.411,14,2.76,15,2.821,16,1.495,17,2.884,18,1.292,19,4.625,20,4.314,21,0.898,23,0.815,24,0.007,25,0.467,26,0.432,27,0.56,28,2.344,29,2.404,30,1.865,32,2.019,33,2.375,34,1.59,35,4.434,36,4.133,37,4.625,39,0.687,41,2.111,42,2.257,43,3.192,44,2.691,45,2.691,46,2.257,47,2.691,48,2.618,49,2.206,50,2.691,51,0.421,52,1.189,53,4.434,54,2.852,55,1.315,56,1.759,57,1.104,59,2.365,61,0.147,62,1.902,70,2.365,76,3.169,80,0.004,81,0.005,82,0.004,391,2.717,463,5.464,478,3.391,525,4.625,526,6.384,527,3.039,528,5.152,529,3.704,530,4.751,531,3.391,532,4.434,533,5.413,534,4.751,535,5.413,536,3.973,537,3.02,538,3.729]],["title/classes/CourseInfo.html",[0,0.109,539,2.527]],["body/classes/CourseInfo.html",[0,0.141,2,1.266,3,0.178,4,0.149,5,0.121,7,1.843,9,0.356,10,1.059,14,3.011,16,1.631,18,1.481,21,0.871,23,0.935,24,0.007,25,0.781,26,0.448,27,0.642,29,2.27,30,2.896,39,1.117,41,2.42,42,2.587,43,2.947,46,2.587,51,0.388,52,1.297,55,1.507,56,2.016,57,1.266,59,2.711,61,0.169,62,2.181,80,0.004,81,0.005,82,0.004,260,5.08,413,3.637,416,3.085,488,2.923,494,4.055,495,4.055,527,3.484,529,5.284,539,4.068,540,7.481,541,4.486,542,4.469,543,4.469]],["title/classes/CourseNews.html",[0,0.109,544,2.693]],["body/classes/CourseNews.html",[0,0.15,2,0.654,3,0.092,4,0.171,5,0.062,7,1.696,8,2.984,9,0.184,10,0.669,12,0.835,14,1.903,15,1.945,16,1.248,17,1.989,21,0.896,23,0.483,24,0.007,25,0.57,26,0.433,27,0.85,28,2.354,29,2.408,30,3.044,32,1.513,33,1.78,34,1.352,39,1.132,41,1.25,42,1.336,43,3.455,44,1.593,45,1.593,46,1.336,47,1.593,48,1.55,49,1.306,50,1.593,51,0.392,52,1.194,54,3.113,55,0.778,56,1.041,57,0.654,61,0.193,62,1.126,64,2.355,66,4.453,70,1.4,76,2.645,80,0.002,81,0.003,82,0.002,91,3.195,92,0.978,107,0.62,143,0.568,146,0.423,220,2.141,221,3.667,222,3.622,224,2.355,244,2.193,273,3.211,335,2.94,360,2.193,391,1.041,396,2.132,413,1.51,416,2.937,424,1.51,450,2.298,480,2.783,531,3.702,536,4.504,538,3.48,539,3.113,544,2.739,545,2.193,546,3.514,547,3.663,548,3.622,549,3.863,550,3.48,551,4.757,552,3.122,553,4.519,554,4.316,555,2.645,556,3.725,557,3.205,558,2.62,559,3.339,560,3.99,561,3.339,562,2.62,563,2.62,564,3.514,565,4.519,566,3.514,567,3.339,568,3.188,569,3.339,570,2.62,571,2.62,572,3.378,573,2.62,574,3.317,575,3.702,576,2.62,577,2.62,578,2.62,579,3.188,580,2.62,581,3.514,582,2.62,583,3.514,584,2.62,585,2.835,586,2.308,587,2.571,588,1.689,589,2.193,590,2.094,591,2.094,592,2.008,593,2.308,594,2.308,595,2.308,596,2.308,597,2.308,598,2.094,599,2.308,600,2.308,601,3.514,602,2.858,603,2.937,604,2.712,605,2.783,606,2.858,607,3.56,608,3.317,609,2.308,610,3.514,611,2.308,612,2.308,613,4.255,614,1.862,615,1.862]],["title/injectables/CourseRepo.html",[210,0.928,616,2.89]],["body/injectables/CourseRepo.html",[0,0.165,3,0.163,4,0.136,5,0.11,7,1.351,9,0.325,18,1.351,21,0.721,23,1.097,24,0.007,25,0.628,26,0.354,27,0.753,34,1.076,51,0.453,52,0.951,55,1.375,57,1.154,61,0.154,80,0.004,81,0.005,82,0.004,87,1.839,92,1.46,107,1.095,111,1.095,136,1.774,143,1.291,210,1.41,211,2.072,213,2.339,220,2.651,229,3.629,230,2.077,242,2.415,245,1.77,264,2.738,300,3.699,301,4.942,303,4.09,391,1.839,397,3.546,398,3.873,399,3.699,409,4.985,410,5.562,411,5.562,488,3.432,616,4.39,617,4.628,618,6.484,619,5.661,620,5.247,621,5.661,622,2.896,623,3.52,624,4.077,625,4.761,626,2.896,627,6.15,628,5.038,629,5.038,630,3.178,631,5.038,632,3.839,633,5.038,634,4.322]],["title/classes/CourseScope.html",[0,0.109,627,3.662]],["body/classes/CourseScope.html",[0,0.146,2,0.957,3,0.135,4,0.113,5,0.091,7,1.534,9,0.269,10,0.882,21,0.882,23,1.286,24,0.007,25,0.681,26,0.425,27,0.816,32,2.021,33,2.378,34,0.892,39,1.002,43,3.338,51,0.43,52,0.788,55,1.139,57,0.957,61,0.128,80,0.003,81,0.004,82,0.003,87,1.524,92,1.289,107,1.528,111,0.908,136,1.682,143,1.139,210,1.244,213,1.362,220,2.491,229,3.368,230,1.337,242,2.002,245,1.467,264,2.269,301,3.736,303,2.634,316,3.866,391,1.524,394,2.508,397,2.939,398,3.21,399,3.066,409,4.4,410,4.909,411,4.909,488,3.029,616,2.827,617,3.835,620,3.379,622,2.4,623,4.033,624,3.379,625,4.202,626,2.4,627,6.313,628,5.723,629,4.175,630,2.634,631,4.175,632,3.388,633,4.175,634,3.581,635,4.909,636,5.02,637,5.02,638,5.02,639,6.43,640,4.909,641,4.909,642,4.909,643,5.956,644,3.835,645,3.835,646,3.835,647,3.835,648,4.691,649,3.581,650,6.52,651,4.631,652,4.631,653,3.835,654,3.379,655,3.581,656,4.4,657,3.835,658,3.368,659,3.581,660,3.835,661,3.581]],["title/classes/CourseTaskInfo.html",[0,0.109,530,2.89]],["body/classes/CourseTaskInfo.html",[0,0.109,2,0.977,3,0.138,4,0.115,5,0.093,7,1.557,8,3.506,9,0.275,10,0.895,12,1.249,14,2.545,15,2.601,16,1.378,17,2.659,18,1.144,19,4.264,20,4.142,21,0.909,23,0.722,24,0.007,25,0.687,26,0.45,27,0.496,28,2.161,29,2.451,30,2.961,32,2.201,33,2.59,34,1.702,35,5.386,36,5.664,37,4.264,39,1.058,41,1.869,42,1.998,43,3.04,44,2.383,45,2.383,46,1.998,47,2.383,48,2.318,49,1.953,50,2.383,51,0.373,52,1.096,53,4.99,54,2.525,55,1.164,56,1.557,57,0.977,59,2.094,61,0.177,62,1.684,63,1.791,70,2.094,76,3.322,80,0.003,81,0.005,82,0.003,136,0.944,393,5.664,399,4.264,430,5.335,486,3.659,488,2.258,526,6.715,527,2.691,528,4.848,530,3.932,534,5.3,537,3.82,538,2.525,662,7.088,663,6.511,664,4.266,665,5.664,666,4.793,667,4.793,668,4.793,669,4.793,670,4.793,671,3.659]],["title/injectables/CourseUC.html",[210,0.928,672,3.005]],["body/injectables/CourseUC.html",[0,0.133,3,0.169,4,0.141,5,0.114,9,0.337,18,1.778,21,0.738,23,1.122,24,0.007,25,0.643,26,0.362,27,0.771,51,0.412,52,0.985,57,1.196,61,0.223,75,2.563,80,0.004,81,0.005,82,0.004,87,2.421,92,1.493,107,1.135,111,1.135,136,1.468,143,1.039,146,0.984,210,1.442,211,2.146,213,2.378,220,2.68,229,2.502,230,2.457,245,2.331,391,2.421,412,4.477,420,2.837,445,3.292,452,3.832,453,3.534,454,3.674,488,3.51,616,4.49,620,4.224,622,3,625,5.632,632,3.926,672,4.669,673,4.477,674,6.632,675,5.864,676,4.936,677,5.632,678,5.864,679,5.689,680,5.864,681,3.292,682,4.224,683,4.794,684,4.794,685,4.794,686,4.794,687,4.794,688,3.832,689,4.794,690,4.794,691,4.794]],["title/classes/Coursegroup.html",[0,0.109,420,2.32]],["body/classes/Coursegroup.html",[0,0.114,2,1.027,3,0.145,4,0.121,5,0.098,7,1.61,8,3.55,9,0.289,10,0.925,14,2.631,15,2.689,16,1.607,17,2.749,18,1.201,21,0.908,23,1.016,24,0.007,25,0.582,26,0.424,27,0.698,28,2.234,29,2.355,30,2.919,32,1.727,33,2.032,34,1.283,37,4.408,39,0.639,41,1.963,42,2.099,43,3.102,44,2.503,45,2.503,46,2.099,47,2.503,48,2.435,49,2.052,50,2.503,51,0.339,52,1.133,55,1.223,56,1.636,57,1.027,59,2.2,61,0.183,62,1.769,63,2.521,70,2.2,76,3.02,80,0.003,81,0.005,82,0.003,92,1.352,107,1.305,136,0.992,143,1.195,146,0.665,220,2.835,229,2.148,391,2.191,397,5.091,408,5.808,409,5.205,413,3.177,416,2.503,420,3.263,458,3.354,459,5.15,474,3.626,478,3.154,502,3.844,503,3.844,512,3.844,532,5.308,536,2.827,692,4.116,693,7.232,694,6.204,695,6.745,696,5.035,697,5.035,698,5.035,699,5.035,700,3.844,701,6.003,702,4.481,703,3.626]],["title/injectables/CoursegroupRepo.html",[210,0.928,676,2.89]],["body/injectables/CoursegroupRepo.html",[0,0.17,3,0.171,4,0.143,5,0.116,7,1.418,9,0.341,16,1.255,18,1.418,21,0.744,23,1.132,24,0.007,25,0.648,26,0.365,27,0.777,34,1.13,51,0.459,52,0.998,55,1.443,57,1.212,61,0.162,80,0.004,81,0.005,82,0.004,87,1.931,92,1.506,107,1.15,111,1.15,136,1.48,143,1.332,210,1.454,211,2.175,213,2.393,230,2.143,242,2.536,245,1.859,264,2.875,300,3.884,301,5.032,303,4.219,391,2.902,420,2.875,478,4.708,488,2.799,532,3.723,622,3.04,623,3.601,624,4.281,626,3.04,630,3.337,632,3.96,634,4.537,676,4.528,677,4.911,682,5.936,704,4.859,705,6.144,706,5.943,707,5.943,708,6.292,709,5.289,710,5.289,711,5.289]],["title/classes/CoursegroupScope.html",[0,0.109,708,3.662]],["body/classes/CoursegroupScope.html",[0,0.15,2,0.996,3,0.14,4,0.118,5,0.095,7,1.577,9,0.28,10,0.906,16,1.031,21,0.89,23,1.302,24,0.007,25,0.692,26,0.429,27,0.83,32,2.055,33,2.418,34,0.929,39,1.019,43,3.374,51,0.435,52,0.82,55,1.186,57,0.996,61,0.133,80,0.003,81,0.005,82,0.003,87,1.587,92,1.324,107,1.553,111,0.945,136,1.302,143,1.171,210,1.279,213,1.418,230,1.392,242,2.084,245,1.527,264,2.362,301,3.84,303,2.742,316,3.947,391,2.724,394,2.577,420,2.362,478,4.14,488,2.3,532,3.06,622,2.498,623,4.061,624,3.517,626,2.498,630,2.742,632,3.482,634,3.728,635,5.045,636,5.126,637,5.126,638,5.126,640,5.045,641,5.045,642,5.045,643,6.04,644,3.993,645,3.993,646,3.993,647,3.993,649,3.728,650,6.599,651,4.76,652,4.76,653,3.993,654,3.517,655,3.728,656,4.522,657,3.993,658,3.439,659,3.728,660,3.993,661,3.728,676,2.943,677,4.318,682,5.395,704,3.993,705,5.403,708,6.402,709,4.346,710,4.346,711,4.346,712,4.884]],["title/classes/CreateNewsParams.html",[0,0.109,713,3.282]],["body/classes/CreateNewsParams.html",[0,0.155,2,1.042,3,0.147,4,0.123,5,0.1,9,0.293,10,0.934,16,1.439,21,0.843,24,0.007,26,0.414,27,0.705,28,2.256,29,2.3,39,1.153,51,0.385,52,1.573,61,0.139,68,5.121,80,0.004,81,0.005,82,0.004,91,3.633,124,3.324,136,1.006,221,3.61,222,3.707,223,4.618,228,3.702,480,2.407,546,3.491,547,3.572,548,4.119,550,4.038,713,4.661,714,7.16,715,3.901,716,3.295,717,5.201,718,3.958,719,6.812,720,4.547,721,5.109,722,5.569,723,4.105,724,5.569,725,5.201,726,5.569,727,4.661,728,4.661,729,5.109,730,5.109,731,4.661,732,4.661,733,5.109,734,5.109,735,5.52,736,5.569,737,4.105,738,5.109,739,5.109,740,4.947,741,4.906,742,2.471,743,6.063,744,5.569,745,6.962,746,3.079,747,3.68,748,3.201]],["title/controllers/DelayController.html",[749,2.147,750,3.662]],["body/controllers/DelayController.html",[0,0.14,3,0.177,4,0.148,5,0.12,9,0.354,21,0.611,24,0.007,29,1.666,32,1.97,34,1.173,51,0.422,61,0.168,80,0.004,81,0.005,82,0.004,92,1.542,107,1.194,111,1.194,115,2.984,136,1.515,143,1.363,184,2.832,213,2.434,230,2.39,245,1.929,383,5.541,749,3.444,750,6.4,751,3.824,752,6.289,753,5.043,754,7.812,755,6.168,756,5.264,757,4.556,758,5.027,759,4.319,760,5.873,761,5.49,762,6.168,763,3.864,764,5.043,765,6.289,766,5.49,767,5.49,768,6.168,769,4.709,770,3.155,771,5.043,772,5.264,773,5.043,774,3.25,775,4.443,776,4.709]],["title/injectables/DurationLoggingInterceptor.html",[210,0.928,777,3.921]],["body/injectables/DurationLoggingInterceptor.html",[0,0.136,3,0.173,4,0.144,5,0.117,9,0.344,10,1.037,21,0.749,23,0.904,24,0.007,25,0.518,26,0.291,27,0.621,32,1.536,33,1.808,34,1.438,51,0.437,61,0.163,80,0.004,81,0.005,82,0.004,87,2.69,92,1.515,107,1.161,111,1.161,124,2.196,136,1.182,143,1.063,210,1.463,211,2.196,380,4.941,394,3.228,604,3.8,630,3.369,727,4.106,760,5.772,772,5.174,777,6.182,778,7.368,779,5.341,780,7.561,781,5.772,782,4.941,783,4.879,784,6.729,785,6.729,786,6.635,787,7.735,788,6.001,789,3.162,790,7.368,791,7.561,792,6.001,793,4.906,794,6.001,795,5.341,796,5.341,797,6.001,798,7.561,799,6.001,800,6.001,801,6.001]],["title/modules/ErrorModule.html",[170,1.343,367,3.454]],["body/modules/ErrorModule.html",[0,0.154,3,0.195,4,0.163,5,0.132,24,0.007,32,2.086,51,0.44,61,0.184,80,0.005,81,0.006,82,0.005,111,1.311,124,2.48,170,2.281,172,2.701,184,3.111,239,5.105,367,5.869,382,4.91,386,6.922,763,4.245,774,3.57,802,6.776,803,7.252,804,4.91,805,4.91,806,4.293,807,5.869,808,6.776,809,6.776,810,5.54]],["title/classes/ErrorResponse.html",[0,0.109,109,2.787]],["body/classes/ErrorResponse.html",[0,0.14,2,1.261,3,0.178,4,0.149,5,0.12,18,1.838,21,0.612,23,0.931,24,0.007,25,0.533,26,0.439,27,0.639,39,1.21,51,0.311,61,0.168,80,0.004,81,0.005,82,0.004,87,2.854,88,3.748,90,4.711,91,3.58,99,3.666,109,4.475,110,4.719,111,1.196,117,3.757,124,2.819,125,5.483,126,4.324,127,4.826,128,4.058,357,5.501,484,5.033,811,5.501,812,6.181,813,6.181,814,6.181,815,5.053,816,6.181,817,4.039,818,5.501,819,3.724,820,2.911,821,3.724,822,4.229,823,4.719]],["title/injectables/FeathersAuthProvider.html",[203,3.134,210,0.928]],["body/injectables/FeathersAuthProvider.html",[0,0.095,3,0.121,4,0.101,5,0.082,9,0.241,12,2.258,14,1.636,18,1.001,21,0.816,23,1.242,24,0.007,25,0.711,26,0.4,27,0.853,34,0.798,39,1.008,41,2.695,51,0.399,55,1.019,57,0.856,61,0.114,80,0.003,81,0.004,82,0.003,92,1.192,107,1.536,111,0.812,136,1.76,143,1.461,146,0.554,203,3.887,210,1.151,211,1.536,213,2.708,220,2.897,221,3.884,222,4.101,223,4.531,224,3.164,229,3.618,230,2.547,231,4.07,241,3.734,242,1.79,245,2.483,255,2.355,260,3.34,264,2.029,394,2.695,396,3.469,422,2.28,552,1.749,658,1.926,756,4.07,757,2.28,824,7.546,825,3.43,826,5.948,827,6.151,828,5.948,829,5.948,830,6.151,831,4.195,832,5.166,833,4.195,834,5.948,835,4.195,836,3.734,837,4.195,838,5.948,839,4.195,840,5.948,841,4.195,842,4.195,843,4.195,844,5.294,845,4.195,846,3.734,847,5.948,848,3.734,849,5.948,850,5.948,851,4.195,852,4.195,853,3.535,854,4.195,855,5.948,856,5.948,857,5.948,858,4.195,859,3.022,860,4.195,861,4.195,862,4.195,863,4.863,864,3.734,865,4.195,866,4.195,867,2.871]],["title/interfaces/FeathersError.html",[146,0.633,868,3.454]],["body/interfaces/FeathersError.html",[3,0.2,4,0.167,5,0.135,7,1.973,9,0.398,10,1.134,24,0.007,26,0.465,39,1.203,61,0.189,80,0.005,81,0.006,82,0.005,88,3.9,99,3.858,117,3.702,146,0.917,148,2.131,868,5.955,869,6.179,870,6.179,871,8.135]],["title/modules/FeathersModule.html",[170,1.343,201,3.282]],["body/modules/FeathersModule.html",[0,0.143,3,0.181,4,0.152,5,0.123,24,0.007,51,0.392,61,0.171,80,0.004,81,0.005,82,0.004,111,1.22,124,2.308,170,2.477,172,3.375,173,3.58,180,4.379,181,3.323,182,2.971,184,3.58,201,6.423,205,4.109,208,4.331,446,3.772,759,4.379,832,6.087,846,5.613,853,3.989,872,5.613,873,5.613,874,5.613,875,6.306,876,5.096,877,4.531,878,4.379,879,3.989,880,4.886,881,5.337,882,5.337,883,5.337,884,5.337,885,6.376]],["title/interfaces/FeathersService.html",[146,0.633,886,3.662]],["body/interfaces/FeathersService.html",[0,0.11,3,0.14,4,0.117,5,0.095,9,0.279,16,1.391,21,0.74,23,0.992,24,0.007,25,0.568,26,0.389,27,0.681,34,0.924,39,0.617,51,0.421,57,0.991,61,0.218,65,2.417,75,2.878,80,0.003,81,0.005,82,0.003,92,1.32,101,4.305,107,1.275,111,0.941,127,3.045,136,1.297,143,0.861,146,0.642,148,1.492,170,1.361,172,1.937,208,3.822,210,1.275,220,2.413,230,2.284,243,4.195,255,2.729,281,3.045,345,3.58,394,1.895,445,2.729,446,2.351,602,3.186,603,3.275,604,3.024,605,3.103,606,3.186,607,3.969,623,2.878,681,2.729,759,4.7,763,3.045,832,3.045,853,4.594,867,3.326,876,3.176,877,4.864,878,2.729,879,4.283,880,3.045,881,3.326,882,3.326,883,3.326,884,3.326,885,3.974,886,6.116,887,5.705,888,3.501,889,4.221,890,7.129,891,5.481,892,5.863,893,7.217,894,4.861,895,5.408,896,5.863,897,4.861,898,4.326,899,3.045,900,3.974,901,5.029,902,5.386,903,3.974,904,4.326,905,4.326,906,4.326,907,5.863,908,4.326,909,3.711,910,4.127,911,3.711,912,3.326,913,4.326,914,4.326,915,4.326,916,3.711,917,3.326,918,2.929,919,4.326]],["title/injectables/FeathersServiceProvider.html",[210,0.928,832,3.005]],["body/injectables/FeathersServiceProvider.html",[0,0.11,3,0.14,4,0.117,5,0.095,9,0.279,16,1.028,18,1.162,21,0.74,23,0.993,24,0.007,25,0.569,26,0.389,27,0.682,34,0.926,39,0.95,51,0.421,57,0.993,61,0.218,65,2.42,75,2.882,80,0.003,81,0.005,82,0.003,92,1.322,101,4.309,107,0.942,111,0.942,124,1.782,127,3.05,136,1.299,143,0.863,146,0.643,170,1.363,172,2.628,208,4.1,210,1.276,211,1.782,220,1.987,230,1.88,243,4.199,255,2.733,281,3.05,394,1.898,445,3.702,446,3.19,602,3.19,603,3.279,604,3.027,605,3.106,606,3.19,607,3.974,623,2.882,681,2.733,759,4.5,763,3.05,832,4.132,853,4.595,867,3.331,876,4.309,877,4.657,878,3.702,879,4.658,880,4.132,881,4.512,882,4.512,883,4.512,884,4.512,885,5.391,886,6.12,887,5.709,888,3.506,889,2.565,890,5.869,891,4.512,892,4.333,893,6.114,895,4.685,896,4.333,898,4.333,899,3.05,900,3.98,901,5.035,902,5.391,903,3.98,904,4.333,905,4.333,906,5.869,907,5.869,908,4.333,909,3.717,910,4.132,911,3.717,912,3.331,913,4.333,914,4.333,915,4.333,916,3.717,917,3.331,918,2.933,919,4.333,920,6.595,921,4.868,922,4.868,923,4.868,924,3.331]],["title/classes/FileTaskInfo.html",[0,0.109,925,3.282]],["body/classes/FileTaskInfo.html",[0,0.128,2,1.154,3,0.163,4,0.136,5,0.11,7,1.738,8,3.653,9,0.325,10,0.999,12,1.475,14,2.841,15,2.904,16,1.539,17,2.969,18,1.351,19,4.761,20,4.375,21,0.907,23,0.853,24,0.007,25,0.734,26,0.427,27,0.585,28,2.413,29,2.433,30,3.103,32,1.865,33,2.195,34,1.385,39,1.023,41,2.207,42,2.36,43,3.247,44,2.814,45,2.814,46,2.36,47,2.814,48,2.738,49,2.307,50,2.814,51,0.405,52,1.224,55,1.375,56,1.839,57,1.154,59,2.473,61,0.154,62,1.989,70,2.473,80,0.004,81,0.005,82,0.004,527,3.178,534,4.854,537,3.755,538,2.983,549,4.378,925,4.985,926,7.57,927,5.661,928,5.661,929,5.661,930,3.546]],["title/interfaces/GlobalConstants.html",[146,0.633,931,3.662]],["body/interfaces/GlobalConstants.html",[3,0.191,4,0.16,5,0.13,9,0.381,10,1.105,24,0.007,26,0.421,27,0.931,39,1.224,51,0.334,61,0.181,80,0.005,81,0.006,82,0.005,136,1.586,146,0.877,148,2.04,931,6.615,932,5.433,933,7.543,934,7.543,935,7.543,936,6.584,937,6.645,938,6.584,939,4.004,940,4.786]],["title/classes/GlobalErrorFilter.html",[0,0.109,807,3.454]],["body/classes/GlobalErrorFilter.html",[0,0.114,2,0.676,3,0.095,4,0.08,5,0.065,9,0.19,10,0.687,21,0.597,23,0.754,24,0.007,25,0.52,26,0.35,27,0.518,30,1.142,32,0.849,33,0.999,34,1.442,49,1.351,51,0.408,61,0.09,64,1.321,80,0.002,81,0.003,82,0.002,83,4.391,86,4.391,87,1.959,88,2.867,90,2.81,91,2.573,92,1.209,107,1.3,109,4.992,111,0.641,115,1.603,116,2.637,117,4.348,121,2.531,125,2.166,126,4.888,128,1.747,133,2.531,134,2.95,136,1.852,143,1.59,146,0.438,208,3.085,243,2.81,306,5.19,316,3.178,337,2.908,341,5.494,394,2.352,422,1.801,446,1.603,555,2.7,602,2.421,603,2.489,604,2.298,605,2.358,606,1.603,630,2.81,783,4.823,804,4.346,806,2.637,807,3.605,868,4.84,871,2.95,878,1.861,899,2.077,941,5.13,942,2.387,943,6.031,944,5.507,945,4.931,946,5.006,947,3.315,948,5.006,949,6.031,950,6.719,951,3.315,952,6.031,953,3.315,954,3.315,955,2.95,956,2.95,957,3.315,958,3.315,959,3.315,960,2.71,961,2.95,962,2.71,963,6.012,964,2.71,965,2.531,966,2.95,967,3.425,968,2.71,969,2.387,970,3.941,971,2.166,972,2.71,973,2.95,974,4.455,975,2.95,976,2.71,977,2.95,978,2.95,979,2.95,980,2.95,981,2.95,982,3.779,983,4.092,984,3.315,985,3.315,986,4.092,987,5.507,988,3.315,989,3.315,990,3.315,991,4.092,992,3.315,993,3.315,994,5.006,995,3.315,996,3.315,997,2.387,998,4.455,999,2.387,1000,2.95,1001,2.166,1002,2.077,1003,4.455,1004,3.504,1005,2.71,1006,4.455,1007,2.95,1008,3.822,1009,2.95,1010,2.95,1011,2.531,1012,2.71,1013,2.95,1014,2.95,1015,2.71,1016,2.71,1017,2.71,1018,2.531,1019,2.531,1020,2.95,1021,2.95,1022,2.95,1023,2.95,1024,6.42,1025,2.71,1026,6.42,1027,2.95,1028,2.71,1029,2.95,1030,3.315,1031,3.315,1032,3.315,1033,5.006,1034,3.315,1035,3.315]],["title/classes/GlobalValidationPipe.html",[0,0.109,1036,3.662]],["body/classes/GlobalValidationPipe.html",[0,0.185,2,1.187,3,0.167,4,0.14,5,0.113,7,1.77,10,0.798,18,1.948,21,0.576,24,0.007,26,0.396,29,2.003,32,1.899,34,1.107,51,0.373,61,0.158,62,2.045,64,2.956,80,0.004,81,0.005,82,0.004,83,3.803,96,5.075,111,1.126,116,4.528,124,2.13,128,3.067,133,4.443,143,1.031,296,3.163,336,5.341,382,4.469,422,3.163,424,3.845,658,2.672,716,3.948,740,3.382,746,4.469,820,2.742,895,3.646,910,3.646,917,3.983,1036,5.662,1037,6.6,1038,5.18,1039,6.063,1040,4.469,1041,6.063,1042,6.063,1043,6.063,1044,4.646,1045,8.162,1046,5.82,1047,5.075,1048,4.758,1049,5.82,1050,2.894,1051,3.983,1052,5.82,1053,5.82,1054,5.82,1055,5.82,1056,4.443,1057,4.192,1058,4.192,1059,5.82,1060,4.192,1061,5.82,1062,4.758,1063,3.507,1064,5.18,1065,4.192,1066,3.268,1067,5.82,1068,5.82]],["title/interfaces/HtmlMailContent.html",[146,0.633,164,2.89]],["body/interfaces/HtmlMailContent.html",[3,0.177,4,0.148,5,0.12,7,2.154,9,0.353,10,1.054,24,0.007,25,0.531,26,0.373,27,0.795,39,1.251,61,0.167,80,0.004,81,0.005,82,0.004,146,1.233,147,4.63,148,1.889,149,3.857,150,5.047,151,5.021,152,4.023,153,4.023,154,4.63,155,4.023,156,4.023,157,4.023,158,5.285,159,3.857,160,4.023,161,4.63,162,5.899,163,5.899,164,5.047,165,4.048,166,3.857,167,4.023,168,4.023,169,4.023]],["title/interfaces/ICourseProperties.html",[146,0.633,414,3.662]],["body/interfaces/ICourseProperties.html",[0,0.081,3,0.103,4,0.086,5,0.07,7,0.854,8,2.113,9,0.464,10,0.727,12,0.933,16,1.12,24,0.007,25,0.697,26,0.392,27,0.891,30,3.012,32,1.908,37,2.339,39,1.182,49,2.573,51,0.318,52,0.891,55,0.869,56,1.163,57,0.73,59,1.564,61,0.097,62,1.258,63,2.36,70,1.564,76,2.374,80,0.002,81,0.004,82,0.002,124,2.957,136,1.634,143,1.501,146,0.7,148,1.099,220,2.857,292,2.339,316,3.678,355,2.242,391,1.163,392,2.733,393,6.468,394,2.906,395,5.329,396,3.257,397,4.669,398,5.1,399,4.87,403,3.185,404,3.185,405,3.185,406,3.185,408,4.82,409,3.628,410,4.047,411,4.047,413,1.686,414,4.82,420,3.605,422,1.945,423,2.449,424,1.686,430,2.926,433,3.185,435,3.185,437,3.185,443,3.185,445,3.545,446,1.731,447,3.185,448,2.08,449,2.733,450,1.686,451,2.926,452,3.464,453,3.194,454,3.321,455,2.339,456,2.449,457,1.643,458,3.705,459,2.733,461,3.185,463,2.339,464,2.733,465,2.733,466,3.185,468,3.185,470,3.185,472,3.185,473,3.185,474,2.578,475,2.733,476,2.242,477,2.242,479,3.185,480,1.686,481,5.62,482,4.334,483,4.718,484,3.464,485,3.818,486,2.733,487,2.926,488,1.686,489,5.62,490,5.62,491,5.62,492,3.185,493,3.185,494,4.126,495,2.339,496,5.62,497,3.185,498,2.926,499,3.185,500,3.185,501,3.185,502,2.733,503,2.733,504,3.185,505,3.185,506,3.185,507,3.185,508,5.62,509,3.185,510,3.185,511,3.185,512,2.733,513,3.185,514,3.185,515,3.185,516,4.718,517,4.718,518,4.718,519,4.718,520,3.185,521,3.185,522,4.718,523,2.242,524,3.185]],["title/interfaces/ICourseRepo.html",[146,0.633,625,3.134]],["body/interfaces/ICourseRepo.html",[0,0.138,3,0.175,4,0.146,5,0.118,9,0.348,18,1.449,21,0.601,23,0.915,24,0.007,25,0.524,26,0.295,27,0.628,51,0.419,52,1.02,57,1.238,61,0.226,75,2.653,80,0.004,81,0.005,82,0.004,87,2.475,92,1.527,107,1.175,111,1.175,136,1.5,143,1.076,146,1.005,148,1.864,210,1.474,213,1.763,220,2.708,229,2.591,230,2.488,245,2.382,391,2.475,412,4.635,420,2.937,445,3.409,452,3.967,453,3.658,454,3.804,488,3.588,616,3.658,618,6.779,620,5.486,622,3.106,625,5.439,632,4.013,672,3.804,673,4.635,676,3.658,677,4.977,679,4.635,681,3.409,682,4.373,683,4.964,684,4.964,685,4.964,686,4.964,687,4.964,688,3.967,689,4.964,690,4.964,691,4.964,1069,6.071]],["title/interfaces/ICoursegroupProperties.html",[146,0.633,694,3.662]],["body/interfaces/ICoursegroupProperties.html",[0,0.136,3,0.172,4,0.144,5,0.117,7,1.429,8,3.01,9,0.344,10,1.036,16,1.265,24,0.007,26,0.367,27,0.781,30,2.849,37,3.914,51,0.38,52,1.269,55,1.454,56,1.946,57,1.221,59,2.617,61,0.205,62,2.105,63,2.822,70,2.617,76,3.381,80,0.004,81,0.005,82,0.004,136,1.18,143,1.338,146,0.791,148,1.838,220,2.893,391,2.453,397,5.609,408,4.572,409,5.66,413,2.821,420,2.897,458,2.978,459,4.572,474,4.314,478,3.752,502,4.572,503,4.572,512,4.572,532,5.728,536,3.363,692,4.897,693,5.33,694,6.315,700,4.572,701,6.721,702,5.33,703,4.314]],["title/interfaces/ICoursegroupRepo.html",[146,0.633,677,3.134]],["body/interfaces/ICoursegroupRepo.html",[0,0.138,3,0.175,4,0.146,5,0.118,9,0.348,18,1.449,21,0.601,23,0.915,24,0.007,25,0.524,26,0.295,27,0.628,51,0.419,52,1.02,57,1.238,61,0.226,75,2.653,80,0.004,81,0.005,82,0.004,87,2.475,92,1.527,107,1.175,111,1.175,136,1.5,143,1.076,146,1.005,148,1.864,210,1.474,213,1.763,220,2.507,230,2.488,245,2.382,391,2.835,412,4.635,420,2.937,445,3.409,452,3.967,453,3.658,454,3.804,488,3.92,616,3.658,620,4.373,622,3.106,625,4.977,632,4.013,672,3.804,673,4.635,676,3.658,677,5.439,679,4.635,681,3.409,682,5.486,683,4.964,684,4.964,685,4.964,686,4.964,687,4.964,688,3.967,689,4.964,690,4.964,691,4.964,705,6.227,1070,6.071]],["title/interfaces/ICreateNews.html",[146,0.633,1071,3.282]],["body/interfaces/ICreateNews.html",[3,0.162,4,0.136,5,0.11,9,0.324,10,0.998,20,2.809,24,0.007,26,0.451,27,0.832,28,2.666,39,1.143,51,0.428,57,1.152,61,0.239,80,0.004,81,0.005,82,0.004,91,3.627,124,2.068,146,1.189,148,1.734,220,2.425,221,3.428,222,3.893,223,4.85,391,2.364,458,2.809,480,2.661,488,2.661,538,4.241,539,3.834,541,4.228,546,3.353,547,3.843,548,4.111,550,4.479,552,3.034,572,3.722,585,3.283,587,3.834,588,3.834,1071,4.979,1072,4.07,1073,6.476,1074,3.866,1075,3.866,1076,4.07,1077,4.07,1078,5.029,1079,3.866,1080,3.692]],["title/interfaces/ICurrentUser.html",[146,0.633,1081,2.384]],["body/interfaces/ICurrentUser.html",[1,4.209,3,0.17,4,0.143,5,0.115,9,0.34,10,1.028,12,2.254,15,2.36,16,1.925,17,2.413,24,0.007,25,0.511,26,0.433,28,2.483,39,1.261,61,0.224,80,0.004,81,0.005,82,0.004,146,1.086,148,1.817,224,2.36,229,3.69,237,5.13,396,4.045,1081,3.727,1082,4.52,1083,5.418,1084,4.564,1085,4.954,1086,3.442,1087,5.918,1088,5.13,1089,4.899,1090,3.567,1091,3.567]],["title/interfaces/IErrorType.html",[146,0.633,343,3.454]],["body/interfaces/IErrorType.html",[3,0.2,4,0.167,5,0.136,9,0.399,10,1.136,24,0.007,26,0.465,39,1.233,61,0.189,80,0.005,81,0.006,82,0.005,87,2.871,91,3.903,118,6.588,146,0.919,148,2.136,343,5.963,1092,6.193,1093,6.193]],["title/interfaces/IFindOptions.html",[146,0.633,1094,3.282]],["body/interfaces/IFindOptions.html",[3,0.193,4,0.161,5,0.131,9,0.385,10,1.11,20,3.332,24,0.007,26,0.422,27,0.934,61,0.246,80,0.005,81,0.006,82,0.005,99,3.537,146,1.069,148,2.057,480,3.157,1094,5.539,1095,4.827,1096,4.827,1097,5.443,1098,5.072,1099,7.385,1100,6.181,1101,4.38,1102,4.38,1103,5.117,1104,6.618,1105,6.618]],["title/interfaces/ILogger.html",[146,0.633,1106,3.662]],["body/interfaces/ILogger.html",[3,0.168,4,0.141,5,0.114,9,0.335,21,0.88,23,1.339,24,0.007,25,0.767,26,0.432,27,0.976,39,1.246,61,0.159,80,0.004,81,0.005,82,0.004,90,4.989,92,1.49,107,1.72,117,3.328,146,0.771,148,1.793,345,4.937,789,5.128,1106,5.675,1107,5.2,1108,6.078,1109,4.858,1110,7.434,1111,7.434,1112,5.842,1113,5.842,1114,6.616,1115,6.685,1116,5.842,1117,6.616,1118,5.842,1119,5.842,1120,5.842,1121,6.616,1122,5.842,1123,5.2,1124,5.2]],["title/interfaces/INewsProperties.html",[66,3.005,146,0.633]],["body/interfaces/INewsProperties.html",[0,0.165,3,0.113,4,0.194,5,0.076,7,1.739,8,2.258,9,0.225,10,0.777,12,1.021,16,0.828,24,0.007,25,0.489,26,0.428,27,0.88,28,2.414,30,2.862,34,1.265,39,1.185,51,0.418,52,1.299,54,2.985,55,0.952,56,1.273,57,0.799,61,0.21,62,1.377,64,2.652,66,4.567,70,1.712,76,2.979,80,0.003,81,0.004,82,0.003,91,3.439,143,0.694,146,0.517,148,1.203,220,2.74,221,3.433,222,3.218,224,1.562,244,2.682,273,3.616,335,3.414,360,2.682,391,1.273,396,1.712,413,1.846,416,1.948,424,1.846,450,1.846,480,2.668,536,4.665,538,3.841,539,2.985,544,2.2,545,2.682,546,3.378,547,3.847,548,3.898,549,4.38,550,4.074,551,5.569,552,3.465,553,5.291,554,5.053,555,1.755,559,2.682,560,3.735,561,2.682,564,2.823,565,3.877,566,2.823,567,2.682,568,2.561,569,2.682,572,3.403,574,4.092,575,4.567,579,2.561,581,2.823,583,2.823,585,3.292,586,2.823,587,2.985,588,2.065,589,2.682,590,2.561,591,2.561,592,2.455,593,2.823,594,2.823,595,2.823,596,2.823,597,2.823,598,2.561,599,2.823,600,2.823,601,4.08,602,3.218,603,3.308,604,3.054,605,3.134,606,3.218,607,4.009,608,3.735,609,2.823,610,4.08,611,2.823,612,2.823,613,4.792,614,2.277,615,2.277]],["title/interfaces/INewsScope.html",[146,0.633,1079,3.282]],["body/interfaces/INewsScope.html",[3,0.166,4,0.139,5,0.112,9,0.331,10,1.011,20,2.867,24,0.007,26,0.44,27,0.936,28,1.91,39,0.936,51,0.431,57,1.176,61,0.241,80,0.004,81,0.005,82,0.004,91,2.46,124,2.11,146,1.195,148,1.77,220,2.448,221,3.472,222,3.931,223,5.161,391,2.395,458,4.04,480,2.716,488,2.716,538,4.282,539,3.884,541,4.283,546,3.314,547,3.868,548,2.789,550,3.038,552,3.074,572,3.771,585,3.35,587,3.884,588,3.884,1071,3.946,1072,4.153,1073,5.132,1074,3.946,1075,3.946,1076,4.153,1077,4.153,1078,6.561,1079,5.044,1080,5.597]],["title/interfaces/IPagination.html",[146,0.633,1100,3.282]],["body/interfaces/IPagination.html",[3,0.193,4,0.161,5,0.131,9,0.385,10,1.11,20,3.332,24,0.007,26,0.422,27,0.934,61,0.246,80,0.005,81,0.006,82,0.005,99,4.106,146,1.069,148,2.057,480,3.157,1094,4.586,1095,4.827,1096,4.827,1097,4.039,1098,3.763,1099,6.618,1100,5.951,1101,5.903,1102,5.903,1103,5.117,1104,6.618,1105,6.618]],["title/interfaces/IResolvedUser.html",[146,0.633,1087,3.282]],["body/interfaces/IResolvedUser.html",[1,3.274,3,0.168,4,0.14,5,0.114,9,0.335,10,1.018,12,1.52,15,3.428,16,1.948,17,3.505,24,0.007,25,0.503,26,0.454,28,3.007,39,1.258,61,0.222,80,0.004,81,0.005,82,0.004,146,1.078,148,1.79,224,3.428,229,2.488,237,3.99,396,3.967,1081,2.899,1082,4.452,1083,3.653,1084,4.543,1085,4.44,1086,2.677,1087,5.59,1088,3.99,1089,5.62,1090,5.182,1091,5.182]],["title/interfaces/IRole.html",[146,0.633,1089,3.134]],["body/interfaces/IRole.html",[1,3.555,3,0.182,4,0.152,5,0.123,9,0.363,10,1.072,12,1.65,15,2.524,16,1.984,17,2.581,24,0.007,25,0.764,26,0.38,28,2.59,39,1.255,61,0.231,80,0.004,81,0.005,82,0.004,146,1.12,148,1.944,224,2.524,229,2.702,237,4.333,396,3.707,1081,3.148,1082,4.834,1083,3.967,1084,4,1085,4.61,1086,2.907,1087,5.35,1088,4.333,1089,5.543,1090,3.816,1091,3.816]],["title/interfaces/IRoleProperties.html",[146,0.633,1125,3.662]],["body/interfaces/IRoleProperties.html",[0,0.126,3,0.16,4,0.134,5,0.108,7,1.324,8,2.867,9,0.458,10,0.987,24,0.007,25,0.773,26,0.425,27,0.873,30,2.908,34,1.368,35,4.506,39,1.186,51,0.362,52,1.208,53,3.477,55,1.348,56,1.803,57,1.132,59,2.425,61,0.217,62,1.95,63,2.074,70,2.425,76,2.484,80,0.004,81,0.005,82,0.004,146,0.733,148,1.703,220,2.635,224,3.572,413,2.614,450,2.614,480,3.388,494,3.626,495,3.626,746,3.344,817,4.7,982,3.477,1058,3.997,1084,4.884,1086,3.663,1125,6.092,1126,4.236,1127,4.236,1128,4.939,1129,4.236,1130,3.797,1131,4.537,1132,3.626,1133,4.939,1134,4.939,1135,4.939,1136,4.939,1137,5.491]],["title/interfaces/IUserProperties.html",[146,0.633,1138,3.662]],["body/interfaces/IUserProperties.html",[0,0.125,3,0.158,4,0.132,5,0.107,7,1.31,8,2.847,9,0.513,10,0.98,12,1.431,24,0.007,25,0.685,26,0.434,27,0.869,30,3.078,34,1.044,35,3.44,39,1.21,51,0.399,52,1.2,53,3.44,54,2.893,55,1.333,56,1.784,57,1.12,59,2.399,61,0.194,62,1.929,70,2.399,76,3.198,80,0.004,81,0.005,82,0.004,146,0.725,148,1.685,220,2.692,396,2.399,413,2.586,552,3.725,598,3.587,817,4.667,1084,4.719,1085,2.984,1086,4.001,1090,5.252,1091,5.252,1137,4.191,1138,6.061,1139,4.488,1140,5.964,1141,4.886,1142,4.886,1143,4.886,1144,4.886,1145,4.488,1146,4.488,1147,4.488,1148,4.488,1149,4.886,1150,4.886]],["title/interfaces/InlineAttachment.html",[146,0.633,154,2.89]],["body/interfaces/InlineAttachment.html",[3,0.179,4,0.15,5,0.121,7,2.162,9,0.358,10,1.062,24,0.007,25,0.537,26,0.303,39,1.247,61,0.169,80,0.004,81,0.005,82,0.004,146,1.236,147,4.664,148,1.912,149,3.903,150,5.308,151,5.919,152,4.071,153,4.071,154,5.074,155,4.071,156,5.756,157,4.071,158,5.074,159,3.903,160,4.071,161,4.664,162,5.058,163,5.058,164,4.664,165,4.079,166,3.903,167,4.071,168,4.071,169,4.071]],["title/modules/InterceptorModule.html",[170,1.343,368,3.454]],["body/modules/InterceptorModule.html",[0,0.144,3,0.182,4,0.152,5,0.123,24,0.007,51,0.427,61,0.172,63,2.366,80,0.004,81,0.005,82,0.004,111,1.225,124,2.318,133,4.834,170,2.189,172,2.524,184,2.907,275,4.543,296,3.441,368,5.632,382,4.711,383,6.11,446,4.285,763,3.967,772,5.35,774,4.12,810,6.392,1040,4.711,1050,3.887,1151,6.332,1152,6.392,1153,5.35,1154,5.969,1155,4.711,1156,8.859,1157,4.249,1158,5.35,1159,6.392,1160,6.763,1161,4.138]],["title/injectables/JwtAuthGuard.html",[210,0.928,1162,3.662]],["body/injectables/JwtAuthGuard.html",[0,0.166,3,0.21,4,0.176,5,0.142,7,1.743,24,0.007,51,0.428,61,0.199,80,0.005,81,0.006,82,0.005,111,1.413,187,5.576,210,1.648,211,2.673,1162,6.503,1163,6.5,1164,6.5,1165,7.303,1166,7.303]],["title/interfaces/JwtConstants.html",[146,0.633,191,3.282]],["body/interfaces/JwtConstants.html",[3,0.18,4,0.151,5,0.122,9,0.36,10,1.066,24,0.007,26,0.429,39,1.212,51,0.315,61,0.211,63,2.342,73,6.536,79,5.932,80,0.004,81,0.005,82,0.004,136,1.53,146,0.827,148,1.924,191,6.04,208,3.206,229,2.675,424,2.952,541,4.514,703,4.515,1083,4.868,1167,5.125,1168,8.076,1169,6.915,1170,6.268,1171,6.268,1172,5.125,1173,4.289,1174,4.515,1175,4.096,1176,6.268,1177,5.579,1178,5.579,1179,5.579,1180,6.268,1181,5.579,1182,4.515,1183,4.785,1184,6.268,1185,5.125,1186,6.268,1187,5.125,1188,5.579,1189,6.268,1190,6.268,1191,5.579,1192,5.579]],["title/interfaces/JwtPayload.html",[146,0.633,1193,3.662]],["body/interfaces/JwtPayload.html",[3,0.177,4,0.148,5,0.12,7,1.836,9,0.354,10,1.055,24,0.007,26,0.447,39,1.23,51,0.31,57,1.258,61,0.168,63,3.28,80,0.004,81,0.005,82,0.004,99,4.024,146,0.814,148,1.893,1081,4.168,1177,7.812,1178,7.812,1179,7.812,1181,7.812,1182,6.322,1183,6.701,1187,6.289,1188,6.846,1193,5.873,1194,5.49,1195,5.49,1196,6.289]],["title/injectables/JwtStrategy.html",[178,3.454,210,0.928]],["body/injectables/JwtStrategy.html",[0,0.125,3,0.159,4,0.133,5,0.108,7,1.319,9,0.317,12,1.87,18,1.319,21,0.71,23,1.081,24,0.007,25,0.619,26,0.348,27,0.742,51,0.458,61,0.15,62,1.943,63,2.682,80,0.004,81,0.005,82,0.004,87,2.331,92,1.438,107,1.07,111,1.07,136,1.413,143,0.98,178,5.168,179,6.236,187,4.221,191,3.783,192,4.52,194,4.921,210,1.389,211,2.024,213,2.313,230,2.046,242,2.359,245,2.244,276,4.329,394,2.156,422,3.005,457,2.538,1044,3.464,1056,4.221,1083,3.464,1086,2.538,1154,5.478,1183,5.478,1193,6.436,1197,4.921,1198,5.529,1199,6.126,1200,5.529,1201,7.175,1202,5.529,1203,7.503,1204,5.529,1205,4.221,1206,4.921,1207,5.206,1208,5.529,1209,5.529,1210,5.529,1211,5.529,1212,5.529,1213,5.529,1214,5.529,1215,5.529,1216,5.529,1217,5.529,1218,4.921,1219,5.529,1220,4.221,1221,4.324,1222,5.529,1223,5.529,1224,4.52,1225,5.529,1226,4.921,1227,4.921,1228,5.529,1229,5.529,1230,3.213]],["title/injectables/JwtValidationAdapter.html",[179,3.282,210,0.928]],["body/injectables/JwtValidationAdapter.html",[0,0.12,1,3.906,3,0.152,4,0.127,5,0.103,9,0.303,16,1.748,21,0.689,23,1.048,24,0.007,25,0.6,26,0.338,27,0.72,39,1.203,51,0.35,61,0.143,80,0.004,81,0.005,82,0.004,92,1.394,107,1.346,111,1.021,124,1.931,136,1.37,179,4.761,210,1.346,211,1.931,213,2.566,230,2.36,243,3.906,245,2.176,275,4.81,276,3.781,422,2.867,602,3.365,603,3.459,604,3.194,605,3.277,606,3.365,607,4.192,723,4.192,782,5.41,1056,5.312,1063,4.192,1083,5.186,1085,3.781,1183,7.065,1196,5.688,1207,5.977,1231,6.365,1232,4.312,1233,6.958,1234,6.958,1235,6.958,1236,5.275,1237,6.958,1238,5.275,1239,6.958,1240,4.043,1241,5.688,1242,5.312,1243,5.011,1244,6.958,1245,6.958,1246,6.192,1247,6.192,1248,5.275,1249,5.275,1250,5.275,1251,5.275,1252,6.958,1253,5.275,1254,5.275,1255,5.275,1256,5.275,1257,5.275]],["title/injectables/LearnroomFacade.html",[210,0.928,1258,3.282]],["body/injectables/LearnroomFacade.html",[0,0.137,3,0.174,4,0.145,5,0.118,9,0.346,18,1.44,21,0.751,23,1.143,24,0.007,25,0.655,26,0.369,27,0.785,51,0.438,52,1.014,57,1.231,61,0.164,80,0.004,81,0.005,82,0.004,87,1.961,92,1.521,107,1.168,111,1.168,136,1.189,143,1.07,210,1.469,211,2.209,213,2.41,220,2.624,229,2.576,230,2.164,242,2.576,245,1.888,391,1.961,445,4.261,452,4.959,453,4.573,454,4.755,465,5.794,477,4.755,488,3.575,622,3.087,626,3.087,632,3.999,672,5.739,674,6.754,679,5.794,1258,5.193,1259,5.372,1260,6.036,1261,6.036,1262,6.036,1263,6.204,1264,7.589,1265,4.755,1266,7.589,1267,5.794,1268,6.754,1269,6.036]],["title/modules/LearnroomModule.html",[170,1.343,1270,3.282]],["body/modules/LearnroomModule.html",[0,0.143,3,0.182,4,0.152,5,0.123,24,0.007,51,0.445,61,0.172,80,0.004,81,0.005,82,0.004,111,1.223,170,2.186,172,2.519,173,3.585,180,4.384,181,3.33,182,2.977,184,3.585,205,4.115,616,5.583,626,3.232,672,5.805,676,5.583,751,3.142,1258,6.65,1270,6.675,1271,5.624,1272,5.624,1273,5.624,1274,6.319,1275,3.548,1276,6.319]],["title/classes/LearnroomTestHelper.html",[0,0.109,1277,3.921]],["body/classes/LearnroomTestHelper.html",[0,0.109,2,0.976,3,0.138,4,0.115,5,0.093,9,0.275,10,0.894,16,1.377,18,1.769,21,0.908,23,1.117,24,0.007,25,0.687,26,0.435,27,0.767,34,1.634,41,2.542,51,0.373,52,1.095,55,1.162,57,0.976,61,0.13,80,0.003,81,0.005,82,0.003,92,1.306,107,1.663,136,1.46,143,1.476,220,2.649,229,3.163,264,2.315,316,2.521,391,3.132,394,3.351,396,3.478,397,4.084,398,3.275,399,3.127,420,4.389,480,2.254,498,5.329,532,2.998,1277,5.329,1278,3.912,1279,7.413,1280,6.518,1281,6.518,1282,6.518,1283,7.959,1284,7.959,1285,7.959,1286,6.518,1287,4.785,1288,4.785,1289,6.518,1290,4.785,1291,6.518,1292,7.084,1293,4.785,1294,6.518,1295,4.785,1296,4.785,1297,4.785,1298,4.785,1299,3.275,1300,2.998,1301,4.259,1302,7.413,1303,6.06,1304,4.785,1305,4.785,1306,4.785,1307,4.785,1308,4.785,1309,4.785,1310,4.785,1311,4.785,1312,4.785,1313,4.785]],["title/classes/LessonTaskInfo.html",[0,0.109,1314,3.134]],["body/classes/LessonTaskInfo.html",[0,0.132,2,1.189,3,0.168,4,0.14,5,0.114,7,1.772,8,3.677,9,0.335,10,1.018,14,2.896,15,2.959,16,1.568,17,3.026,21,0.899,24,0.007,26,0.418,28,2.459,29,2.452,30,2.963,32,1.901,33,2.237,34,1.412,39,0.74,41,2.274,42,2.431,43,3.283,44,2.899,45,2.899,46,2.431,47,2.899,48,2.821,49,2.377,50,2.899,51,0.411,52,1.247,55,1.416,56,1.894,57,1.189,59,2.548,61,0.158,76,2.611,80,0.004,81,0.005,82,0.004,391,2.794,423,5.59,458,3.691,527,3.274,530,4.923,531,3.653,532,4.652,536,4.169,537,3.67,538,3.073,664,5.19,1314,4.852,1315,7.271,1316,5.831,1317,5.19]],["title/injectables/Logger.html",[210,0.928,783,2.693]],["body/injectables/Logger.html",[0,0.142,3,0.18,4,0.151,5,0.122,7,1.854,24,0.007,32,1.605,51,0.391,61,0.17,64,2.498,75,2.739,80,0.004,81,0.005,82,0.004,92,1.256,111,1.213,210,1.504,211,2.294,239,3.927,243,4.362,455,4.096,623,3.395,630,4.362,770,3.206,783,5.191,789,4.449,821,3.777,853,3.206,881,4.289,910,3.927,1044,3.927,1050,3.863,1106,6.739,1109,5.518,1240,3.642,1318,5.579,1319,8.827,1320,6.268,1321,6.268,1322,4.515,1323,5.579,1324,4.785,1325,5.579,1326,3.927,1327,4.096,1328,6.915,1329,4.515,1330,6.268,1331,6.268,1332,5.579,1333,4.515,1334,5.579,1335,3.927,1336,6.268,1337,6.268,1338,6.268]],["title/modules/LoggerModule.html",[170,1.343,369,3.005]],["body/modules/LoggerModule.html",[0,0.155,3,0.197,4,0.165,5,0.133,24,0.007,51,0.412,61,0.186,80,0.005,81,0.006,82,0.005,111,1.323,170,2.293,172,2.725,173,3.76,180,4.599,181,3.602,182,3.22,184,3.76,205,4.316,369,5.979,783,5.509,1339,6.084,1340,6.084,1341,6.084,1342,6.836,1343,6.836]],["title/interfaces/Mail.html",[146,0.633,165,2.527]],["body/interfaces/Mail.html",[3,0.166,4,0.139,5,0.113,7,2.045,9,0.332,10,1.012,24,0.007,25,0.498,26,0.44,27,0.964,39,1.257,61,0.157,80,0.004,81,0.005,82,0.004,146,1.215,147,4.447,148,1.773,149,3.619,150,4.901,151,4.823,152,3.775,153,3.775,154,4.447,155,3.775,156,3.775,157,3.775,158,4.901,159,3.619,160,3.775,161,5.164,162,4.823,163,4.823,164,5.164,165,4.772,166,5.37,167,5.601,168,5.601,169,5.601]],["title/interfaces/MailAttachment.html",[146,0.633,150,2.89]],["body/interfaces/MailAttachment.html",[3,0.176,4,0.147,5,0.119,7,2.089,9,0.351,10,1.05,24,0.007,25,0.755,26,0.406,39,1.255,61,0.166,80,0.004,81,0.005,82,0.004,146,1.231,147,4.612,148,1.878,149,3.834,150,5.274,151,5.002,152,5.719,153,5.719,154,4.612,155,3.999,156,3.999,157,3.999,158,5.033,159,3.834,160,3.999,161,4.612,162,5.002,163,5.002,164,4.612,165,4.033,166,3.834,167,3.999,168,3.999,169,3.999]],["title/interfaces/MailContent.html",[146,0.633,158,2.89]],["body/interfaces/MailContent.html",[3,0.176,4,0.148,5,0.119,7,2.09,9,0.352,10,1.051,24,0.007,25,0.529,26,0.372,27,0.793,39,1.245,61,0.167,80,0.004,81,0.005,82,0.004,146,1.232,147,5.278,148,1.882,149,3.842,150,5.038,151,5.008,152,4.007,153,4.007,154,5.278,155,4.007,156,4.007,157,4.007,158,5.278,159,5.487,160,5.723,161,4.618,162,5.008,163,5.008,164,4.618,165,4.038,166,3.842,167,4.007,168,4.007,169,4.007]],["title/modules/MailModule.html",[170,1.343,1344,3.282]],["body/modules/MailModule.html",[0,0.136,3,0.172,4,0.144,5,0.117,21,0.593,23,0.902,24,0.007,25,0.651,26,0.402,27,0.619,39,1.05,51,0.416,61,0.163,80,0.004,81,0.005,82,0.004,92,1.2,107,1.159,111,1.159,136,1.487,143,1.338,146,0.791,170,2.316,172,2.387,184,2.749,185,2.978,205,3.156,555,3.381,774,3.156,775,4.314,1344,5.66,1345,4.314,1346,4.897,1347,5.765,1348,6.63,1349,5.989,1350,3.863,1351,5.957,1352,6.762,1353,4.314,1354,3.914,1355,5.66,1356,5.33,1357,5.439,1358,5.439,1359,5.439,1360,5.765,1361,4.897,1362,4.572,1363,4.897,1364,4.897,1365,6.174,1366,4.572,1367,4.897,1368,5.33,1369,5.33,1370,5.33]],["title/interfaces/MailModuleOptions.html",[146,0.633,1348,3.662]],["body/interfaces/MailModuleOptions.html",[0,0.134,3,0.17,4,0.142,5,0.115,9,0.339,10,1.027,24,0.007,25,0.51,26,0.433,39,1.2,51,0.413,61,0.161,80,0.004,81,0.005,82,0.004,111,1.144,136,1.475,143,1.327,146,0.78,148,1.814,170,2.301,184,2.713,185,2.938,205,3.114,555,2.646,774,3.114,775,4.256,1344,5.124,1345,4.256,1347,4.511,1348,6.275,1350,3.023,1351,5.393,1352,6.72,1353,4.256,1354,3.861,1355,5.625,1356,5.259,1357,6.423,1358,6.423,1359,6.423,1360,5.717,1361,4.831,1362,4.511,1363,4.831,1364,4.831,1365,6.122,1366,4.511,1367,4.831,1368,5.259,1369,5.259,1370,5.259]],["title/injectables/MailService.html",[210,0.928,1355,3.282]],["body/injectables/MailService.html",[0,0.14,3,0.177,4,0.148,5,0.12,9,0.353,18,1.833,21,0.761,23,1.157,24,0.007,25,0.663,26,0.373,27,0.795,39,0.976,51,0.421,61,0.167,80,0.004,81,0.005,82,0.004,87,2.496,92,1.54,107,1.191,111,1.191,146,0.813,165,4.621,210,1.487,211,2.253,213,2.432,230,2.191,245,1.925,394,2.996,424,2.9,681,3.456,758,5.473,1050,3.82,1350,4.284,1353,4.434,1354,4.023,1355,5.257,1358,4.434,1359,4.434,1371,5.033,1372,6.838,1373,6.156,1374,8.193,1375,6.696,1376,6.156,1377,6.838,1378,6.156,1379,5.479,1380,5.479,1381,5.479,1382,5.479,1383,4.7]],["title/interfaces/MailServiceOptions.html",[146,0.633,1375,3.662]],["body/interfaces/MailServiceOptions.html",[0,0.146,3,0.185,4,0.155,5,0.125,9,0.369,10,1.083,18,1.536,24,0.007,26,0.384,39,1.182,51,0.43,61,0.175,80,0.004,81,0.005,82,0.004,87,2.566,111,1.246,146,0.85,148,1.976,165,4.162,210,1.529,213,1.869,230,1.835,245,2.013,394,3.08,424,3.032,681,3.614,758,4.207,1050,3.201,1350,3.293,1353,4.637,1354,4.207,1355,4.405,1358,6.417,1359,6.417,1371,5.263,1374,7.605,1375,6.524,1377,5.73,1379,5.73,1380,5.73,1381,5.73,1382,5.73,1383,4.915]],["title/modules/MongoDatabaseModule.html",[170,1.343,1384,3.921]],["body/modules/MongoDatabaseModule.html",[0,0.14,3,0.177,4,0.148,5,0.15,12,1.604,21,0.609,23,0.927,24,0.007,25,0.531,26,0.299,27,0.637,51,0.454,55,1.495,61,0.167,63,2.301,71,4.212,80,0.004,81,0.005,82,0.004,92,1.234,107,1.191,111,1.191,143,1.091,170,2.345,172,2.454,185,3.06,345,3.346,457,2.826,555,3.44,933,6.281,934,6.281,935,6.281,1346,5.033,1347,5.866,1350,3.93,1351,6.032,1384,6.848,1385,5.257,1386,5.257,1387,4.7,1388,7.171,1389,6.156,1390,5.479,1391,4.7,1392,3.346,1393,5.479,1394,6.156,1395,4.7,1396,4.7,1397,5.866,1398,3.709,1399,3.577,1400,6.838,1401,4.023,1402,4.212,1403,5.033,1404,4.434]],["title/modules/MongoMemoryDatabaseModule.html",[170,1.343,1405,3.662]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.111,3,0.141,4,0.118,5,0.095,18,1.169,21,0.656,23,0.738,24,0.007,25,0.423,26,0.322,27,0.507,34,0.932,51,0.435,55,1.608,56,1.592,61,0.218,63,1.831,80,0.003,81,0.005,82,0.003,87,1.592,92,0.982,107,1.282,111,0.948,136,1.583,143,1.424,170,2.25,172,1.953,184,2.249,185,2.436,205,2.581,213,2.178,230,1.888,245,2.346,265,3.74,345,2.663,394,2.926,477,3.069,555,2.965,630,2.75,681,3.718,763,3.069,770,3.388,774,3.49,782,4.328,889,2.581,1001,3.201,1243,3.529,1265,3.069,1335,3.069,1346,4.005,1347,5.056,1350,3.838,1351,6.046,1385,5.134,1386,5.134,1387,3.74,1388,6.57,1395,6.135,1396,3.74,1398,3.991,1402,3.352,1404,4.77,1405,5.728,1406,6.053,1407,4.899,1408,8.395,1409,4.899,1410,5.894,1411,6.677,1412,6.677,1413,7.873,1414,3.069,1415,4.005,1416,4.36,1417,5.894,1418,5.415,1419,4.36,1420,3.74,1421,3.529,1422,4.005,1423,3.352,1424,4.005,1425,3.74,1426,5.894,1427,4.36,1428,2.663,1429,4.36,1430,4.36,1431,4.899,1432,3.352,1433,4.899,1434,4.899,1435,5.056,1436,3.201,1437,3.201,1438,3.529,1439,4.36,1440,4.899,1441,4.899]],["title/classes/MongoSharedConnection.html",[0,0.109,1442,3.662]],["body/classes/MongoSharedConnection.html",[0,0.131,2,1.178,3,0.166,4,0.139,5,0.113,7,1.761,9,0.332,21,0.731,23,0.87,24,0.007,25,0.498,26,0.281,27,0.597,49,3.008,51,0.371,55,1.792,61,0.157,80,0.004,81,0.005,82,0.004,92,1.479,107,1.428,136,1.138,213,2.63,230,2.444,234,5.05,245,2.308,264,2.794,296,3.14,340,4.447,345,3.14,458,4.044,1132,3.775,1385,5.566,1386,5.566,1398,4.447,1399,4.98,1414,3.619,1428,3.14,1432,3.953,1435,6.21,1442,5.635,1443,4.723,1444,8.133,1445,7.007,1446,7.381,1447,5.777,1448,4.723,1449,5.777,1450,6.569,1451,7.24,1452,3.953,1453,5.858,1454,4.723,1455,5.316,1456,5.777,1457,5.777,1458,5.777,1459,5.777,1460,5.777,1461,5.777,1462,5.777,1463,3.619,1464,5.777,1465,3.481,1466,5.777]],["title/classes/MongoSharedDriver.html",[0,0.109,1397,3.662]],["body/classes/MongoSharedDriver.html",[0,0.154,2,1.385,3,0.195,4,0.163,5,0.132,7,1.947,9,0.39,10,1.119,21,0.672,24,0.007,32,1.739,33,2.046,34,1.552,51,0.41,55,1.649,61,0.185,80,0.005,81,0.006,82,0.005,87,2.842,264,3.285,1385,5.583,1386,5.583,1397,6.229,1398,4.092,1399,5.082,1437,5.929,1442,5.184,1467,6.044,1468,8.746,1469,7.784,1470,8.159,1471,6.791]],["title/classes/News.html",[0,0.109,546,1.756]],["body/classes/News.html",[0,0.151,2,0.661,3,0.093,4,0.172,5,0.063,7,1.705,8,3.115,9,0.186,10,0.675,12,0.845,14,1.919,15,1.962,16,1.403,17,2.006,18,0.774,21,0.904,23,0.741,24,0.007,25,0.649,26,0.437,27,0.87,28,2.366,29,2.392,30,3.051,32,1.523,33,1.793,34,1.358,39,1.135,41,1.264,42,1.352,43,2.536,44,1.612,45,1.612,46,1.352,47,1.612,48,1.568,49,1.321,50,1.612,51,0.393,52,1.2,54,3.501,55,0.787,56,1.053,57,0.661,61,0.194,62,1.139,64,2.372,66,4.896,70,1.417,76,2.664,80,0.002,81,0.003,82,0.002,91,3.209,92,0.986,107,0.627,143,0.574,146,0.428,220,2.152,221,3.681,222,3.638,224,2.372,244,2.218,273,3.234,335,2.966,360,2.218,391,1.053,396,2.151,413,2.318,416,3.303,424,1.527,450,2.318,480,2.803,531,3.728,536,4.388,538,3.501,539,2.593,544,1.82,545,2.218,546,3.392,547,3.674,548,3.638,549,3.882,550,3.501,551,4.785,552,3.135,553,4.546,554,4.341,555,2.664,556,3.758,559,3.368,560,4.011,561,3.368,564,3.545,565,4.546,566,3.545,567,3.368,568,3.216,569,3.368,572,3.398,574,3.34,575,3.728,579,3.216,581,3.545,583,3.545,585,3.457,586,2.335,587,2.593,588,1.708,589,2.218,590,3.216,591,3.216,592,3.084,593,2.335,594,2.335,595,2.335,596,2.335,597,2.335,598,2.118,599,2.335,600,2.335,601,3.545,602,2.878,603,2.958,604,2.731,605,2.803,606,2.878,607,3.585,608,3.34,609,2.335,610,3.545,611,2.335,612,2.335,613,4.285,614,1.884,615,1.884,1472,4.922,1473,3.242,1474,3.242,1475,3.242,1476,3.242,1477,3.242,1478,3.242,1479,3.242,1480,3.242,1481,3.242,1482,3.242,1483,3.242,1484,3.242]],["title/controllers/NewsController.html",[749,2.147,1485,3.662]],["body/controllers/NewsController.html",[0,0.083,3,0.106,4,0.089,5,0.072,9,0.211,10,0.742,12,2.178,16,1.142,21,0.746,23,1.135,24,0.007,25,0.65,26,0.366,27,0.779,29,2.035,34,0.699,39,1.083,51,0.42,52,0.908,57,0.75,61,0.1,80,0.003,81,0.004,82,0.003,87,1.195,92,1.084,107,1.459,111,0.712,126,3.036,136,1.708,143,1.336,213,2.652,228,2.939,230,2.473,242,1.569,243,3.036,245,2.357,448,4.109,450,2.547,546,3.404,552,2.949,588,2.849,591,3.534,623,3.293,632,2.849,658,2.945,713,4.84,716,3.941,742,1.779,749,1.646,751,1.828,876,2.403,895,4.938,1004,4.109,1039,3.006,1081,4.572,1098,3.971,1218,4.813,1485,4.129,1486,3.273,1487,2.403,1488,6.017,1489,4.897,1490,6.414,1491,5.428,1492,3.677,1493,4.897,1494,3.677,1495,3.534,1496,5.403,1497,3.677,1498,5.408,1499,3.677,1500,7.014,1501,3.273,1502,4.84,1503,4.622,1504,3.677,1505,4.421,1506,3.677,1507,5.408,1508,3.677,1509,4.813,1510,5.408,1511,3.7,1512,3.677,1513,5.094,1514,5.408,1515,3.677,1516,4.897,1517,3.273,1518,2.807,1519,5.157,1520,2.403,1521,3.006,1522,4.019,1523,3.273,1524,2.403,1525,2.807,1526,2.516,1527,2.648,1528,3.273,1529,3.273,1530,2.807,1531,3.677,1532,3.273,1533,3.273,1534,6.162,1535,3.273,1536,3.273,1537,5.782,1538,3.006,1539,3.273,1540,3.273,1541,3.273,1542,3.273,1543,3.273,1544,2.807,1545,3.006,1546,3.677,1547,6.414,1548,3.677,1549,3.677,1550,3.677,1551,5.408,1552,3.677]],["title/classes/NewsFilterQuery.html",[0,0.109,1502,3.282]],["body/classes/NewsFilterQuery.html",[0,0.164,2,1.144,3,0.161,4,0.135,5,0.109,9,0.322,10,0.993,16,1.53,21,0.794,24,0.007,26,0.39,27,0.929,29,2.166,39,1.076,51,0.426,52,0.942,61,0.152,68,5.311,80,0.004,81,0.005,82,0.004,124,3.212,136,1.105,221,4.134,222,3.88,223,4.833,228,3.936,458,3.601,480,2.642,546,3.289,547,3.704,728,4.956,731,4.956,732,4.956,735,5.777,736,5.921,737,4.364,741,6.105,742,2.713,744,6.93,745,5.921,746,3.38,747,4.04,748,3.514,1080,5.241,1502,4.956,1553,6.93,1554,4.586,1555,5.609,1556,5.216,1557,6.446,1558,5.609,1559,5.609,1560,5.609,1561,5.609,1562,6.446,1563,7.243,1564,5.609,1565,7.243,1566,5.609,1567,7.243,1568,5.921,1569,5.609,1570,5.609]],["title/classes/NewsMapper.html",[0,0.109,1527,3.454]],["body/classes/NewsMapper.html",[0,0.106,2,0.955,3,0.135,4,0.113,5,0.091,9,0.269,12,1.221,21,0.781,23,1.188,24,0.007,25,0.68,26,0.383,27,0.816,34,0.891,51,0.416,52,0.787,61,0.127,80,0.003,81,0.004,82,0.003,91,2.741,92,1.287,107,1.527,136,1.554,143,1.398,221,3.026,222,3.546,223,3.871,546,3.025,547,2.807,548,3.107,550,3.385,552,1.953,555,4.165,585,2.722,658,2.949,713,5.398,716,4.306,895,4.024,1071,5.016,1077,5.28,1079,5.398,1080,3.061,1502,5.398,1513,5.681,1526,5.398,1527,4.626,1571,4.169,1572,6.423,1573,6.423,1574,4.395,1575,6.423,1576,6.423,1577,4.684,1578,6.423,1579,4.684,1580,6.423,1581,4.684,1582,6.423,1583,4.684,1584,3.205,1585,3.576,1586,7.331,1587,3.576,1588,3.576,1589,3.205,1590,4.169,1591,4.684,1592,4.684,1593,4.684,1594,4.684,1595,4.684,1596,4.169,1597,4.684,1598,4.684,1599,4.684,1600,4.684,1601,4.684,1602,4.169,1603,4.684,1604,4.169,1605,6.423,1606,4.684,1607,4.684,1608,4.684,1609,4.684,1610,4.684,1611,4.684,1612,4.684,1613,4.684,1614,3.83,1615,4.684,1616,3.83,1617,4.684,1618,4.169,1619,4.169,1620,6.423,1621,4.684,1622,4.684,1623,4.684,1624,6.423,1625,6.423,1626,6.423,1627,4.684,1628,4.684]],["title/modules/NewsModule.html",[170,1.343,1629,3.454]],["body/modules/NewsModule.html",[0,0.132,3,0.167,4,0.14,5,0.113,24,0.007,51,0.464,61,0.158,80,0.004,81,0.005,82,0.004,111,1.126,170,2.076,172,2.32,173,3.404,180,4.164,181,3.067,182,2.742,184,3.404,185,3.687,196,6.21,205,3.908,271,2.977,369,5.686,523,3.646,751,3.687,1047,3.983,1436,3.803,1485,6.561,1491,4.192,1522,6.022,1523,5.18,1629,6.955,1630,5.18,1631,5.82,1632,5.18,1633,5.18,1634,5.93,1635,5.82,1636,6.231,1637,5.18,1638,5.82,1639,5.82,1640,5.18,1641,5.82,1642,5.82,1643,5.82,1644,3.803,1645,6.6,1646,5.82,1647,5.82,1648,5.82,1649,3.983]],["title/injectables/NewsRepo.html",[210,0.928,1634,3.134]],["body/injectables/NewsRepo.html",[0,0.077,3,0.097,4,0.081,5,0.066,7,1.213,9,0.194,10,0.697,16,1.074,21,0.876,23,1.3,24,0.007,25,0.745,26,0.425,27,0.893,32,0.866,33,1.019,34,0.643,43,3.185,51,0.42,52,1.223,55,1.235,56,1.099,57,0.69,61,0.092,69,3.577,80,0.002,81,0.004,82,0.002,92,1.019,107,1.693,111,0.655,136,1.643,143,1.082,210,0.984,211,1.238,213,2.682,220,2.045,230,2.461,234,4.178,243,3.428,245,2.551,289,6.677,291,5.435,292,3.322,293,4.525,294,4.525,295,4.525,296,2.763,297,4.525,298,4.525,299,4.525,305,3.011,306,6.286,308,3.011,310,3.011,312,3.011,314,3.011,316,2.679,317,3.011,319,3.011,321,3.011,345,2.763,355,4.254,394,2.381,458,3.036,544,3.428,546,3.237,547,3.646,549,2.763,552,3.187,554,3.322,589,4.646,591,4.437,614,3.548,615,3.548,622,1.731,623,2.221,632,2.679,643,4.89,658,2.334,718,2.954,805,2.039,859,4.398,889,2.679,963,4.662,1080,4.437,1094,5.426,1097,3.063,1098,2.854,1350,4.269,1402,2.315,1489,4.662,1556,2.437,1634,3.322,1650,3.011,1651,6.106,1652,5.084,1653,5.084,1654,3.384,1655,4.646,1656,3.384,1657,5.084,1658,3.384,1659,6.789,1660,4.525,1661,6.043,1662,6.789,1663,5.084,1664,3.384,1665,3.384,1666,3.384,1667,3.384,1668,3.384,1669,3.384,1670,3.384,1671,3.384,1672,3.384,1673,3.384,1674,3.384,1675,2.766,1676,3.384,1677,5.084,1678,3.384,1679,3.661,1680,3.384,1681,3.384,1682,5.084,1683,3.384,1684,5.084,1685,3.384,1686,3.384,1687,5.084,1688,5.084,1689,3.384,1690,3.011,1691,3.384,1692,2.583,1693,3.384,1694,2.437,1695,2.039,1696,6.106,1697,3.384,1698,3.384,1699,3.384]],["title/classes/NewsResponse.html",[0,0.109,1526,3.282]],["body/classes/NewsResponse.html",[0,0.083,2,0.747,3,0.105,4,0.201,5,0.071,9,0.21,10,0.74,12,2.121,15,2.551,16,1.8,17,2.609,21,0.904,24,0.007,25,0.609,26,0.454,27,0.814,28,2.607,29,2.466,39,1.167,51,0.379,52,1.592,61,0.1,68,4.423,80,0.003,81,0.004,82,0.003,91,3.211,124,3.433,136,1.261,221,3.015,222,3.096,223,3.857,224,3,228,2.931,234,3.691,391,1.752,480,3.015,546,3.459,547,3.787,548,3.64,549,3.479,550,3.373,552,3.482,553,4.38,554,4.183,574,2.057,575,2.295,588,2.842,590,4.614,722,4.41,723,3.25,724,4.41,725,4.118,731,4.831,732,4.831,735,4.61,736,4.41,737,3.25,740,5.219,741,5.085,742,1.772,747,2.639,748,4.01,1048,4.41,1327,3.525,1491,3.885,1526,3.691,1700,2.797,1701,6.617,1702,3.664,1703,6.284,1704,3.664,1705,5.42,1706,3.664,1707,3.664,1708,3.664,1709,4.118,1710,3.664,1711,4.61,1712,4.8,1713,3.664,1714,5.697,1715,3.664,1716,5.233,1717,3.664,1718,5.394,1719,3.664,1720,4.61,1721,2.759,1722,3.664,1723,2.797,1724,3.664,1725,3.664,1726,3.664,1727,3.664,1728,3.664,1729,4.118,1730,3.664,1731,5.697,1732,3.261,1733,3.664]],["title/classes/NewsScope.html",[0,0.109,1679,3.454]],["body/classes/NewsScope.html",[0,0.104,2,0.933,3,0.131,4,0.11,5,0.089,7,1.508,9,0.262,10,0.867,21,0.89,23,1.308,24,0.007,25,0.707,26,0.43,27,0.847,28,1.515,32,1.999,33,2.352,34,0.87,39,0.991,43,3.315,51,0.393,52,0.768,55,1.111,56,1.486,61,0.124,80,0.004,81,0.004,82,0.003,92,1.266,107,1.586,136,1.244,143,1.283,221,2.154,226,2.657,316,3.815,394,2.464,458,3.599,546,2.313,547,1.998,550,2.41,623,3.974,624,3.294,635,4.824,636,4.954,637,4.954,638,4.954,640,4.824,641,4.824,642,4.824,643,6.256,644,3.739,645,3.739,646,3.739,647,3.739,649,3.492,650,6.47,651,4.551,652,4.551,653,3.739,654,3.294,655,3.492,656,4.324,657,3.739,658,3.762,659,3.492,660,3.739,661,3.492,727,4.954,805,2.756,859,3.294,864,4.07,1080,4.129,1428,2.486,1463,2.865,1655,5.343,1679,6.104,1734,5.919,1735,4.07,1736,6.319,1737,6.319,1738,6.319,1739,4.573,1740,6.319,1741,4.573,1742,3.492,1743,4.324,1744,4.573,1745,4.573,1746,4.573,1747,6.319,1748,4.573,1749,4.573,1750,3.129,1751,4.573,1752,4.573,1753,6.319,1754,4.573,1755,4.573]],["title/interfaces/NewsTargetFilter.html",[146,0.633,1655,3.282]],["body/interfaces/NewsTargetFilter.html",[3,0.201,4,0.168,5,0.136,9,0.4,10,1.137,24,0.007,26,0.403,51,0.417,52,1.172,57,1.422,61,0.19,80,0.005,81,0.006,82,0.005,146,0.921,148,2.141,220,2.758,221,4.312,222,4.428,547,3.048,863,7.484,1655,5.673,1734,5.702,1756,6.207]],["title/injectables/NewsUc.html",[210,0.928,1522,3.005]],["body/injectables/NewsUc.html",[0,0.056,3,0.071,4,0.059,5,0.048,9,0.141,12,1.746,16,1.641,18,0.588,21,0.769,23,1.171,24,0.007,25,0.67,26,0.386,27,0.804,28,1.894,32,1.605,33,1.502,34,0.755,39,0.633,49,2.032,51,0.369,52,0.414,57,0.502,61,0.067,80,0.002,81,0.003,82,0.002,92,0.795,107,1.614,111,0.477,124,0.901,136,1.713,143,1.377,202,4.415,210,0.768,211,0.901,213,2.623,220,2.837,221,3.66,222,2.765,223,4.247,224,3.279,228,1.338,229,3.889,230,2.378,242,1.051,243,4.683,245,2.779,296,1.338,345,2.157,394,3.253,396,2.74,416,1.973,450,3.454,458,2.478,546,3.423,547,2.928,549,1.338,550,3.863,552,1.027,555,2.232,568,2.594,602,1.191,603,1.224,604,1.131,605,1.16,622,1.26,623,3.204,728,3.912,737,1.484,747,1.774,783,3.957,796,2.192,805,1.484,827,3.532,836,3.532,859,5.076,863,3.245,867,3.411,889,2.091,895,4.742,987,1.88,1004,2.306,1066,1.383,1071,3.912,1077,4.118,1079,4.822,1080,4.097,1085,2.157,1094,3.912,1098,1.383,1103,1.88,1157,2.709,1230,1.431,1327,1.609,1329,2.859,1350,3.428,1428,1.338,1488,3.03,1491,3.591,1522,2.487,1538,3.245,1590,2.192,1596,2.192,1602,5.088,1604,5.088,1619,3.532,1634,4.379,1637,2.192,1655,2.716,1675,2.014,1757,2.014,1758,3.969,1759,3.969,1760,3.969,1761,3.969,1762,4.985,1763,2.463,1764,2.463,1765,3.969,1766,2.463,1767,3.969,1768,2.463,1769,3.969,1770,2.463,1771,3.969,1772,4.437,1773,4.437,1774,3.258,1775,3.969,1776,2.463,1777,3.969,1778,2.463,1779,2.463,1780,3.969,1781,2.463,1782,2.859,1783,2.463,1784,4.985,1785,2.463,1786,3.969,1787,2.463,1788,2.463,1789,2.463,1790,3.245,1791,4.674,1792,2.463,1793,2.192,1794,2.463,1795,5.717,1796,2.463,1797,3.969,1798,2.463,1799,3.969,1800,2.463,1801,5.088,1802,2.463,1803,2.463,1804,2.463,1805,3.969,1806,2.463,1807,3.969,1808,2.463,1809,3.532,1810,2.463,1811,3.969,1812,2.463,1813,2.463,1814,4.985,1815,2.463,1816,3.969,1817,2.463,1818,2.463,1819,2.463,1820,2.192,1821,1.774,1822,2.463,1823,2.463,1824,2.463,1825,2.463,1826,2.192,1827,3.969,1828,2.463,1829,2.463,1830,2.463,1831,3.969,1832,2.463,1833,2.463,1834,2.463,1835,2.463,1836,2.463]],["title/classes/PaginationQuery.html",[0,0.109,1503,3.134]],["body/classes/PaginationQuery.html",[0,0.175,2,1.258,3,0.177,4,0.148,5,0.12,9,0.354,10,1.055,21,0.762,24,0.007,26,0.374,27,0.908,29,2.078,32,1.97,33,2.318,51,0.387,61,0.168,80,0.004,81,0.005,82,0.004,99,4.024,124,2.816,726,6.289,741,6.038,742,2.984,746,3.717,1062,6.289,1101,5.478,1102,5.902,1428,4.181,1463,4.82,1503,5.027,1661,6.846,1837,5.49,1838,6.701,1839,6.168,1840,4.053,1841,7.693,1842,7.693,1843,7.693,1844,6.168,1845,6.168,1846,6.846,1847,6.168,1848,8.383,1849,5.49,1850,6.168,1851,6.168,1852,6.168,1853,6.168]],["title/classes/PaginationResponse.html",[0,0.109,1520,3.134]],["body/classes/PaginationResponse.html",[0,0.134,2,1.207,3,0.17,4,0.143,5,0.115,9,0.34,10,1.028,18,1.413,21,0.883,23,0.892,24,0.007,25,0.511,26,0.433,27,0.923,29,2.336,51,0.298,61,0.161,80,0.004,81,0.005,82,0.004,99,4.259,306,6.105,345,4.074,740,5.494,742,2.864,1050,4.436,1101,6.05,1102,6.05,1520,4.899,1854,5.269,1855,6.335,1856,7.497,1857,5.92,1858,5.92,1859,5.92,1860,5.92,1861,5.92,1862,5.92,1863,5.92,1864,5.92,1865,5.92]],["title/injectables/ParseObjectIdPipe.html",[210,0.928,1519,3.282]],["body/injectables/ParseObjectIdPipe.html",[0,0.149,3,0.188,4,0.158,5,0.128,9,0.376,21,0.648,23,0.986,24,0.007,25,0.565,26,0.318,27,0.677,33,2.404,34,1.245,39,1.167,41,3.112,51,0.433,55,1.59,57,1.335,61,0.178,80,0.005,81,0.006,82,0.005,92,1.599,107,1.267,111,1.267,136,1.289,143,1.16,210,1.544,211,2.396,220,1.972,255,3.675,264,3.167,630,3.675,1051,5.461,1519,5.461,1721,4.082,1866,7.102,1867,5.352,1868,7.98,1869,6.547,1870,7.98,1871,6.547,1872,7.98,1873,6.547,1874,6.547]],["title/interfaces/PlainTextMailContent.html",[146,0.633,161,2.89]],["body/interfaces/PlainTextMailContent.html",[3,0.177,4,0.148,5,0.12,7,2.154,9,0.353,10,1.054,24,0.007,25,0.531,26,0.373,27,0.795,39,1.251,61,0.167,80,0.004,81,0.005,82,0.004,146,1.233,147,4.63,148,1.889,149,3.857,150,5.047,151,5.021,152,4.023,153,4.023,154,4.63,155,4.023,156,4.023,157,4.023,158,5.285,159,3.857,160,4.023,161,5.047,162,5.899,163,5.899,164,4.63,165,4.048,166,3.857,167,4.023,168,4.023,169,4.023]],["title/classes/ResolvedUser.html",[0,0.109,1221,2.89]],["body/classes/ResolvedUser.html",[0,0.131,2,1.174,3,0.165,4,0.139,5,0.112,9,0.33,10,1.01,15,3.236,16,1.715,17,3.309,21,0.922,24,0.007,26,0.457,28,2.835,29,2.516,39,1.204,51,0.37,57,1.174,61,0.2,80,0.004,81,0.005,82,0.004,224,3.236,396,3.548,630,4.134,740,5.678,742,2.784,1084,4.153,1086,3.727,1087,5.556,1089,4.812,1090,4.892,1091,4.892,1221,4.437,1875,4.705,1876,5.755,1877,5.755,1878,5.755,1879,5.755,1880,5.755,1881,5.755,1882,5.755,1883,5.755]],["title/classes/ResolvedUserMapper.html",[0,0.109,1884,3.662]],["body/classes/ResolvedUserMapper.html",[0,0.137,2,1.236,3,0.174,4,0.146,5,0.118,9,0.348,12,2.342,16,1.28,21,0.6,23,0.913,24,0.007,25,0.656,26,0.294,27,0.627,32,1.551,33,1.826,34,1.152,39,1.056,51,0.383,52,1.018,61,0.165,80,0.004,81,0.005,82,0.004,92,1.525,107,1.173,136,1.193,143,1.074,224,3.476,555,3.723,716,3.68,1084,4.254,1086,4.004,1221,5.255,1574,5.206,1584,4.146,1589,4.146,1614,4.954,1616,4.954,1618,5.393,1884,5.808,1885,5.393,1886,7.607,1887,6.06,1888,4.954,1889,5.393,1890,6.06,1891,5.393,1892,6.06,1893,6.06,1894,6.06,1895,6.06,1896,6.06,1897,6.06,1898,5.393,1899,6.06,1900,5.393]],["title/classes/Role.html",[0,0.109,1086,2.202]],["body/classes/Role.html",[0,0.11,2,0.988,3,0.139,4,0.117,5,0.094,7,1.569,8,3.516,9,0.428,10,0.902,14,2.563,15,2.62,16,1.388,17,2.679,18,1.156,21,0.888,23,0.73,24,0.007,25,0.744,26,0.436,27,0.501,28,2.177,29,2.382,30,3.038,32,2.048,33,2.41,34,1.521,35,4.118,39,1.139,41,1.89,42,2.02,43,3.054,44,2.409,45,2.409,46,2.02,47,2.409,48,2.344,49,1.975,50,2.409,51,0.331,52,1.104,53,3.036,55,1.177,56,1.574,57,0.988,59,2.117,61,0.203,62,1.703,63,1.811,70,2.117,76,2.169,80,0.003,81,0.005,82,0.003,146,0.64,220,2.41,224,3.333,413,3.096,416,2.409,450,2.282,480,3.096,494,3.166,495,3.166,746,2.92,817,4.296,982,3.036,1058,3.49,1084,4.748,1086,3.673,1125,6.108,1126,3.699,1127,3.699,1128,4.312,1129,3.699,1130,3.316,1131,3.961,1132,3.166,1133,4.312,1134,4.312,1135,4.312,1136,4.312,1137,5.019,1901,6.573,1902,4.312,1903,4.845,1904,4.845,1905,4.845]],["title/injectables/RoleRepo.html",[210,0.928,1906,3.282]],["body/injectables/RoleRepo.html",[0,0.123,3,0.156,4,0.131,5,0.106,9,0.311,10,0.972,16,1.667,18,1.294,21,0.86,23,1.26,24,0.007,25,0.768,26,0.406,27,0.865,39,1.002,51,0.421,52,0.911,55,1.317,57,1.106,61,0.147,80,0.004,81,0.005,82,0.004,87,1.762,92,1.42,107,1.527,111,1.049,136,1.554,143,1.256,210,1.371,211,1.985,213,2.701,220,2.733,224,2.161,230,2.539,242,2.314,245,2.468,264,2.623,300,3.543,301,4.862,303,3.978,1086,4.165,1428,2.947,1906,4.848,1907,4.826,1908,8.682,1909,6.306,1910,7.085,1911,7.085,1912,7.085,1913,6.306,1914,5.423,1915,7.085,1916,5.423,1917,7.085,1918,5.423,1919,5.423,1920,7.085,1921,7.085,1922,5.423]],["title/injectables/RoleUC.html",[210,0.928,1923,3.282]],["body/injectables/RoleUC.html",[0,0.139,3,0.177,4,0.148,5,0.12,9,0.353,18,1.466,21,0.76,23,1.156,24,0.007,25,0.662,26,0.373,27,0.794,34,1.168,39,0.78,51,0.441,52,1.032,57,1.253,61,0.167,80,0.004,81,0.005,82,0.004,87,1.996,92,1.538,107,1.189,111,1.189,136,1.21,143,1.089,210,1.485,211,2.249,213,2.43,220,2.641,224,3.596,230,2.188,237,4.204,242,2.622,245,1.921,1084,3.925,1127,4.69,1275,3.449,1906,6.296,1923,5.251,1924,5.468,1925,7.673,1926,6.144,1927,6.144,1928,7.673,1929,6.144,1930,6.144,1931,6.144,1932,6.144,1933,6.144,1934,6.144]],["title/classes/SchoolInfo.html",[0,0.109,572,2.453]],["body/classes/SchoolInfo.html",[0,0.141,2,1.266,3,0.178,4,0.149,5,0.121,7,1.843,9,0.356,10,1.059,14,3.011,16,1.631,18,1.481,21,0.871,23,0.935,24,0.007,25,0.781,26,0.448,27,0.642,29,2.27,30,2.896,39,1.117,41,2.42,42,2.587,43,2.947,46,2.587,51,0.388,52,1.297,55,1.507,56,2.016,57,1.266,59,2.711,61,0.169,62,2.181,80,0.004,81,0.005,82,0.004,260,5.08,413,3.637,416,3.085,494,4.055,495,4.055,527,3.484,529,5.284,541,4.486,542,4.469,543,4.469,572,3.95,1074,4.246,1935,7.481]],["title/classes/SchoolInfoMapper.html",[0,0.109,1585,3.662]],["body/classes/SchoolInfoMapper.html",[0,0.152,2,1.364,3,0.192,4,0.161,5,0.13,9,0.384,21,0.662,23,1.007,24,0.007,25,0.577,26,0.325,27,0.692,34,1.272,51,0.407,52,1.123,61,0.182,80,0.005,81,0.006,82,0.005,92,1.62,107,1.294,136,1.317,143,1.185,555,3.89,572,4.728,716,3.91,1574,5.532,1584,4.576,1585,6.172,1589,4.576,1711,6.501,1936,7.195,1937,5.106,1938,8.084,1939,5.468,1940,6.688,1941,5.468,1942,6.688]],["title/classes/SchoolInfoResponse.html",[0,0.109,1711,3.454]],["body/classes/SchoolInfoResponse.html",[0,0.149,2,1.344,3,0.189,4,0.159,5,0.128,9,0.378,10,1.099,16,1.944,21,0.793,24,0.007,25,0.794,26,0.389,29,2.164,39,1.14,51,0.331,52,1.509,61,0.179,80,0.005,81,0.006,82,0.005,124,3.16,552,3.744,731,5.482,732,5.482,740,5.016,742,3.187,748,4.128,1701,5.03,1711,5.77,1723,5.03,1943,7.683,1944,5.03,1945,5.386,1946,5.386]],["title/classes/SchoolNews.html",[0,0.109,614,2.787]],["body/classes/SchoolNews.html",[0,0.15,2,0.654,3,0.092,4,0.171,5,0.062,7,1.696,8,2.984,9,0.184,10,0.669,12,0.835,14,1.903,15,1.945,16,1.248,17,1.989,21,0.896,23,0.483,24,0.007,25,0.57,26,0.433,27,0.85,28,2.354,29,2.408,30,3.044,32,1.513,33,1.78,34,1.352,39,1.132,41,1.25,42,1.336,43,3.455,44,1.593,45,1.593,46,1.336,47,1.593,48,1.55,49,1.306,50,1.593,51,0.392,52,1.194,54,3.113,55,0.778,56,1.041,57,0.654,61,0.193,62,1.126,64,2.355,66,4.453,70,1.4,76,2.645,80,0.002,81,0.003,82,0.002,91,3.195,92,0.978,107,0.62,143,0.568,146,0.423,220,2.141,221,3.667,222,3.622,224,2.355,244,2.193,273,3.211,335,2.94,360,2.193,391,1.041,396,2.132,413,1.51,416,2.937,424,1.51,450,2.298,480,2.783,531,3.702,536,4.504,538,3.48,539,2.571,544,1.799,545,2.193,546,3.514,547,3.663,548,3.622,549,3.863,550,3.48,551,4.757,552,3.122,553,4.519,554,4.316,555,2.645,556,3.725,558,2.62,559,3.339,560,3.99,561,3.339,562,2.62,563,2.62,564,3.514,565,4.519,566,3.514,567,3.339,568,3.188,569,3.339,570,2.62,571,2.62,572,3.636,573,2.62,574,3.317,575,3.702,576,2.62,577,2.62,578,2.62,579,3.188,580,2.62,581,3.514,582,2.62,583,3.514,584,2.62,585,2.835,586,2.308,587,2.571,588,1.689,589,2.193,590,2.094,591,2.094,592,2.008,593,2.308,594,2.308,595,2.308,596,2.308,597,2.308,598,2.094,599,2.308,600,2.308,601,3.514,602,2.858,603,2.937,604,2.712,605,2.783,606,2.858,607,3.56,608,3.317,609,2.308,610,3.514,611,2.308,612,2.308,613,4.255,614,2.835,615,1.862,1947,3.205]],["title/classes/Scope.html",[0,0.109,623,2.096]],["body/classes/Scope.html",[0,0.088,2,0.793,3,0.112,4,0.094,5,0.076,9,0.223,10,0.773,14,1.517,20,1.934,21,0.841,23,1.161,24,0.007,25,0.572,26,0.42,27,0.685,32,1.86,33,2.422,39,1.099,49,2.296,51,0.283,55,0.945,56,1.264,61,0.218,63,1.454,80,0.005,81,0.004,82,0.003,92,1.129,101,2.542,107,1.282,136,1.633,143,1.557,266,2.801,306,4.97,316,4.235,394,2.583,458,3.294,623,2.462,635,5.058,636,5.275,637,5.275,638,5.275,640,4.301,641,4.301,642,4.301,643,6.541,649,4.301,650,6.606,651,5.789,652,5.789,654,2.801,655,4.301,656,5.5,658,4.131,659,4.301,661,2.969,819,2.344,867,2.661,982,5.036,1132,4.329,1155,4.377,1265,2.437,1420,2.969,1428,3.062,1463,2.437,1721,1.99,1732,5.015,1742,6.137,1821,2.801,1948,2.969,1949,5.015,1950,3.889,1951,3.889,1952,3.889,1953,3.889,1954,3.889,1955,3.889,1956,3.889,1957,3.889,1958,3.889,1959,3.889,1960,3.889,1961,5.896,1962,5.416,1963,5.015,1964,3.462,1965,3.889,1966,3.462,1967,5.896,1968,3.889,1969,3.889,1970,3.462,1971,3.889,1972,3.462,1973,3.889,1974,3.889,1975,3.889,1976,5.015,1977,3.889,1978,5.634,1979,3.889,1980,3.889,1981,3.889,1982,3.889,1983,3.889,1984,3.889,1985,3.889,1986,5.634,1987,3.889,1988,5.634,1989,3.889,1990,3.889,1991,3.889,1992,3.889,1993,3.889,1994,3.889,1995,3.889]],["title/controllers/ServerController.html",[749,2.147,1996,3.662]],["body/controllers/ServerController.html",[0,0.156,3,0.198,4,0.166,5,0.134,9,0.395,21,0.681,24,0.007,29,1.859,32,2.106,39,1.044,51,0.346,61,0.187,80,0.005,81,0.006,82,0.005,92,1.648,107,1.332,111,1.332,115,3.328,143,1.219,749,3.682,751,3.421,754,8.111,756,5.627,757,4.47,758,5.374,759,4.617,769,5.254,770,3.52,1996,6.279,1997,6.124,1998,6.881]],["title/modules/ServerModule.html",[170,1.343,1999,3.454]],["body/modules/ServerModule.html",[0,0.103,1,3.519,3,0.13,4,0.109,5,0.088,12,1.875,24,0.007,26,0.22,34,0.86,39,0.986,51,0.478,55,1.522,56,1.468,61,0.123,63,1.689,65,2.247,69,2.382,71,3.093,80,0.003,81,0.004,82,0.003,111,0.875,136,1.53,143,0.801,170,1.755,171,6.082,172,1.802,173,2.877,177,5.778,180,3.519,181,2.382,182,2.129,185,3.116,364,6.082,391,2.036,420,3.032,525,4.096,530,3.777,534,3.777,537,2.674,539,3.302,544,3.519,546,2.294,560,3.519,572,3.206,587,3.302,602,2.186,603,2.247,604,2.075,605,2.129,606,2.186,614,3.641,615,3.641,751,3.116,844,4.023,925,4.289,933,5.124,934,5.124,935,5.124,1015,3.695,1016,3.695,1017,3.695,1086,2.877,1270,5.778,1314,4.096,1344,5.584,1350,3.206,1357,3.255,1358,3.255,1359,3.255,1392,2.456,1395,3.451,1396,3.451,1398,3.777,1401,2.954,1403,3.695,1404,3.255,1629,6.082,1996,5.493,1999,6.878,2000,4.023,2001,4.023,2002,6.082,2003,3.695,2004,6.267,2005,6.267,2006,3.255,2007,2.954,2008,2.832,2009,3.695,2010,4.52,2011,4.52,2012,4.52,2013,4.52,2014,4.52,2015,4.52,2016,4.52,2017,4.52,2018,4.52,2019,3.641,2020,4.52,2021,4.52,2022,4.52,2023,5.124,2024,5.124,2025,5.124,2026,5.124,2027,4.52,2028,4.52,2029,4.52,2030,4.52,2031,3.093,2032,4.52,2033,4.52,2034,6.267,2035,4.52,2036,3.695,2037,2.954]],["title/classes/Submission.html",[0,0.109,2019,2.787]],["body/classes/Submission.html",[0,0.099,2,0.887,3,0.125,4,0.105,5,0.119,7,1.456,8,3.414,9,0.25,10,0.837,12,1.133,14,2.379,15,2.432,16,1.288,17,2.486,18,1.038,19,3.987,20,4,21,0.923,23,0.655,24,0.007,25,0.375,26,0.455,27,0.45,28,2.021,29,2.5,30,3.012,32,2.06,33,2.424,34,1.663,35,5.226,36,5.38,39,1.022,41,1.696,42,1.813,43,2.916,44,2.162,45,2.162,46,1.813,47,2.162,48,2.103,49,1.772,50,2.162,51,0.42,52,1.025,53,4.786,54,2.291,55,1.056,56,1.413,57,0.887,59,1.9,61,0.118,62,1.528,70,1.9,76,3.735,80,0.003,81,0.004,82,0.003,99,2.666,391,1.413,420,3.409,463,2.842,525,4.605,531,4.415,534,4.848,536,4.289,537,3.731,538,3.713,925,5.506,1299,2.976,1300,4.786,2019,3.545,2038,3.87,2039,7.047,2040,6.272,2041,7.047,2042,8.046,2043,7.047,2044,7.161,2045,4.348,2046,4.348,2047,6.101,2048,4.348,2049,4.348,2050,4.348,2051,4.348,2052,6.101,2053,4.348,2054,6.101,2055,4.348,2056,6.101,2057,4.348,2058,4.348,2059,4.348,2060,3.132,2061,5.43]],["title/injectables/SubmissionRepo.html",[210,0.928,2062,3.282]],["body/injectables/SubmissionRepo.html",[0,0.12,3,0.152,4,0.127,5,0.103,9,0.303,18,1.259,21,0.82,23,1.247,24,0.007,25,0.714,26,0.402,27,0.856,51,0.416,52,0.886,55,1.281,57,1.076,61,0.143,80,0.005,81,0.005,82,0.004,87,1.714,92,1.394,107,1.507,111,1.021,136,1.63,143,1.38,210,1.346,211,1.931,213,2.687,220,2.494,229,3.532,230,2.52,242,2.251,245,2.589,264,2.551,300,3.447,301,4.81,303,3.906,420,2.551,525,3.447,528,3.447,537,3.986,622,2.698,632,4.362,1300,3.305,2019,3.065,2044,4.695,2060,5.962,2062,4.761,2063,4.695,2064,6.958,2065,6.958,2066,6.958,2067,5.275,2068,6.958,2069,5.275,2070,6.958,2071,5.275,2072,6.958,2073,5.275,2074,4.547,2075,7.786,2076,6.958,2077,5.275]],["title/classes/TargetInfoMapper.html",[0,0.109,1587,3.662]],["body/classes/TargetInfoMapper.html",[0,0.151,2,1.361,3,0.192,4,0.161,5,0.13,9,0.383,21,0.661,23,1.005,24,0.007,25,0.576,26,0.324,27,0.69,34,1.269,51,0.406,52,1.121,61,0.181,80,0.005,81,0.006,82,0.005,92,1.618,107,1.292,136,1.314,143,1.183,547,2.916,555,3.887,585,5.241,716,3.905,1574,5.525,1587,6.164,1589,4.567,1720,6.497,1731,5.94,1937,5.095,1939,5.456,1941,5.456,2078,7.186,2079,8.074,2080,6.674,2081,6.674,2082,6.674]],["title/classes/TargetInfoResponse.html",[0,0.109,1720,3.454]],["body/classes/TargetInfoResponse.html",[0,0.149,2,1.344,3,0.189,4,0.159,5,0.128,9,0.378,10,1.099,16,1.944,21,0.793,24,0.007,25,0.794,26,0.389,29,2.164,39,1.14,51,0.331,52,1.509,61,0.179,80,0.005,81,0.006,82,0.005,124,3.16,547,3.924,731,5.482,732,5.482,740,5.016,742,3.187,748,4.128,1701,5.03,1720,5.77,1723,5.03,1944,5.03,1945,5.386,1946,5.386,2083,7.683]],["title/classes/Task.html",[0,0.109,537,2.047]],["body/classes/Task.html",[0,0.117,2,1.052,3,0.148,4,0.124,5,0.101,7,1.636,8,3.572,9,0.296,10,0.941,14,2.674,15,2.733,16,1.448,17,2.795,18,1.231,19,4.481,20,4.247,21,0.921,23,0.777,24,0.007,25,0.708,26,0.442,27,0.927,28,2.718,29,2.489,30,3.136,32,1.756,33,2.066,34,1.304,39,0.978,41,2.012,42,2.151,43,3.132,44,2.566,45,2.566,46,2.151,47,2.566,48,2.496,49,2.103,50,2.566,51,0.413,52,1.152,55,1.253,56,1.677,57,1.052,59,2.255,61,0.14,62,1.813,70,2.255,76,3.07,80,0.004,81,0.005,82,0.004,391,2.666,394,3.003,458,3.409,530,4.641,531,4.296,532,4.296,536,4.324,537,3.502,538,3.613,1314,5.033,2084,4.593,2085,6.297,2086,6.71,2087,5.16,2088,5.16,2089,5.16,2090,6.857,2091,5.16,2092,5.16,2093,5.16,2094,4.593]],["title/controllers/TaskController.html",[749,2.147,2095,3.662]],["body/controllers/TaskController.html",[0,0.122,3,0.154,4,0.129,5,0.137,9,0.307,21,0.53,23,0.807,24,0.007,25,0.462,26,0.26,27,0.727,29,1.447,34,1.019,51,0.462,57,1.093,61,0.146,63,2.627,80,0.005,81,0.005,82,0.004,87,1.74,92,1.409,107,1.037,111,1.037,136,1.703,143,1.246,213,2.278,230,2.004,242,2.286,245,2.198,271,2.74,448,3.112,537,2.999,658,3.823,716,2.591,742,2.591,749,2.398,751,2.663,1063,3.228,1066,3.008,1081,4.141,1101,4.593,1102,4.593,1390,4.768,1391,4.09,1392,2.911,1487,3.501,1489,5.989,1496,4.839,1501,4.768,1503,6.121,1518,4.09,1520,3.501,1521,4.38,1524,3.501,1525,4.09,1530,4.09,1544,4.09,1721,2.74,1855,5.368,2074,4.593,2095,5.366,2096,4.768,2097,7.029,2098,5.357,2099,4.768,2100,3.356,2101,5.368,2102,5.357,2103,3.858,2104,4.09,2105,5.357,2106,4.09,2107,5.357,2108,4.768,2109,4.768,2110,3.501,2111,7.029,2112,5.357,2113,5.357,2114,7.029,2115,5.357,2116,5.357,2117,4.593,2118,5.357,2119,5.357]],["title/classes/TaskMapper.html",[0,0.109,2104,3.662]],["body/classes/TaskMapper.html",[0,0.143,2,1.284,3,0.181,4,0.151,5,0.123,9,0.361,21,0.623,23,0.948,24,0.007,25,0.543,26,0.306,27,0.651,34,1.197,51,0.392,52,1.057,61,0.171,80,0.004,81,0.005,82,0.004,92,1.561,107,1.218,136,1.239,143,1.115,345,3.42,537,3.877,555,3.788,665,5.947,716,3.768,1574,5.33,1584,4.307,1589,4.307,1614,5.145,1616,5.145,1941,5.145,2103,6.367,2104,5.947,2117,5.776,2120,5.601,2121,7.789,2122,6.749,2123,6.294,2124,5.601,2125,6.294,2126,6.294,2127,6.294,2128,6.294,2129,6.294,2130,6.294,2131,6.294,2132,6.294,2133,6.294,2134,6.294]],["title/modules/TaskModule.html",[170,1.343,2002,3.454]],["body/modules/TaskModule.html",[0,0.139,3,0.177,4,0.148,5,0.12,24,0.007,51,0.463,61,0.167,80,0.004,81,0.005,82,0.004,111,1.189,170,2.148,172,2.449,173,3.523,180,4.308,181,3.237,182,2.894,184,3.523,185,3.815,626,3.143,751,3.815,1270,6.296,1275,3.449,2002,7.026,2019,3.57,2062,6.296,2095,6.389,2101,6.296,2135,5.468,2136,6.144,2137,5.468,2138,6.296,2139,6.296,2140,6.144,2141,5.023,2142,6.144,2143,5.468,2144,5.468]],["title/injectables/TaskRepo.html",[210,0.928,2138,3.282]],["body/injectables/TaskRepo.html",[0,0.084,3,0.107,4,0.089,5,0.072,9,0.213,12,0.969,15,1.481,16,0.785,18,0.887,21,0.704,23,1.071,24,0.007,25,0.613,26,0.345,27,0.735,28,1.231,32,1.396,33,1.642,34,0.707,49,2.221,51,0.381,52,0.624,55,0.903,56,1.207,57,0.758,61,0.101,63,3.133,64,1.481,65,1.848,80,0.003,81,0.004,82,0.003,87,1.207,92,1.092,107,1.249,111,0.719,136,1.651,143,1.144,210,1.055,211,1.36,213,2.484,220,2.713,229,3.488,230,2.256,242,1.586,245,2.557,300,2.429,301,4.13,303,3.06,391,2.57,394,2.126,395,2.838,422,2.962,423,3.73,424,2.567,448,2.159,457,1.706,463,2.429,528,2.429,530,2.24,537,3.033,546,1.36,622,1.901,626,1.901,632,2.872,658,2.502,662,3.308,663,3.039,805,3.284,867,4.417,1097,2.24,1098,3.06,1100,5.594,1101,4.645,1102,4.645,1275,2.087,1314,2.429,1322,2.677,1326,2.329,1675,3.039,1679,2.677,1690,4.851,1692,4.928,1709,2.838,1855,3.73,2074,2.429,2085,5.812,2086,5.812,2138,3.73,2145,3.308,2146,5.451,2147,6.454,2148,5.451,2149,3.717,2150,5.451,2151,3.717,2152,3.717,2153,7.109,2154,3.717,2155,5.451,2156,3.717,2157,3.717,2158,5.277,2159,3.039,2160,8.384,2161,3.717,2162,3.308,2163,3.717,2164,3.308,2165,2.838,2166,3.717,2167,3.308,2168,2.543,2169,3.039,2170,2.677,2171,5.451,2172,5.451,2173,5.451,2174,5.451,2175,3.717,2176,3.039,2177,7.109,2178,5.451,2179,5.451,2180,2.429,2181,3.717,2182,3.717,2183,5.451,2184,3.717,2185,3.308,2186,3.308,2187,3.717,2188,5.451,2189,3.717,2190,2.838,2191,3.717,2192,3.717,2193,5.451,2194,3.717]],["title/classes/TaskResponse.html",[0,0.109,2103,3.454]],["body/classes/TaskResponse.html",[0,0.127,2,1.138,3,0.16,4,0.134,5,0.109,9,0.32,10,0.99,15,3.189,16,1.69,17,3.261,21,0.916,24,0.007,25,0.69,26,0.454,27,0.957,28,2.972,29,2.5,39,1.175,51,0.281,61,0.152,80,0.004,81,0.005,82,0.004,99,3.496,115,3.491,124,2.042,537,3.08,541,3.241,716,3.491,718,4.193,740,5.66,742,2.699,2085,6.541,2103,5.198,2117,5.228,2195,4.965,2196,6.423,2197,4.349,2198,8,2199,8,2200,5.579,2201,5.579,2202,5.579,2203,5.579,2204,5.579,2205,5.579,2206,5.579,2207,5.579,2208,4.965,2209,4.965,2210,4.965]],["title/injectables/TaskSubmissionMetadataService.html",[210,0.928,2139,3.282]],["body/injectables/TaskSubmissionMetadataService.html",[0,0.138,3,0.175,4,0.147,5,0.119,9,0.35,10,1.047,21,0.603,24,0.007,32,1.561,33,1.836,34,1.452,51,0.384,52,1.024,61,0.166,63,2.278,80,0.004,81,0.005,82,0.004,111,1.18,136,1.721,143,1.08,210,1.478,211,2.231,478,3.819,537,3.558,1130,4.171,1157,4.15,2019,5.335,2060,4.39,2122,5.829,2124,5.425,2139,5.225,2208,5.425,2209,5.425,2210,5.425,2211,6.796,2212,5.425,2213,8.338,2214,6.095,2215,6.095,2216,6.095,2217,6.095,2218,6.095,2219,6.095,2220,5.425,2221,6.095,2222,6.095,2223,6.095,2224,6.095,2225,6.095,2226,6.095,2227,5.425,2228,7.636,2229,6.095,2230,6.095,2231,6.095]],["title/injectables/TaskUC.html",[210,0.928,2101,3.282]],["body/injectables/TaskUC.html",[0,0.091,3,0.115,4,0.096,5,0.078,9,0.23,10,0.789,12,1.5,16,0.846,18,1.373,21,0.772,23,1.109,24,0.007,25,0.635,26,0.394,27,0.761,32,1.025,33,1.207,34,0.762,51,0.421,52,0.673,57,0.817,61,0.156,63,3.034,80,0.003,81,0.004,82,0.003,87,2.392,92,1.153,107,1.303,111,0.775,126,4.134,136,1.716,143,1.305,210,1.114,211,1.466,213,2.531,220,2.52,224,3.108,229,2.456,230,2.315,240,4.705,245,2.539,255,2.249,275,2.327,276,2.177,394,2.871,450,1.887,456,2.741,528,2.617,537,3.652,604,1.839,622,2.944,671,3.058,1081,3.66,1098,5.125,1100,6.053,1258,5.856,1275,3.231,1299,3.938,1300,3.605,1392,2.177,1496,3.344,1721,2.049,1855,5.038,2019,2.327,2060,2.885,2062,5.723,2074,4.401,2101,3.938,2117,4.811,2122,4.393,2138,5.556,2139,5.038,2141,3.275,2143,3.565,2144,3.565,2167,3.565,2180,2.617,2220,3.565,2232,3.275,2233,5.755,2234,5.755,2235,5.755,2236,4.005,2237,6.735,2238,4.005,2239,5.755,2240,4.005,2241,5.755,2242,4.005,2243,5.755,2244,4.005,2245,5.755,2246,5.755,2247,5.755,2248,5.122,2249,4.005,2250,4.005,2251,3.565,2252,2.741,2253,4.005,2254,3.565,2255,4.005,2256,3.565,2257,3.058,2258,3.565,2259,4.005,2260,4.005,2261,5.755,2262,4.005,2263,4.005,2264,7.363,2265,5.755,2266,4.005,2267,4.005,2268,4.005,2269,4.005,2270,4.005,2271,4.005,2272,4.005,2273,4.005,2274,4.005,2275,4.005,2276,4.005]],["title/classes/TeamInfo.html",[0,0.109,587,2.527]],["body/classes/TeamInfo.html",[0,0.141,2,1.266,3,0.178,4,0.149,5,0.121,7,1.843,9,0.356,10,1.059,14,3.011,16,1.631,18,1.481,21,0.871,23,0.935,24,0.007,25,0.781,26,0.448,27,0.642,29,2.27,30,2.896,39,1.117,41,2.42,42,2.587,43,2.947,46,2.587,51,0.388,52,1.297,55,1.507,56,2.016,57,1.266,59,2.711,61,0.169,62,2.181,80,0.004,81,0.005,82,0.004,260,5.08,413,3.637,416,3.085,494,4.055,495,4.055,527,3.484,529,5.284,541,4.486,542,4.469,543,4.469,587,4.068,1075,4.246,2277,7.481]],["title/classes/TeamNews.html",[0,0.109,615,2.787]],["body/classes/TeamNews.html",[0,0.15,2,0.654,3,0.092,4,0.171,5,0.062,7,1.696,8,2.984,9,0.184,10,0.669,12,0.835,14,1.903,15,1.945,16,1.248,17,1.989,21,0.896,23,0.483,24,0.007,25,0.57,26,0.433,27,0.85,28,2.354,29,2.408,30,3.044,32,1.513,33,1.78,34,1.352,39,1.132,41,1.25,42,1.336,43,3.455,44,1.593,45,1.593,46,1.336,47,1.593,48,1.55,49,1.306,50,1.593,51,0.392,52,1.194,54,3.113,55,0.778,56,1.041,57,0.654,61,0.193,62,1.126,64,2.355,66,4.453,70,1.4,76,2.645,80,0.002,81,0.003,82,0.002,91,3.195,92,0.978,107,0.62,143,0.568,146,0.423,220,2.141,221,3.667,222,3.622,224,2.355,244,2.193,273,3.211,335,2.94,360,2.193,391,1.041,396,2.132,413,1.51,416,2.937,424,1.51,450,2.298,480,2.783,531,3.702,536,4.504,538,3.48,539,2.571,544,1.799,545,2.193,546,3.514,547,3.663,548,3.622,549,3.863,550,3.48,551,4.757,552,3.122,553,4.519,554,4.316,555,2.645,556,3.725,558,2.62,559,3.339,560,3.99,561,3.339,562,2.62,563,2.62,564,3.514,565,4.519,566,3.514,567,3.339,568,3.188,569,3.339,570,2.62,571,2.62,572,3.378,573,2.62,574,3.317,575,3.702,576,2.62,577,2.62,578,2.62,579,3.188,580,2.62,581,3.514,582,2.62,583,3.514,584,2.62,585,2.835,586,2.308,587,3.113,588,1.689,589,2.193,590,2.094,591,2.094,592,2.008,593,2.308,594,2.308,595,2.308,596,2.308,597,2.308,598,2.094,599,2.308,600,2.308,601,3.514,602,2.858,603,2.937,604,2.712,605,2.783,606,2.858,607,3.56,608,3.317,609,2.308,610,3.514,611,2.308,612,2.308,613,4.255,614,1.862,615,2.835,2278,3.205]],["title/controllers/TeamNewsController.html",[749,2.147,1636,3.662]],["body/controllers/TeamNewsController.html",[0,0.122,3,0.154,4,0.129,5,0.104,9,0.307,12,1.832,21,0.53,23,0.807,24,0.007,25,0.462,26,0.26,27,0.554,29,1.447,34,1.019,39,0.996,51,0.462,57,1.093,61,0.146,80,0.004,81,0.005,82,0.004,87,1.74,92,1.409,107,1.037,111,1.037,126,3.946,136,1.545,143,0.949,213,2.278,230,2.004,242,2.286,243,3.008,245,1.675,457,2.459,546,2.573,588,4.557,623,3.428,626,2.74,632,3.704,658,3.601,716,2.591,742,2.591,749,2.398,751,2.663,805,3.228,1075,3.666,1081,4.141,1098,4.676,1487,3.501,1495,5.126,1496,5.025,1502,5.699,1503,5.442,1505,5.746,1518,4.09,1519,4.81,1520,3.501,1521,4.38,1522,4.915,1524,3.501,1525,4.09,1526,3.666,1527,3.858,1528,4.768,1529,4.768,1530,4.09,1534,4.38,1537,4.38,1538,4.38,1539,4.768,1540,4.768,1541,4.768,1542,4.768,1543,4.768,1636,5.366,2279,6.256,2280,4.768,2281,7.845,2282,5.357,2283,7.029,2284,5.357,2285,7.845,2286,5.357,2287,5.357,2288,4.768,2289,4.768,2290,5.357,2291,5.357]],["title/injectables/TimeoutInterceptor.html",[210,0.928,1160,3.662]],["body/injectables/TimeoutInterceptor.html",[0,0.118,3,0.149,4,0.125,5,0.101,9,0.298,10,0.945,21,0.848,23,1.038,24,0.007,25,0.594,26,0.375,27,0.851,32,1.33,33,1.565,51,0.414,61,0.141,80,0.004,81,0.005,82,0.004,92,1.38,99,3.845,107,1.333,111,1.005,124,1.902,143,1.458,192,4.247,210,1.333,211,1.902,316,2.737,394,3.013,555,3.46,602,2.513,603,2.583,604,3.778,605,2.447,606,2.513,607,3.13,630,2.917,749,3.084,760,5.259,765,5.631,772,4.713,784,6.13,785,6.13,786,6.282,787,7.324,789,2.737,790,6.877,793,4.247,795,4.624,878,3.867,879,3.523,902,4.247,963,3.966,1157,2.823,1158,6.021,1160,5.259,1438,4.961,1469,6.877,1495,4.501,1949,6.13,2292,4.624,2293,6.888,2294,4.961,2295,4.713,2296,5.631,2297,7.727,2298,7.727,2299,5.195,2300,5.195,2301,5.899,2302,5.195,2303,5.195,2304,5.195,2305,5.195,2306,5.195,2307,6.888,2308,6.888,2309,5.195,2310,6.888,2311,5.195,2312,5.195,2313,5.195,2314,5.195,2315,5.195,2316,5.195,2317,5.195,2318,6.888,2319,5.195,2320,5.195]],["title/classes/UpdateNewsParams.html",[0,0.109,1513,3.454]],["body/classes/UpdateNewsParams.html",[0,0.194,2,1.176,3,0.166,4,0.139,5,0.112,9,0.331,10,1.175,21,0.805,24,0.007,26,0.395,27,0.762,28,2.442,29,2.195,39,1.087,51,0.371,52,1.521,61,0.157,80,0.004,81,0.005,82,0.004,91,3.777,124,3.135,546,3.411,548,4.281,550,4.282,715,4.402,716,3.566,718,4.283,720,5.132,722,6.027,723,4.442,724,6.027,725,5.628,741,6.169,742,2.789,743,6.561,744,7.002,745,6.644,746,3.474,1044,4.619,1076,5.31,1173,5.044,1513,5.31,2321,7.623,2322,7.372,2323,7.372,2324,5.628,2325,6.561,2326,7.372,2327,5.766,2328,5.766,2329,5.766]],["title/classes/User.html",[0,0.109,12,1.25]],["body/classes/User.html",[0,0.107,2,0.966,3,0.136,4,0.114,5,0.092,7,1.544,8,3.494,9,0.492,10,0.888,12,1.686,14,2.523,15,2.579,16,1.366,17,2.637,18,1.13,21,0.907,23,0.713,24,0.007,25,0.684,26,0.44,27,0.858,28,2.143,29,2.445,30,3.118,32,1.887,33,2.221,34,1.402,35,2.966,39,1.163,41,1.846,42,1.974,43,3.024,44,2.354,45,2.354,46,1.974,47,2.354,48,2.29,49,1.929,50,2.354,51,0.371,52,1.087,53,2.966,54,2.494,55,1.15,56,1.538,57,0.966,59,2.069,61,0.176,62,1.664,70,2.069,76,2.897,80,0.003,81,0.004,82,0.003,146,0.625,220,2.58,396,2.827,413,3.048,416,2.354,552,3.459,598,3.094,817,4.228,1084,4.485,1085,2.573,1086,3.384,1090,4.774,1091,4.774,1137,3.614,1138,6.049,1139,3.871,1140,5.422,1141,4.214,1142,4.214,1143,4.214,1144,4.214,1145,3.871,1146,3.871,1147,3.871,1148,3.871,1149,4.214,1150,4.214,1902,4.214,2330,6.47,2331,4.734,2332,4.734,2333,4.734,2334,4.734,2335,6.47,2336,4.734,2337,4.734,2338,4.734]],["title/controllers/UserController.html",[749,2.147,2339,3.662]],["body/controllers/UserController.html",[0,0.145,3,0.184,4,0.154,5,0.125,9,0.367,12,1.667,21,0.633,23,0.964,24,0.007,25,0.552,26,0.311,27,0.662,29,1.728,51,0.467,57,1.305,61,0.174,80,0.004,81,0.005,82,0.004,87,2.079,92,1.577,107,1.238,111,1.238,143,1.134,213,2.474,230,2.243,242,2.73,626,3.273,742,3.095,749,2.864,751,3.181,1081,4.42,1221,3.855,1487,4.181,1496,4.951,1518,4.884,1524,4.181,1525,4.884,1530,4.884,2339,6.007,2340,5.694,2341,6.398,2342,7.869,2343,6.398,2344,5.569,2345,6.398,2346,6.398,2347,6.398,2348,6.398,2349,6.398]],["title/injectables/UserFacade.html",[210,0.928,1199,3.282]],["body/injectables/UserFacade.html",[0,0.145,3,0.184,4,0.154,5,0.125,9,0.368,18,1.53,21,0.78,23,1.187,24,0.007,25,0.68,26,0.383,27,0.815,51,0.448,57,1.307,61,0.174,80,0.004,81,0.005,82,0.004,87,2.083,92,1.579,107,1.241,111,1.241,136,1.263,143,1.136,210,1.525,211,2.347,213,2.477,230,2.246,242,2.736,245,2.005,1081,4.423,1199,5.391,1221,5.14,1496,3.725,1584,4.387,2344,6.076,2350,5.706,2351,7.879,2352,6.411,2353,6.411,2354,7.879,2355,6.411,2356,6.411,2357,6.411]],["title/classes/UserInfo.html",[0,0.109,560,2.693]],["body/classes/UserInfo.html",[0,0.136,2,1.219,3,0.172,4,0.144,5,0.116,7,1.8,9,0.343,10,1.035,14,2.941,16,1.593,18,1.426,21,0.886,23,0.9,24,0.007,25,0.516,26,0.451,27,0.618,29,2.344,30,3.082,39,1.178,41,2.331,42,2.492,43,2.879,46,2.492,51,0.379,52,1.267,55,1.452,56,1.942,57,1.219,59,2.612,61,0.162,62,2.101,80,0.004,81,0.005,82,0.004,260,5.024,413,3.553,416,2.972,527,3.356,529,4.09,541,4.382,542,4.305,543,4.305,560,4.235,1085,3.249,1090,5.229,1091,5.229,1145,4.887,1146,4.887,1147,4.887,1148,4.887,2358,7.724,2359,6.713]],["title/classes/UserInfoMapper.html",[0,0.109,1588,3.662]],["body/classes/UserInfoMapper.html",[0,0.151,2,1.355,3,0.191,4,0.16,5,0.13,9,0.381,21,0.658,23,1.001,24,0.007,25,0.573,26,0.323,27,0.687,34,1.264,51,0.405,52,1.116,61,0.181,80,0.005,81,0.006,82,0.005,92,1.614,107,1.286,136,1.309,143,1.178,555,3.879,560,5.18,716,3.895,1574,5.51,1584,4.547,1588,6.148,1589,4.547,1705,6.487,1889,5.914,1891,5.914,1937,5.073,1939,5.433,2360,7.167,2361,8.053,2362,6.645,2363,6.645,2364,6.645]],["title/classes/UserInfoResponse.html",[0,0.109,1705,3.454]],["body/classes/UserInfoResponse.html",[0,0.143,2,1.284,3,0.181,4,0.151,5,0.123,9,0.361,10,1.068,12,2.412,16,1.919,21,0.837,24,0.007,25,0.763,26,0.411,29,2.285,39,1.175,51,0.317,52,1.308,61,0.171,80,0.004,81,0.005,82,0.004,124,3.236,731,5.33,732,5.33,740,5.136,742,3.044,748,3.943,1090,5.097,1091,5.097,1701,5.947,1705,5.61,1723,4.805,1774,5.09,1944,4.805,1945,5.145,1946,5.145,2365,7.868,2366,6.933,2367,6.294]],["title/modules/UserModule.html",[170,1.343,177,3.282]],["body/modules/UserModule.html",[0,0.139,3,0.176,4,0.147,5,0.119,24,0.007,51,0.453,61,0.166,80,0.004,81,0.005,82,0.004,111,1.184,170,2.143,172,2.439,173,3.514,177,6.693,180,4.297,181,3.224,182,2.882,184,3.514,205,4.033,626,3.13,749,2.74,751,3.806,1199,6.622,1275,3.436,1906,6.29,1923,6.29,2339,6.377,2344,6.006,2368,5.446,2369,5.446,2370,5.446,2371,6.006,2372,6.119,2373,6.119]],["title/injectables/UserRepo.html",[210,0.928,2371,3.134]],["body/injectables/UserRepo.html",[0,0.144,3,0.183,4,0.153,5,0.124,9,0.365,12,2.215,16,1.655,18,1.517,21,0.776,23,1.181,24,0.007,25,0.676,26,0.381,27,0.811,51,0.446,52,1.068,55,1.544,57,1.297,61,0.173,80,0.004,81,0.005,82,0.004,87,2.066,92,1.571,107,1.23,111,1.23,136,1.252,143,1.127,210,1.517,211,2.327,213,2.468,220,2.673,230,2.235,242,2.713,245,1.989,264,3.075,300,4.155,301,5.154,303,4.401,1909,6.977,1913,6.977,2371,5.122,2374,5.659,2375,6.358,2376,6.358,2377,6.358]],["title/classes/UserTaskInfo.html",[0,0.109,534,2.89]],["body/classes/UserTaskInfo.html",[0,0.137,2,1.236,3,0.174,4,0.146,5,0.118,7,1.815,9,0.348,10,1.043,14,2.967,16,1.607,18,1.446,19,4.971,20,4.467,21,0.889,23,0.913,24,0.007,25,0.523,26,0.436,27,0.627,29,2.356,30,3.095,39,1.141,41,2.363,42,2.526,43,2.904,46,2.526,51,0.383,52,1.278,55,1.472,56,1.969,57,1.236,59,2.648,61,0.165,62,2.129,70,2.648,80,0.004,81,0.005,82,0.004,260,5.044,527,3.402,529,4.146,534,4.584,537,3.722,542,4.364,543,4.364,1085,3.293,1090,5.011,1091,5.011,2359,6.771,2378,7.762]],["title/injectables/UserUC.html",[210,0.928,2344,3.134]],["body/injectables/UserUC.html",[0,0.137,3,0.174,4,0.146,5,0.118,9,0.348,12,1.579,18,1.446,21,0.753,23,1.146,24,0.007,25,0.656,26,0.369,27,0.787,51,0.461,57,1.236,61,0.165,80,0.004,81,0.005,82,0.004,87,2.472,92,1.525,107,1.173,111,1.173,136,1.498,143,1.074,210,1.472,211,2.218,213,2.415,230,2.169,242,2.586,245,1.895,394,2.363,1081,4.336,1221,5.011,1275,3.402,1496,3.521,1809,5.393,1884,4.626,1923,6.368,2344,4.971,2371,5.992,2379,5.393,2380,7.607,2381,6.06,2382,6.06,2383,7.607,2384,6.06,2385,4.954,2386,6.06,2387,6.06,2388,5.393,2389,6.06,2390,6.06,2391,5.393,2392,6.06,2393,6.06]],["title/classes/ValidationError.html",[0,0.109,96,3.282]],["body/classes/ValidationError.html",[0,0.13,2,1.165,3,0.164,4,0.138,5,0.111,7,1.749,9,0.328,10,1.005,18,1.363,21,0.921,23,0.861,24,0.007,25,0.493,26,0.456,27,0.591,39,1.147,43,3.505,51,0.369,61,0.155,62,2.008,80,0.004,81,0.005,82,0.004,86,6.189,87,3.077,88,3.127,89,5.247,90,4.955,91,3.452,92,1.469,93,6.615,94,6.615,96,5.015,99,2.496,100,5.084,101,5.767,102,5.084,103,5.084,104,5.084,105,5.084,106,5.084,107,1.418,108,5.084,109,3.319,110,4.361,111,1.106,112,5.084,113,4.671,116,3.01,117,2.558,118,4.115,120,5.084,345,3.105,2394,5.084,2395,5.713,2396,5.713,2397,5.713]],["title/classes/ValidationErrorDetailResponse.html",[0,0.109,131,3.662]],["body/classes/ValidationErrorDetailResponse.html",[0,0.16,2,1.442,3,0.203,4,0.17,5,0.138,18,1.687,21,0.7,23,1.065,24,0.007,25,0.61,26,0.343,27,0.731,39,1.208,61,0.192,80,0.005,81,0.006,82,0.005,87,2.297,113,5.78,117,3.742,128,4.688,131,6.38,2398,7.438,2399,6.292,2400,7.07,2401,7.07,2402,6.833]],["title/modules/ValidationModule.html",[170,1.343,370,3.454]],["body/modules/ValidationModule.html",[0,0.161,3,0.204,4,0.171,5,0.138,24,0.007,51,0.448,61,0.193,80,0.005,81,0.006,82,0.005,111,1.371,170,2.343,172,2.824,184,3.253,370,6.027,384,7.448,763,4.44,774,3.734,810,5.793,1036,6.389,2403,7.086,2404,7.086,2405,7.086]],["title/changelog.html",[2406,3.064,2407,2.747,2408,3.572]],["body/changelog.html",[0,0.047,1,1.927,2,0.855,3,0.017,4,0.015,5,0.09,9,0.035,12,1.866,13,0.938,16,0.436,20,0.302,21,0.204,24,0.002,25,0.141,27,0.168,28,0.931,32,0.803,33,0.346,34,1.085,51,0.104,54,1.087,60,1.836,64,1.912,65,0.81,68,0.719,69,1.293,71,0.785,72,0.541,73,0.438,74,0.719,75,0.266,80,0.001,81,0.002,82,0.001,88,1.199,89,0.947,90,0.341,99,0.501,107,0.315,115,2.76,116,1.809,117,2.497,119,1.173,128,2.086,143,0.108,146,0.08,165,0.858,170,0.787,173,0.527,181,0.604,182,0.54,205,0.32,208,1.255,213,0.176,224,1.477,226,0.666,228,0.33,229,0.489,230,0.465,231,0.785,234,0.416,237,1.115,243,0.341,245,0.19,255,0.341,266,0.438,270,0.397,271,2.708,274,0.464,276,2.151,278,2.806,280,0.785,281,0.719,292,0.397,296,2.505,326,0.464,337,0.353,338,0.416,339,0.947,340,1.693,355,0.719,372,0.75,376,0.497,378,2.626,380,2.243,391,1.019,396,0.266,422,0.623,424,0.286,446,1.516,448,0.947,450,1.864,452,0.397,457,1.127,463,1.348,464,1.874,465,1.575,476,0.719,478,0.381,482,2.806,484,1.065,488,0.972,523,1.021,528,2.243,537,0.695,546,0.42,547,0.266,548,0.998,549,0.885,552,2.88,567,0.785,574,0.915,579,0.397,588,1.481,602,0.998,603,0.57,604,0.279,606,0.555,608,0.341,623,0.266,658,1.127,663,3.236,717,1.244,718,0.666,723,1.693,726,0.497,727,4.679,737,1.243,756,3.622,757,2.505,758,1.065,759,1.76,769,0.464,770,2.454,774,0.858,782,0.397,789,0.32,805,0.982,806,1.293,817,0.397,819,1.243,820,0.54,821,0.691,822,0.416,848,1.021,853,3.931,877,0.353,878,0.341,879,1.756,880,2.15,882,1.923,889,1.087,891,2.349,895,0.381,899,0.381,901,0.464,909,2.146,910,1.021,916,1.244,918,0.366,924,0.785,930,1.964,936,0.497,939,1.243,940,0.826,944,0.464,964,0.497,965,0.876,967,0.785,969,0.438,971,0.75,982,0.381,987,0.876,997,1.486,999,0.826,1002,0.381,1004,2.153,1018,0.464,1019,1.244,1028,0.497,1040,1.693,1042,0.497,1043,1.686,1044,1.538,1047,2.708,1048,3.03,1050,1.968,1056,0.464,1058,2.024,1062,0.497,1063,0.982,1065,1.768,1066,0.644,1074,3.283,1075,1.411,1076,0.438,1084,1.255,1085,3.951,1086,0.947,1088,0.785,1097,0.691,1098,0.644,1109,1.065,1129,0.464,1132,0.75,1140,1.115,1155,0.366,1157,1.527,1158,0.416,1159,3.03,1161,0.75,1172,0.497,1173,1.411,1174,0.438,1175,1.836,1182,1.173,1185,0.497,1187,0.497,1196,0.497,1203,1.45,1205,2.393,1207,1.836,1220,0.876,1230,1.198,1240,4.946,1243,1.173,1263,0.497,1275,0.644,1299,0.785,1300,1.021,1317,1.45,1322,5.901,1324,0.464,1327,1.065,1332,0.541,1335,1.964,1350,0.311,1354,1.604,1372,1.45,1383,0.464,1391,0.464,1392,4.347,1398,0.366,1399,1.198,1401,2.243,1402,0.785,1406,0.785,1414,0.719,1421,0.438,1423,0.416,1425,0.464,1428,0.623,1435,0.876,1436,1.348,1437,2.243,1438,0.826,1445,0.938,1448,0.497,1452,1.411,1453,0.438,1454,1.686,1455,0.826,1463,1.021,1465,2.068,1487,0.397,1488,2.393,1491,2.024,1495,0.75,1511,1.411,1517,2.501,1524,0.397,1544,0.464,1556,0.438,1562,2.79,1644,1.065,1645,4.711,1649,0.785,1660,1.021,1692,0.464,1695,0.366,1709,1.244,1721,1.055,1729,2.393,1743,0.785,1750,1.115,1772,1.45,1774,1.065,1782,0.826,1820,0.541,1821,2.024,1838,4.45,1840,1.087,1849,1.021,2006,2.258,2007,0.397,2008,1.021,2009,0.497,2019,0.666,2031,1.68,2036,1.332,2037,0.397,2040,1.021,2060,1.768,2061,0.541,2074,1.604,2086,0.938,2094,1.45,2099,2.184,2100,0.719,2106,0.876,2110,0.75,2117,0.75,2141,0.497,2158,2.563,2162,0.541,2165,0.464,2168,1.115,2176,0.938,2180,0.75,2196,0.541,2197,1.889,2227,1.021,2248,1.021,2252,1.411,2256,5.187,2294,1.173,2301,0.464,2324,2.146,2366,1.45,2402,0.938,2408,2.501,2409,0.608,2410,1.411,2411,0.938,2412,0.541,2413,0.608,2414,0.608,2415,1.629,2416,4.016,2417,8.027,2418,4.201,2419,0.608,2420,3.432,2421,0.608,2422,0.608,2423,1.923,2424,0.608,2425,0.608,2426,1.147,2427,0.608,2428,0.608,2429,0.608,2430,1.836,2431,0.497,2432,1.45,2433,0.608,2434,2.184,2435,3.797,2436,3.432,2437,3.298,2438,1.147,2439,0.497,2440,0.541,2441,0.608,2442,0.608,2443,0.608,2444,0.541,2445,1.45,2446,0.608,2447,0.608,2448,0.608,2449,0.608,2450,2.007,2451,3.135,2452,2.79,2453,0.608,2454,0.608,2455,0.608,2456,8.696,2457,1.147,2458,0.541,2459,2.393,2460,1.147,2461,0.608,2462,1.45,2463,0.608,2464,0.608,2465,0.608,2466,0.608,2467,2.063,2468,0.608,2469,0.608,2470,1.629,2471,3.236,2472,0.608,2473,0.541,2474,1.147,2475,0.541,2476,0.541,2477,0.464,2478,0.541,2479,2.007,2480,0.938,2481,2.62,2482,1.486,2483,0.416,2484,4.103,2485,0.608,2486,0.608,2487,0.608,2488,0.608,2489,7.968,2490,4.974,2491,5.139,2492,0.608,2493,5.647,2494,1.629,2495,1.147,2496,0.608,2497,0.608,2498,5.576,2499,2.184,2500,1.147,2501,1.147,2502,0.608,2503,3.432,2504,2.063,2505,0.608,2506,0.608,2507,0.608,2508,1.836,2509,1.147,2510,0.608,2511,0.608,2512,1.629,2513,0.608,2514,0.497,2515,0.785,2516,2.184,2517,0.541,2518,1.244,2519,0.608,2520,2.007,2521,2.79,2522,0.608,2523,1.629,2524,5.293,2525,2.563,2526,0.608,2527,0.608,2528,0.608,2529,1.147,2530,1.173,2531,0.608,2532,2.184,2533,1.147,2534,0.608,2535,0.608,2536,2.063,2537,2.454,2538,1.686,2539,0.938,2540,0.608,2541,0.608,2542,3.03,2543,0.608,2544,0.608,2545,0.608,2546,1.021,2547,0.608,2548,0.608,2549,1.629,2550,0.938,2551,0.608,2552,1.021,2553,4.798,2554,0.608,2555,3.236,2556,1.147,2557,0.608,2558,0.608,2559,0.608,2560,1.836,2561,0.541,2562,1.45,2563,0.608,2564,0.608,2565,0.608,2566,2.184,2567,0.608,2568,0.497,2569,0.608,2570,0.608,2571,0.608,2572,0.608,2573,2.81,2574,2.063,2575,0.608,2576,2.063,2577,1.021,2578,0.464,2579,2.79,2580,0.497,2581,2.063,2582,1.147,2583,1.021,2584,1.021,2585,1.021,2586,1.292,2587,1.836,2588,0.608,2589,0.608,2590,0.541,2591,0.876,2592,0.608,2593,0.497,2594,0.438,2595,0.497,2596,2.145,2597,0.608,2598,0.541,2599,0.608,2600,2.063,2601,0.608,2602,6.353,2603,0.608,2604,0.608,2605,0.938,2606,0.608,2607,0.608,2608,0.608,2609,2.454,2610,1.629,2611,0.608,2612,1.332,2613,1.244,2614,0.608,2615,0.608,2616,0.608,2617,2.184,2618,0.608,2619,1.147,2620,0.608,2621,0.608,2622,1.147,2623,0.608,2624,2.063,2625,0.938,2626,0.608,2627,0.608,2628,1.021,2629,7.172,2630,0.608,2631,0.608,2632,2.024,2633,1.629,2634,0.608,2635,0.608,2636,0.608,2637,0.438,2638,1.836,2639,0.608,2640,2.063,2641,0.608,2642,3.055,2643,0.608,2644,0.541,2645,0.541,2646,0.608,2647,3.427,2648,1.147,2649,5.852,2650,1.45,2651,2.258,2652,1.173,2653,1.147,2654,0.608,2655,1.629,2656,0.608,2657,3.923,2658,0.608,2659,0.608,2660,0.608,2661,0.608,2662,3.958,2663,3.432,2664,0.608,2665,4.798,2666,0.608,2667,0.608,2668,0.608,2669,2.454,2670,0.608,2671,0.608,2672,1.686,2673,0.497,2674,0.608,2675,0.541,2676,0.608,2677,1.836,2678,0.608,2679,0.608,2680,1.629,2681,0.608,2682,1.836,2683,0.608,2684,0.608,2685,1.629,2686,1.021,2687,1.147,2688,1.147,2689,1.836,2690,1.147,2691,0.541,2692,0.608,2693,1.147,2694,1.147,2695,1.629,2696,1.147,2697,1.836,2698,0.608,2699,1.021,2700,0.608,2701,1.147,2702,1.021,2703,0.608,2704,2.79,2705,2.81,2706,1.147,2707,0.608,2708,2.184,2709,0.608,2710,2.81,2711,3.135,2712,0.608,2713,0.608,2714,1.147,2715,0.608,2716,0.497,2717,0.497,2718,0.608,2719,0.608,2720,0.608,2721,0.541,2722,0.608,2723,0.608,2724,0.608,2725,0.608,2726,0.608,2727,0.608,2728,0.608,2729,0.608,2730,0.608,2731,1.147,2732,3.298,2733,0.608,2734,1.45,2735,0.938,2736,0.608,2737,0.608,2738,1.147,2739,1.147,2740,0.608,2741,1.686,2742,0.608,2743,0.608,2744,1.115,2745,0.608,2746,0.608,2747,0.608,2748,0.608,2749,2.063,2750,3.706,2751,0.608,2752,3.236,2753,0.608,2754,0.608,2755,1.332,2756,0.497,2757,0.608,2758,0.608,2759,0.608,2760,1.147,2761,1.147,2762,1.147,2763,1.021,2764,1.147,2765,0.608,2766,1.45,2767,0.608,2768,0.608,2769,0.608,2770,0.608,2771,1.147,2772,0.608,2773,0.608,2774,1.021,2775,0.608,2776,0.608,2777,1.45,2778,1.836,2779,0.608,2780,0.608,2781,1.021,2782,0.608,2783,4.61,2784,0.608,2785,0.608,2786,0.608,2787,0.608,2788,2.81,2789,1.147,2790,0.608,2791,0.608,2792,0.608,2793,0.608,2794,0.608,2795,0.608,2796,1.021,2797,0.608,2798,0.608,2799,2.501,2800,0.608,2801,1.45,2802,0.608,2803,0.608,2804,1.021,2805,0.608,2806,0.608,2807,2.454,2808,1.147,2809,0.608,2810,1.629,2811,0.608,2812,0.608,2813,0.608,2814,1.147,2815,0.608,2816,0.608,2817,1.021,2818,0.608,2819,0.608,2820,0.541,2821,0.876,2822,1.147,2823,2.81,2824,0.608,2825,0.608,2826,0.608,2827,0.497,2828,1.147,2829,0.608,2830,1.147,2831,1.021,2832,0.608,2833,0.608,2834,0.608,2835,0.608,2836,2.454,2837,0.541,2838,0.608,2839,1.021,2840,0.608,2841,0.541,2842,2.063,2843,0.938,2844,0.608,2845,1.147,2846,1.629,2847,0.608,2848,0.608,2849,0.438,2850,0.608,2851,0.608,2852,1.147,2853,0.608,2854,0.497,2855,0.608,2856,1.629,2857,0.608,2858,0.608,2859,1.629,2860,0.608,2861,0.608,2862,1.147,2863,0.608,2864,0.608,2865,0.608,2866,0.608,2867,1.147,2868,0.608,2869,1.629,2870,0.464,2871,1.021,2872,0.608,2873,0.608,2874,1.173,2875,1.147,2876,1.486,2877,0.608,2878,0.608,2879,0.608,2880,0.608,2881,1.629,2882,1.575,2883,0.608,2884,0.541,2885,0.608,2886,1.629,2887,0.608,2888,0.608,2889,0.608,2890,1.629,2891,0.608,2892,0.608,2893,1.147,2894,0.608,2895,1.45,2896,1.147,2897,0.608,2898,0.608,2899,0.608,2900,0.608,2901,0.608,2902,0.464,2903,0.876,2904,0.464,2905,0.608,2906,0.608,2907,0.541,2908,1.021,2909,0.608,2910,0.608,2911,0.608,2912,0.608,2913,1.629,2914,0.608,2915,0.608,2916,0.608,2917,2.063,2918,0.608,2919,1.147,2920,1.147,2921,0.608,2922,0.608,2923,0.608,2924,1.147,2925,0.608,2926,0.608,2927,0.608,2928,0.541,2929,0.541,2930,0.608,2931,0.608,2932,0.608,2933,0.541,2934,0.608,2935,0.608,2936,0.608,2937,0.608,2938,0.608,2939,0.608,2940,0.608,2941,0.608,2942,0.541,2943,0.608,2944,0.608,2945,0.608,2946,0.608,2947,0.608,2948,0.608,2949,1.147,2950,0.608,2951,0.608,2952,0.541,2953,1.147,2954,0.608,2955,1.411,2956,0.608,2957,1.147,2958,0.541,2959,0.608,2960,0.541,2961,0.608,2962,1.147,2963,0.608,2964,0.608,2965,0.608,2966,2.454,2967,0.608,2968,0.608,2969,0.608,2970,0.608,2971,0.541,2972,0.608,2973,0.608,2974,0.608,2975,0.608,2976,0.608,2977,0.464,2978,0.608,2979,1.629,2980,0.608,2981,0.464,2982,0.608,2983,0.608,2984,0.608,2985,0.608,2986,1.147,2987,0.608,2988,1.629,2989,0.608,2990,0.608,2991,0.608,2992,0.608,2993,0.608,2994,0.608,2995,2.81,2996,0.608,2997,1.147,2998,0.608,2999,0.608,3000,1.147,3001,0.497,3002,1.147,3003,0.541,3004,1.332,3005,0.608,3006,0.876,3007,0.608,3008,0.497,3009,0.608,3010,8.193,3011,3.135,3012,0.608,3013,0.608,3014,0.497,3015,0.608,3016,0.608,3017,0.608,3018,0.608,3019,0.608,3020,2.81,3021,0.608,3022,1.173,3023,0.608,3024,0.608,3025,0.608,3026,0.608,3027,0.608,3028,2.063,3029,2.063,3030,1.45,3031,2.454,3032,1.147,3033,1.147,3034,3.055,3035,1.575,3036,3.135,3037,1.021,3038,1.147,3039,1.173,3040,1.147,3041,0.938,3042,1.147,3043,0.608,3044,0.608,3045,2.79,3046,0.497,3047,0.416,3048,0.938,3049,0.608,3050,0.464,3051,0.416,3052,0.464,3053,0.608,3054,0.608,3055,0.541,3056,1.021,3057,0.608,3058,1.147,3059,0.608,3060,0.608,3061,0.608,3062,0.608,3063,1.147,3064,0.608,3065,0.608,3066,1.147,3067,0.608,3068,0.608,3069,0.608,3070,0.541,3071,1.411,3072,0.608,3073,0.608,3074,1.021,3075,0.497,3076,0.608,3077,1.629,3078,2.007,3079,0.608,3080,0.541,3081,1.147,3082,0.608,3083,0.608,3084,0.541,3085,0.608,3086,1.147,3087,0.608,3088,0.608,3089,0.608,3090,0.608,3091,0.608,3092,1.021,3093,1.021,3094,2.063,3095,1.686,3096,0.608,3097,1.45,3098,0.608,3099,0.608,3100,1.332,3101,0.608,3102,0.608,3103,0.608,3104,1.147,3105,1.629,3106,0.608,3107,0.608,3108,0.608,3109,0.608,3110,1.147,3111,0.608,3112,0.876,3113,1.147,3114,0.608,3115,0.608,3116,0.608,3117,0.608,3118,1.147,3119,1.147,3120,0.608,3121,0.608,3122,0.608,3123,0.608,3124,1.629,3125,1.629,3126,1.575,3127,0.438,3128,2.007,3129,0.608,3130,1.629,3131,1.147,3132,0.608,3133,0.608,3134,0.541,3135,1.147,3136,1.629,3137,1.021,3138,0.608,3139,0.608,3140,0.541,3141,0.608,3142,0.608,3143,1.68,3144,0.608,3145,0.608,3146,0.608,3147,0.608,3148,0.608,3149,0.608,3150,0.608,3151,0.608,3152,0.608,3153,0.608,3154,1.147,3155,0.541,3156,0.497,3157,0.541,3158,0.608,3159,0.497,3160,0.608,3161,0.497,3162,0.608,3163,1.332,3164,0.608,3165,0.608,3166,0.608,3167,1.147,3168,0.608,3169,0.608,3170,0.608,3171,0.608,3172,0.938,3173,0.608,3174,0.608,3175,0.608,3176,0.608,3177,0.608,3178,0.541,3179,0.608,3180,1.147,3181,0.608,3182,0.608,3183,1.147,3184,1.147,3185,1.147,3186,1.629,3187,1.836,3188,1.147,3189,1.332,3190,0.938,3191,0.416,3192,0.608,3193,0.497,3194,0.541,3195,0.608,3196,0.826,3197,0.608,3198,1.45,3199,0.608,3200,0.608,3201,0.608,3202,0.608,3203,0.541,3204,0.608,3205,1.147,3206,0.938,3207,1.629,3208,1.021,3209,0.608,3210,0.608,3211,0.608,3212,1.147,3213,1.021,3214,1.147,3215,0.608,3216,0.608,3217,0.608,3218,0.608,3219,0.608,3220,0.608,3221,0.608,3222,0.608,3223,0.608,3224,0.541,3225,0.541,3226,0.608,3227,0.608,3228,1.629,3229,0.608,3230,1.147,3231,0.608,3232,1.021,3233,0.608,3234,1.147,3235,0.608,3236,1.147,3237,0.608,3238,0.938,3239,0.608,3240,0.541,3241,0.608,3242,0.608,3243,0.541,3244,1.629,3245,1.147,3246,1.021,3247,1.147,3248,1.021,3249,1.147,3250,0.826,3251,0.608,3252,1.147,3253,0.541,3254,0.608,3255,1.147,3256,1.021,3257,0.608,3258,0.541,3259,0.608,3260,0.541,3261,0.608,3262,0.608,3263,1.147,3264,0.608,3265,0.608,3266,0.938,3267,0.608,3268,3.432,3269,0.608,3270,0.541,3271,0.541,3272,0.608,3273,0.608,3274,0.608,3275,0.608,3276,0.608,3277,0.608,3278,0.608,3279,0.608,3280,0.608,3281,0.608,3282,0.608,3283,0.608,3284,0.608,3285,0.608,3286,0.938,3287,0.608,3288,0.608,3289,0.608,3290,0.608,3291,0.608,3292,0.608,3293,0.608,3294,0.608,3295,0.608,3296,0.608,3297,0.497,3298,0.608,3299,0.497,3300,0.608,3301,0.608,3302,0.541,3303,0.608,3304,0.464,3305,0.608,3306,0.608,3307,0.541,3308,0.608,3309,0.608,3310,0.608,3311,0.608,3312,0.608,3313,0.608,3314,0.608,3315,0.497,3316,0.608,3317,0.608,3318,0.608,3319,0.608,3320,1.629,3321,0.608,3322,1.147,3323,1.629,3324,1.147,3325,1.147,3326,1.147,3327,1.147,3328,0.608,3329,1.147,3330,0.608,3331,0.608,3332,0.608,3333,0.608,3334,0.608,3335,0.541,3336,0.608,3337,1.147,3338,0.608,3339,0.608,3340,0.464,3341,0.608,3342,0.497,3343,0.608,3344,1.147,3345,0.608,3346,0.464,3347,0.608,3348,0.608,3349,0.608,3350,0.608,3351,0.497,3352,0.608,3353,1.629,3354,1.629,3355,0.608,3356,0.608,3357,0.608,3358,0.608,3359,0.608,3360,0.608,3361,0.608,3362,0.541,3363,0.608,3364,0.608,3365,1.147,3366,0.541,3367,0.541,3368,0.608,3369,0.608,3370,0.608,3371,0.608,3372,0.608,3373,0.608,3374,0.608,3375,0.608,3376,0.608,3377,1.147,3378,1.147,3379,0.608,3380,0.541,3381,0.608,3382,0.608,3383,0.608,3384,1.147,3385,0.608,3386,0.608,3387,1.147,3388,0.608,3389,1.147,3390,0.608,3391,0.608,3392,1.147,3393,2.063,3394,0.608,3395,0.608,3396,0.608,3397,0.608,3398,0.608,3399,0.876,3400,0.541,3401,1.147,3402,0.608,3403,0.608,3404,0.608,3405,0.608,3406,0.608,3407,0.608,3408,0.608,3409,0.608,3410,0.608,3411,0.608,3412,0.608,3413,0.608,3414,0.608,3415,0.608,3416,1.629,3417,0.608,3418,0.608,3419,0.608,3420,0.608,3421,0.608,3422,0.608,3423,0.608,3424,1.147,3425,1.147,3426,0.608,3427,0.608,3428,0.608,3429,2.063,3430,4.408,3431,1.147,3432,0.938,3433,1.021,3434,1.147,3435,1.021,3436,1.147,3437,0.608,3438,1.147,3439,1.021,3440,1.147,3441,1.147,3442,1.147,3443,0.938,3444,1.147,3445,2.063,3446,1.147,3447,2.063,3448,1.147,3449,1.147,3450,1.021,3451,1.629,3452,1.147,3453,0.608,3454,0.541,3455,0.876,3456,0.464,3457,1.147,3458,0.608,3459,2.454,3460,1.147,3461,0.608,3462,0.497,3463,0.608,3464,2.063,3465,0.608,3466,0.608,3467,0.608,3468,0.608,3469,0.608,3470,0.416,3471,0.541,3472,0.608,3473,0.608,3474,0.608,3475,1.147,3476,1.147,3477,1.147,3478,0.608,3479,0.608,3480,0.608,3481,0.608,3482,0.608,3483,1.147,3484,1.147,3485,0.608,3486,0.608,3487,0.608,3488,0.464,3489,0.608,3490,0.608,3491,0.608,3492,1.147,3493,0.608,3494,1.629,3495,1.45,3496,0.608,3497,0.608,3498,0.497,3499,1.147,3500,1.147,3501,0.608,3502,0.464,3503,0.608,3504,0.608,3505,1.629,3506,1.147,3507,1.147,3508,0.464,3509,0.608,3510,1.147,3511,0.608,3512,0.608,3513,0.608,3514,2.063,3515,0.608,3516,0.608,3517,0.608,3518,0.608,3519,0.608,3520,0.608,3521,0.608,3522,1.147,3523,0.608,3524,0.608,3525,0.608,3526,0.541,3527,1.147,3528,0.608,3529,1.147,3530,0.608,3531,0.608,3532,0.497,3533,0.608,3534,1.147,3535,2.063,3536,0.608,3537,0.541,3538,0.608,3539,1.147,3540,1.147,3541,0.608,3542,0.608,3543,0.541,3544,1.147,3545,0.608,3546,0.608,3547,1.147,3548,1.147,3549,0.608,3550,0.608,3551,0.608,3552,1.147,3553,1.147,3554,0.608,3555,0.608,3556,1.147,3557,0.608,3558,0.608,3559,0.608,3560,0.608,3561,1.147,3562,0.608,3563,0.608,3564,0.497,3565,0.608,3566,2.063,3567,0.497,3568,0.608,3569,0.608,3570,1.147,3571,0.541,3572,0.464,3573,1.147,3574,0.608,3575,2.454,3576,1.147,3577,0.464,3578,0.608,3579,0.608,3580,0.497,3581,0.608,3582,0.608,3583,0.608,3584,0.608,3585,0.608,3586,0.608,3587,0.608,3588,0.608,3589,0.608,3590,0.608,3591,0.608,3592,0.608,3593,1.021,3594,0.608,3595,0.608,3596,0.608,3597,0.608,3598,0.497,3599,0.608,3600,0.608,3601,0.541,3602,0.608,3603,0.541,3604,0.608,3605,0.608,3606,0.608,3607,0.497,3608,0.464,3609,0.608,3610,0.608,3611,0.541,3612,1.629,3613,0.608,3614,0.541,3615,0.541,3616,0.608,3617,0.541,3618,0.608,3619,0.608,3620,0.608,3621,0.608,3622,0.608,3623,2.063,3624,0.608,3625,0.608,3626,0.541,3627,0.608,3628,1.45,3629,0.608,3630,0.608,3631,0.608,3632,0.608,3633,0.541,3634,0.608,3635,1.147,3636,0.608,3637,0.608,3638,0.608,3639,0.464,3640,1.147,3641,0.608,3642,0.608,3643,0.608,3644,0.608,3645,1.629,3646,1.147,3647,1.147,3648,0.608,3649,0.541,3650,0.608,3651,1.147,3652,0.541,3653,1.629,3654,0.608,3655,0.608,3656,0.608,3657,0.608,3658,0.608,3659,1.147,3660,1.147,3661,1.147,3662,1.147,3663,1.45,3664,1.147,3665,0.608,3666,1.147,3667,0.608,3668,1.147,3669,0.416,3670,0.541,3671,1.629,3672,0.608,3673,0.608,3674,0.608,3675,0.608,3676,2.454,3677,0.608,3678,0.541,3679,0.608,3680,0.608,3681,0.608,3682,0.541,3683,0.608,3684,0.938,3685,0.608,3686,0.541,3687,0.464,3688,0.608,3689,0.608,3690,0.608,3691,0.608,3692,1.147,3693,0.608,3694,0.608,3695,0.608,3696,0.608,3697,0.541,3698,0.608,3699,0.608,3700,0.497,3701,0.608,3702,0.608,3703,0.497,3704,0.608,3705,0.608,3706,0.608,3707,1.147,3708,0.541]],["title/coverage.html",[2100,4.09]],["body/coverage.html",[0,0.215,1,1.106,5,0.038,6,1.754,8,0.785,12,0.861,24,0.007,26,0.096,32,0.505,34,0.375,66,1.235,80,0.001,81,0.002,82,0.001,83,1.288,84,1.754,85,1.754,86,1.288,96,1.348,109,1.145,116,1.038,117,2.236,121,1.504,122,1.754,123,1.754,131,1.504,146,1.193,147,1.187,149,4.006,150,1.187,154,1.187,158,1.187,161,1.187,164,1.187,165,1.038,178,1.419,179,1.348,191,2.261,202,1.235,203,1.288,210,1.712,212,1.754,260,1.106,261,2.701,289,1.504,290,1.754,334,1.754,343,1.419,391,0.64,392,3.257,414,1.504,420,0.953,463,1.288,525,1.288,526,3.257,527,4.044,530,1.187,534,1.187,537,2.568,539,1.038,540,1.754,544,1.106,545,3.806,546,0.721,547,0.861,560,1.106,572,1.008,587,1.038,614,1.145,615,1.145,616,1.187,617,2.701,623,0.861,625,1.288,627,1.504,636,1.348,637,1.348,638,1.348,665,1.504,672,1.235,673,3.257,676,1.187,677,1.288,692,2.701,694,1.504,704,2.701,708,1.504,713,1.348,714,2.701,715,3.257,735,3.073,749,2.695,750,1.504,752,3.488,753,3.488,764,1.611,771,1.611,777,1.611,778,1.754,779,1.754,783,1.106,807,1.419,811,1.754,815,1.611,824,2.94,825,2.701,832,1.235,868,1.419,869,1.754,870,1.754,886,1.504,887,2.522,888,2.38,925,1.348,926,1.754,931,1.504,932,3.488,938,1.611,941,5.651,942,5.331,945,1.611,960,1.611,962,1.611,968,1.611,972,1.611,982,4.637,1011,1.504,1012,1.611,1025,1.611,1036,1.504,1037,1.754,1038,1.754,1071,1.348,1072,2.38,1079,1.348,1081,0.98,1082,3.257,1086,0.905,1087,1.348,1089,1.288,1092,1.754,1093,1.754,1094,1.348,1095,2.38,1096,2.38,1100,1.348,1106,1.504,1107,1.754,1125,1.504,1126,2.522,1138,1.504,1139,2.701,1160,1.504,1162,1.504,1163,1.754,1164,1.754,1167,3.488,1193,1.504,1194,1.754,1195,1.754,1197,1.754,1199,1.348,1221,1.187,1231,2.701,1232,2.701,1258,1.348,1259,1.754,1277,1.611,1278,1.611,1314,1.288,1315,1.754,1318,1.754,1345,2.38,1348,1.504,1355,1.348,1362,1.504,1371,2.701,1375,1.504,1385,3.806,1386,3.806,1387,1.504,1397,1.504,1399,2.901,1401,2.159,1406,2.261,1415,1.611,1428,5.396,1442,1.504,1443,3.488,1451,1.611,1455,1.419,1467,1.754,1485,1.504,1486,1.754,1496,1.145,1502,1.348,1503,1.288,1513,1.419,1519,1.348,1520,1.288,1522,1.235,1524,1.288,1526,1.348,1527,1.419,1553,2.701,1554,2.701,1568,1.611,1571,1.754,1585,1.504,1587,1.504,1588,1.504,1634,1.288,1636,1.504,1650,1.754,1655,1.348,1679,1.419,1700,3.257,1705,1.419,1711,1.419,1716,1.611,1720,1.419,1721,1.008,1734,2.701,1735,1.754,1742,1.504,1756,1.754,1757,1.611,1837,1.754,1854,1.754,1866,1.754,1867,1.611,1875,1.611,1884,1.504,1885,1.754,1906,1.348,1907,1.754,1923,1.348,1924,1.754,1935,1.754,1936,1.754,1937,3.257,1943,1.754,1944,3.257,1948,4.882,1996,1.504,1997,1.754,2003,4.082,2019,1.92,2023,1.611,2024,1.611,2025,1.611,2026,1.611,2038,1.754,2062,1.348,2063,1.754,2078,1.754,2083,1.754,2084,1.754,2095,1.504,2096,1.754,2100,1.235,2101,1.348,2103,1.419,2104,1.504,2120,1.754,2138,1.348,2139,1.348,2145,1.754,2195,1.754,2211,1.754,2212,1.754,2232,1.611,2277,1.754,2279,1.754,2280,1.754,2292,1.754,2301,1.504,2321,1.754,2339,1.504,2340,1.754,2344,1.288,2350,1.754,2358,1.754,2360,1.754,2365,1.754,2371,1.288,2374,1.754,2378,1.754,2379,1.754,2394,1.754,2398,1.754,2399,1.754,2532,1.754,2542,1.611,2617,3.797,2632,1.419,2647,3.488,2801,2.94,2817,1.754,2839,1.754,2955,1.348,3564,7.708,3709,1.611,3710,7.203,3711,9.495,3712,6.708,3713,6.708,3714,6.019,3715,6.019,3716,5.562,3717,5.562,3718,7.866,3719,1.754,3720,1.754,3721,3.797,3722,3.797,3723,1.754,3724,1.754,3725,6.394,3726,1.754,3727,1.754,3728,8.801,3729,3.488,3730,1.611,3731,1.971,3732,1.971,3733,1.754,3734,1.971,3735,4.266,3736,1.971,3737,4.993,3738,3.304,3739,6.708,3740,6.019,3741,1.971,3742,1.971,3743,3.304,3744,1.971,3745,1.971,3746,6.394,3747,4.266,3748,1.971,3749,1.971,3750,1.971,3751,1.971,3752,1.971,3753,3.304,3754,1.971,3755,5.691,3756,1.754,3757,1.754,3758,1.754,3759,1.754,3760,1.754,3761,1.754,3762,2.94,3763,2.94,3764,1.754,3765,1.754,3766,1.754,3767,1.971,3768,1.971,3769,1.754,3770,1.754,3771,1.754,3772,1.754,3773,1.754,3774,3.488,3775,1.971]],["title/dependencies.html",[173,2.646,3297,3.282]],["body/dependencies.html",[0,0.13,4,0.096,5,0.112,16,0.841,24,0.007,26,0.194,55,1.631,56,1.295,69,2.1,80,0.003,81,0.004,82,0.003,111,0.771,115,1.927,173,1.829,187,3.042,189,3.546,208,3.435,213,1.665,230,2.094,264,1.927,340,4.047,372,2.604,374,2.604,448,2.315,474,2.87,559,3.923,575,2.496,602,2.773,742,1.927,746,4.047,763,2.496,793,3.258,853,2.038,879,2.933,899,4.602,900,3.258,956,3.546,1140,2.727,1175,2.604,1206,5.977,1207,2.604,1246,3.546,1353,2.87,1354,2.604,1357,2.87,1396,3.042,1414,2.496,1437,2.604,1516,3.042,1773,3.546,2007,2.604,2008,3.592,2009,3.258,2031,5.848,2106,4.377,2458,3.546,2650,3.546,2735,4.687,2763,3.546,2849,2.87,2907,3.546,2908,3.546,2958,3.546,3070,3.546,3092,3.546,3093,3.546,3134,3.546,3140,3.546,3178,3.546,3191,2.727,3196,4.129,3208,3.546,3400,3.546,3649,3.546,3686,3.546,3776,5.733,3777,8.351,3778,3.985,3779,3.985,3780,3.985,3781,3.985,3782,3.985,3783,3.985,3784,5.733,3785,5.733,3786,3.985,3787,5.733,3788,3.985,3789,3.985,3790,3.985,3791,3.985,3792,3.985,3793,3.985,3794,3.985,3795,3.985,3796,3.985,3797,3.985,3798,3.985,3799,3.258,3800,3.985,3801,3.985,3802,6.716,3803,3.985,3804,3.985,3805,3.985,3806,5.733,3807,3.985,3808,3.985,3809,3.985,3810,3.985,3811,5.733,3812,3.985,3813,5.733,3814,3.985,3815,3.985,3816,7.783,3817,3.985,3818,3.985,3819,3.985,3820,3.985,3821,3.985,3822,3.985,3823,3.985,3824,3.985,3825,3.985,3826,5.733,3827,3.985,3828,3.042,3829,3.985,3830,3.985,3831,5.733,3832,3.985,3833,5.733,3834,5.733,3835,3.985,3836,3.985,3837,3.985,3838,3.042,3839,3.985,3840,3.985,3841,3.985,3842,3.985,3843,3.985,3844,5.733,3845,3.985,3846,3.985,3847,3.985,3848,3.985,3849,3.985,3850,3.985,3851,3.985,3852,3.985,3853,3.985,3854,3.985,3855,3.985,3856,3.985,3857,3.985,3858,3.985,3859,3.985,3860,5.733,3861,5.103,3862,3.985,3863,3.985,3864,3.985,3865,3.985,3866,3.546,3867,3.985,3868,5.733,3869,3.985,3870,3.985,3871,3.985,3872,3.985,3873,3.985,3874,3.985,3875,3.985,3876,3.985,3877,3.985,3878,3.985,3879,3.985,3880,3.985,3881,5.733,3882,3.985,3883,3.985,3884,3.985,3885,3.985,3886,3.985,3887,5.733,3888,3.546,3889,3.258,3890,3.985,3891,3.985,3892,3.985,3893,3.985,3894,3.985,3895,3.985,3896,3.985,3897,3.985,3898,3.985,3899,3.985,3900,3.985,3901,3.985,3902,3.985,3903,3.985,3904,3.985,3905,3.985,3906,3.985,3907,3.985,3908,3.258,3909,3.985,3910,3.985,3911,3.985,3912,3.985,3913,3.985,3914,3.985,3915,3.985,3916,3.985,3917,3.985,3918,3.985,3919,3.985,3920,3.985]],["title/miscellaneous/enumerations.html",[3921,2.515,3922,5.13]],["body/miscellaneous/enumerations.html",[9,0.396,24,0.007,33,2.903,80,0.005,81,0.006,82,0.005,222,3.983,391,2.241,397,4.321,398,4.719,399,4.507,488,3.249,552,2.875,588,3.634,1072,4.967,1074,4.719,1075,4.719,1095,4.967,1096,5.931,1103,6.287,1104,6.733,1105,6.733,1278,5.638,1292,7.329,1299,4.719,1300,4.321,1301,6.138,3921,4.321,3922,6.138,3923,6.897,3924,6.138,3925,6.138]],["title/miscellaneous/functions.html",[3921,2.515,3926,4.151]],["body/miscellaneous/functions.html",[9,0.321,23,1.41,24,0.007,25,0.807,26,0.272,27,0.968,33,1.687,39,0.919,80,0.004,81,0.005,82,0.004,107,1.811,109,4.203,117,3.588,345,3.043,422,3.043,424,2.637,458,4.211,636,4.95,637,4.95,638,4.95,651,5.21,652,5.21,654,4.033,656,3.831,658,3.321,941,4.275,942,6.101,983,4.578,986,4.578,991,4.578,1011,5.523,1051,3.831,1132,3.659,1155,4.829,1428,3.043,1463,3.508,1568,6.552,1721,2.864,1821,5.21,1948,4.275,1962,4.578,1963,4.983,1964,4.983,1966,4.983,1967,4.983,1970,4.983,1972,4.983,1976,4.983,3611,4.983,3719,6.438,3720,6.438,3726,4.983,3727,7.133,3765,4.983,3766,6.438,3771,6.438,3772,6.438,3773,6.438,3921,3.508,3926,4.033,3927,5.599,3928,7.133,3929,7.995,3930,5.599,3931,5.599,3932,4.578,3933,5.599,3934,5.599]],["title/index.html",[9,0.23,2406,3.064,2407,2.747]],["body/index.html",[16,0.898,24,0.006,25,0.518,32,1.089,34,0.809,64,1.695,65,2.986,74,3.763,75,4.03,80,0.003,81,0.005,82,0.003,88,2.971,89,2.471,90,2.388,91,1.815,99,3.042,115,2.905,117,2.689,124,1.557,127,2.664,173,1.952,208,4.082,239,2.664,265,3.247,270,4.944,271,3.072,274,4.585,275,2.471,276,2.311,280,2.91,296,2.311,378,2.664,380,2.779,448,2.471,546,2.198,569,2.91,574,2.388,608,3.372,718,2.471,723,2.563,756,2.91,757,2.311,770,3.072,789,2.241,806,4.204,822,4.764,823,3.247,877,2.471,879,3.072,880,3.763,889,2.241,899,4.74,901,3.247,910,3.763,924,5.949,1002,3.763,1004,4.045,1008,3.247,1040,4.99,1057,3.063,1097,2.563,1157,2.311,1161,2.779,1172,3.477,1240,3.49,1424,3.477,1452,4.11,1465,4.195,1487,4.55,1556,3.063,1694,4.326,1695,2.563,1774,2.779,1846,3.785,2006,3.063,2007,2.779,2008,3.763,2037,2.779,2100,2.664,2159,4.91,2170,3.063,2190,3.247,2252,2.91,2410,2.91,2411,3.477,2423,2.91,2432,7.576,2435,4.585,2450,3.477,2456,3.785,2459,3.247,2475,5.345,2477,4.585,2480,6.185,2483,2.91,2518,3.247,2593,3.477,2595,3.477,2596,2.91,2638,4.55,2777,3.785,2831,6.197,2876,4.326,2955,2.91,3001,4.91,3022,4.326,3050,3.247,3051,5.177,3071,2.91,3127,3.063,3143,2.91,3159,5.692,3161,4.91,3194,3.785,3346,3.247,3367,3.785,3454,3.785,3455,4.585,3456,3.247,3470,2.91,3498,3.477,3508,3.247,3607,3.477,3639,3.247,3682,3.785,3684,3.477,3838,3.247,3935,3.247,3936,6.771,3937,4.326,3938,2.91,3939,3.247,3940,3.477,3941,3.247,3942,4.91,3943,3.925,3944,2.779,3945,3.785,3946,4.253,3947,5.345,3948,4.253,3949,4.253,3950,4.253,3951,3.247,3952,3.785,3953,6.006,3954,3.785,3955,3.785,3956,3.063,3957,6.963,3958,4.764,3959,3.785,3960,4.253,3961,3.785,3962,4.91,3963,4.253,3964,3.477,3965,3.247,3966,4.253,3967,4.253,3968,3.477,3969,4.253,3970,4.253,3971,3.785,3972,3.247,3973,4.253,3974,3.785,3975,6.006,3976,6.006,3977,7.979,3978,7.565,3979,4.253,3980,4.253,3981,6.006,3982,3.785,3983,4.253,3984,3.477,3985,6.006,3986,4.253,3987,3.785,3988,6.006,3989,6.006,3990,3.063,3991,3.785,3992,4.253,3993,4.253,3994,4.253,3995,3.247,3996,3.785,3997,4.253,3998,3.477,3999,4.585,4000,4.253,4001,4.253,4002,3.785,4003,4.253,4004,2.779]],["title/license.html",[2406,3.064,2407,2.747,4005,3.572]],["body/license.html",[0,0.021,4,0.206,5,0.033,12,1.596,21,0.092,24,0.001,28,0.307,30,0.319,34,0.862,51,0.047,52,0.285,64,2.756,65,1.448,71,0.634,75,0.405,79,0.707,80,0.002,81,0.001,82,0.001,88,3.449,89,0.538,92,0.186,99,0.742,127,1.064,143,0.164,146,0.554,148,0.722,159,0.58,165,0.488,166,2.395,182,0.436,224,2.033,226,1.692,228,1.583,234,1.162,238,2.093,239,3.613,266,3.024,281,5.796,296,0.923,316,0.488,337,0.538,339,0.987,355,0.58,374,0.605,379,0.707,394,0.361,446,1.409,450,2.402,451,0.757,454,0.58,455,0.605,456,0.634,457,2.554,476,1.824,477,2.631,484,0.605,523,0.58,548,0.448,552,0.386,565,0.634,568,0.605,592,2.129,604,0.425,605,0.436,623,0.405,671,0.707,700,1.296,718,1.366,723,1.755,725,0.707,728,1.993,737,0.558,758,5.003,759,2.545,770,2.733,774,2.015,789,0.488,819,1.755,820,2.803,822,3.101,853,0.869,876,1.537,880,2.395,889,0.895,899,1.064,917,0.634,918,3.22,930,1.824,971,1.11,1018,1.296,1044,0.58,1047,0.634,1050,1.169,1058,2.097,1060,1.223,1063,1.755,1066,0.953,1085,2.904,1097,1.023,1102,1.11,1130,2.616,1131,2.778,1153,3.808,1175,1.537,1224,0.757,1230,2.221,1240,1.366,1242,0.707,1243,4.008,1265,0.58,1326,0.58,1329,0.667,1350,0.474,1392,1.583,1399,0.538,1422,0.757,1423,2.616,1425,1.795,1437,1.903,1448,0.757,1452,1.609,1463,2.129,1465,2.304,1495,1.537,1511,1.162,1516,0.707,1545,0.757,1556,4.008,1694,1.223,1695,2.304,1721,3.537,1774,0.605,1782,0.667,1821,0.667,1838,1.795,2037,0.605,2100,1.064,2108,2.093,2110,1.537,2117,0.605,2168,1.993,2176,1.923,2252,0.634,2257,4.402,2258,3.024,2288,1.511,2295,1.993,2325,4.3,2388,0.824,2412,0.824,2416,2.097,2417,1.511,2430,0.824,2435,0.707,2437,0.824,2477,6.352,2479,6.492,2482,5.124,2483,1.609,2499,0.824,2514,1.388,2520,0.757,2525,1.388,2530,0.667,2538,0.757,2542,0.757,2550,1.388,2552,1.511,2561,2.592,2568,1.388,2577,0.824,2578,0.707,2590,2.093,2591,2.594,2593,0.757,2612,2.381,2625,0.757,2632,1.223,2638,2.744,2642,1.511,2644,3.024,2647,1.388,2652,0.667,2673,0.757,2686,1.511,2697,0.824,2716,0.757,2721,0.824,2735,1.388,2744,0.634,2766,0.824,2778,0.824,2781,0.824,2796,0.824,2821,2.594,2841,1.511,2843,0.757,2854,1.388,2870,3.206,2874,0.667,2882,0.707,2884,0.824,2902,0.707,2903,2.594,2928,0.824,2960,0.824,2977,0.707,3003,1.511,3008,1.388,3014,0.757,3035,3.206,3048,0.757,3050,5.893,3051,3.49,3052,1.795,3055,6.489,3071,2.325,3075,1.388,3126,3.46,3143,3.101,3156,0.757,3172,0.757,3187,0.824,3189,1.388,3190,1.388,3193,3.706,3224,0.824,3246,0.824,3248,0.824,3286,0.757,3304,1.296,3307,0.824,3315,0.757,3340,1.296,3432,1.388,3455,2.223,3456,1.795,3462,1.388,3470,1.993,3498,1.388,3502,1.795,3537,1.511,3572,1.795,3577,0.707,3580,3.126,3598,4.368,3601,0.824,3608,0.707,3614,5.718,3615,1.511,3617,1.511,3626,0.824,3663,0.824,3670,1.511,3687,4.079,3697,2.093,3733,0.824,3838,0.707,3936,0.757,3940,0.757,3944,3.333,3956,4.816,3958,0.634,3959,2.093,3964,3.433,3987,0.824,3990,1.694,3999,1.795,4004,0.605,4005,8.294,4006,6.425,4007,6.279,4008,0.926,4009,2.352,4010,7.591,4011,5.134,4012,5.501,4013,3.398,4014,0.926,4015,0.926,4016,1.698,4017,2.352,4018,2.352,4019,5.565,4020,0.926,4021,0.926,4022,1.511,4023,3.398,4024,3.433,4025,1.698,4026,1.698,4027,5.297,4028,4.532,4029,0.926,4030,0.926,4031,3.823,4032,1.511,4033,0.824,4034,0.824,4035,4.756,4036,8.284,4037,2.352,4038,2.093,4039,0.926,4040,0.926,4041,2.912,4042,4.831,4043,0.926,4044,4.831,4045,1.296,4046,0.926,4047,3.398,4048,0.707,4049,0.757,4050,5.449,4051,0.824,4052,0.824,4053,5.1,4054,5.343,4055,3.398,4056,5.565,4057,0.926,4058,1.698,4059,0.926,4060,0.926,4061,2.093,4062,0.926,4063,0.926,4064,0.926,4065,0.926,4066,0.926,4067,0.926,4068,2.912,4069,0.926,4070,2.352,4071,0.926,4072,0.926,4073,5.467,4074,1.795,4075,0.926,4076,0.926,4077,1.923,4078,2.352,4079,0.926,4080,2.093,4081,0.707,4082,1.698,4083,1.698,4084,2.352,4085,0.926,4086,3.398,4087,3.398,4088,3.823,4089,2.352,4090,1.698,4091,0.926,4092,0.926,4093,0.926,4094,2.352,4095,0.926,4096,0.926,4097,1.698,4098,0.926,4099,1.698,4100,0.926,4101,0.926,4102,2.912,4103,0.824,4104,1.698,4105,8.247,4106,2.352,4107,4.831,4108,2.592,4109,1.296,4110,0.926,4111,1.698,4112,2.352,4113,4.831,4114,5.1,4115,0.926,4116,2.912,4117,1.698,4118,2.912,4119,2.592,4120,0.926,4121,2.352,4122,0.707,4123,7.372,4124,1.511,4125,0.926,4126,4.532,4127,0.926,4128,2.093,4129,2.616,4130,0.926,4131,6.122,4132,2.093,4133,1.698,4134,5.343,4135,3.823,4136,0.926,4137,1.698,4138,4.199,4139,0.926,4140,5.767,4141,1.698,4142,0.926,4143,0.926,4144,0.926,4145,2.352,4146,0.926,4147,0.926,4148,0.926,4149,0.757,4150,2.352,4151,2.592,4152,0.926,4153,0.926,4154,0.926,4155,1.511,4156,5.1,4157,0.824,4158,0.757,4159,2.093,4160,2.352,4161,2.352,4162,0.926,4163,3.024,4164,0.824,4165,1.162,4166,2.093,4167,0.926,4168,0.926,4169,0.926,4170,1.511,4171,0.926,4172,6.63,4173,2.093,4174,0.667,4175,1.698,4176,2.912,4177,0.926,4178,1.698,4179,2.778,4180,0.926,4181,0.926,4182,0.926,4183,1.698,4184,0.926,4185,1.388,4186,0.926,4187,2.778,4188,2.223,4189,0.926,4190,0.757,4191,4.199,4192,2.381,4193,0.926,4194,3.024,4195,0.926,4196,1.698,4197,0.926,4198,0.926,4199,0.926,4200,0.926,4201,0.926,4202,2.352,4203,0.926,4204,1.698,4205,1.698,4206,1.698,4207,0.926,4208,5.767,4209,1.511,4210,0.926,4211,0.926,4212,0.824,4213,0.926,4214,0.667,4215,0.926,4216,0.926,4217,2.352,4218,0.824,4219,0.926,4220,5.449,4221,0.707,4222,0.926,4223,0.926,4224,3.398,4225,3.403,4226,0.926,4227,0.926,4228,2.352,4229,0.926,4230,0.926,4231,2.912,4232,0.926,4233,0.926,4234,0.926,4235,0.926,4236,0.926,4237,0.926,4238,1.698,4239,0.926,4240,0.926,4241,0.926,4242,1.698,4243,0.926,4244,0.926,4245,0.926,4246,0.926,4247,0.926,4248,1.698,4249,1.223,4250,4.3,4251,0.926,4252,3.823,4253,0.926,4254,0.926,4255,2.352,4256,2.912,4257,2.912,4258,2.912,4259,0.926,4260,3.024,4261,3.024,4262,0.926,4263,2.352,4264,0.926,4265,1.698,4266,0.926,4267,1.511,4268,3.398,4269,1.698,4270,2.912,4271,2.912,4272,0.926,4273,2.352,4274,3.024,4275,0.926,4276,0.926,4277,3.433,4278,2.093,4279,2.352,4280,1.698,4281,0.667,4282,0.926,4283,0.824,4284,0.926,4285,0.926,4286,2.093,4287,0.926,4288,0.926,4289,0.926,4290,0.926,4291,0.926,4292,2.352,4293,0.926,4294,0.824,4295,2.093,4296,1.698,4297,3.823,4298,6.153,4299,2.352,4300,1.698,4301,1.698,4302,1.698,4303,2.912,4304,0.824,4305,0.926,4306,0.926,4307,0.926,4308,3.403,4309,1.698,4310,0.926,4311,0.926,4312,0.926,4313,0.926,4314,1.698,4315,0.926,4316,1.698,4317,0.926,4318,0.926,4319,3.264,4320,0.926,4321,4.756,4322,0.926,4323,0.926,4324,0.926,4325,0.926,4326,1.698,4327,0.926,4328,2.447,4329,2.912,4330,1.698,4331,0.824,4332,0.926,4333,0.926,4334,0.926,4335,0.926,4336,1.698,4337,0.926,4338,0.926,4339,0.757,4340,2.592,4341,0.926,4342,1.698,4343,0.926,4344,0.926,4345,2.093,4346,0.926,4347,0.926,4348,0.926,4349,0.926,4350,2.912,4351,0.926,4352,0.926,4353,0.824,4354,0.824,4355,0.824,4356,0.926,4357,0.926,4358,0.926,4359,3.398,4360,0.926,4361,0.926,4362,2.912,4363,0.926,4364,0.926,4365,0.926,4366,0.926,4367,0.926,4368,0.926,4369,2.912,4370,0.926,4371,0.926,4372,2.352,4373,0.926,4374,0.757,4375,2.352,4376,0.926,4377,0.926,4378,0.926,4379,0.926,4380,0.926,4381,0.926,4382,0.926,4383,0.824,4384,1.511,4385,0.926,4386,0.667,4387,1.698,4388,0.824,4389,0.926,4390,2.912,4391,0.926,4392,0.926,4393,1.698,4394,2.352,4395,2.352,4396,0.757,4397,1.698,4398,0.926,4399,4.199,4400,0.926,4401,0.926,4402,1.698,4403,0.926,4404,0.926,4405,0.926,4406,0.926,4407,2.912,4408,2.352,4409,0.926,4410,3.398,4411,0.926,4412,0.926,4413,0.926,4414,0.926,4415,0.824,4416,0.926,4417,1.698,4418,1.698,4419,1.511,4420,2.352,4421,0.824,4422,0.926,4423,2.352,4424,0.926,4425,1.388,4426,0.926,4427,1.698,4428,0.926,4429,0.926,4430,1.698,4431,7.114,4432,2.352,4433,0.926,4434,3.398,4435,5.1,4436,2.352,4437,0.926,4438,0.926,4439,0.926,4440,2.912,4441,0.926,4442,2.352,4443,0.926,4444,0.926,4445,0.926,4446,0.926,4447,0.926,4448,0.926,4449,0.926,4450,2.912,4451,1.698,4452,0.926,4453,0.926,4454,2.352,4455,0.926,4456,1.698,4457,2.352,4458,1.698,4459,0.926,4460,0.926,4461,0.926,4462,1.698,4463,2.352,4464,0.824,4465,0.926,4466,0.926,4467,1.698,4468,0.926,4469,0.824,4470,0.926,4471,0.926,4472,0.926,4473,0.926,4474,2.352,4475,1.698,4476,0.824,4477,0.926,4478,0.926,4479,2.912,4480,0.926,4481,2.352,4482,0.926,4483,0.926,4484,1.698,4485,0.926,4486,0.926,4487,0.926,4488,2.352,4489,1.698,4490,1.698,4491,0.926,4492,1.698,4493,4.199,4494,1.511,4495,2.352,4496,2.912,4497,0.824,4498,0.926,4499,1.698,4500,0.926,4501,2.352,4502,0.926,4503,0.926,4504,0.926,4505,0.926,4506,0.926,4507,0.926,4508,2.352,4509,1.698,4510,0.926,4511,0.824,4512,0.926,4513,0.926,4514,1.698,4515,1.698,4516,0.926,4517,1.511,4518,0.926,4519,0.926,4520,0.757,4521,0.926,4522,2.352,4523,0.926,4524,0.926,4525,0.926,4526,0.926,4527,1.698,4528,2.352,4529,0.926,4530,0.926,4531,0.926,4532,0.926,4533,1.698,4534,0.926,4535,0.926,4536,0.926,4537,0.926,4538,0.926,4539,0.926,4540,0.926,4541,0.926,4542,0.707,4543,0.926,4544,0.926,4545,0.926,4546,2.912,4547,0.926,4548,0.926,4549,1.698,4550,0.926,4551,0.926,4552,0.926,4553,0.926,4554,0.926,4555,0.926,4556,0.926,4557,0.757,4558,0.926,4559,0.926,4560,0.926,4561,0.824,4562,1.698,4563,0.926,4564,0.926,4565,0.926,4566,0.926,4567,1.698,4568,0.926,4569,0.926,4570,0.824,4571,0.824,4572,0.634,4573,0.926,4574,1.698,4575,1.698,4576,0.926,4577,0.926,4578,0.926,4579,0.926,4580,2.352,4581,1.388,4582,0.926,4583,1.698,4584,1.698,4585,0.926,4586,0.757,4587,0.824,4588,0.926,4589,0.824,4590,0.926,4591,0.926,4592,1.698,4593,0.926,4594,2.352,4595,0.926,4596,0.926,4597,0.926,4598,0.926,4599,0.926,4600,0.926,4601,0.926,4602,0.926,4603,0.926,4604,0.926,4605,0.824,4606,0.926,4607,0.757,4608,0.926,4609,0.926,4610,0.926,4611,0.926,4612,0.926,4613,0.926,4614,0.926,4615,0.926,4616,0.926,4617,0.926,4618,0.926,4619,0.707,4620,0.824,4621,1.698,4622,1.511,4623,0.926,4624,0.926,4625,0.926,4626,0.926,4627,0.926,4628,0.926,4629,0.926,4630,0.926,4631,0.824,4632,0.707,4633,0.926,4634,0.926,4635,0.757,4636,0.926,4637,0.926,4638,0.926,4639,0.926,4640,0.926]],["title/modules.html",[172,2.602]],["body/modules.html",[24,0.006,80,0.005,81,0.006,82,0.005,171,4.695,172,2.598,177,4.461,196,4.461,201,4.461,364,4.695,367,4.695,368,4.695,369,4.084,370,4.695,918,5.625,1175,6.318,1268,8.308,1270,4.461,1344,4.461,1384,5.33,1405,4.977,1629,4.695,1999,4.695,2002,4.695,4641,9.669,4642,9.669,4643,8.782]],["title/overview.html",[4644,5.337]],["body/overview.html",[2,0.903,24,0.007,80,0.003,81,0.004,82,0.003,148,1.36,171,6.426,172,1.765,173,2.837,174,3.942,175,3.942,176,3.942,177,6.431,178,5.126,179,4.87,180,3.47,181,2.334,182,2.086,196,6.184,197,3.942,198,3.942,199,3.942,200,3.942,201,5.741,202,5.394,203,4.651,211,1.621,364,6.578,365,3.942,366,3.942,367,5.126,368,5.126,369,5.394,370,5.126,616,4.289,672,4.459,676,4.289,751,2.202,783,4.834,832,5.394,872,3.942,873,3.942,874,3.942,1199,5.892,1258,5.892,1270,6.353,1271,3.942,1272,3.942,1273,3.942,1339,3.942,1340,3.942,1341,3.942,1344,4.87,1522,5.394,1629,6.637,1630,3.942,1632,3.942,1633,3.942,1634,4.651,1906,4.87,1923,4.87,1999,6.804,2000,3.942,2001,3.942,2002,6.687,2062,4.87,2101,4.87,2135,3.942,2137,3.942,2138,4.87,2139,4.87,2344,4.651,2368,3.942,2369,3.942,2370,3.942,2371,4.651,2444,3.942,2632,3.19,2717,3.621,4644,3.621,4645,4.429,4646,4.429]],["title/todo.html",[63,1.5,2406,3.064,2407,2.747]],["body/todo.html",[0,0.092,5,0.079,10,0.557,12,1.515,16,1.228,18,0.97,24,0.006,25,0.502,26,0.282,32,1.898,39,0.516,52,1.443,57,0.829,63,1.518,64,2.954,65,3.899,69,2.141,80,0.004,81,0.004,82,0.003,88,1.734,115,3.284,116,2.141,117,2.603,119,2.926,128,2.141,148,1.247,170,2.196,182,2.739,185,2.02,205,2.141,208,2.974,213,1.971,228,2.208,230,1.158,267,5.551,270,3.799,271,4.394,276,3.69,296,4.881,303,3.264,336,4.188,372,3.799,378,3.643,382,2.448,383,2.926,386,3.102,446,1.965,455,2.655,457,1.865,477,2.546,523,2.546,546,1.487,549,2.208,603,2.891,608,2.281,626,2.078,681,2.281,703,2.926,716,2.812,718,3.378,749,1.819,757,4.565,770,2.078,783,2.281,789,3.064,804,2.448,805,2.448,821,3.503,877,3.945,879,2.974,889,3.577,911,4.439,924,4.646,930,4.913,939,2.448,940,2.926,942,2.926,967,2.78,970,2.655,1001,5.124,1002,3.643,1040,2.448,1041,6.411,1044,2.546,1047,2.78,1063,2.448,1065,2.926,1066,2.281,1109,3.799,1153,2.78,1158,2.78,1175,2.655,1205,3.102,1207,2.655,1224,4.753,1226,3.616,1230,2.361,1265,2.546,1275,2.281,1335,2.546,1350,3.473,1398,2.448,1399,3.945,1410,6.043,1432,2.78,1436,4.437,1437,2.655,1452,3.978,1487,2.655,1511,2.78,1644,2.655,1695,2.448,1721,2.078,1729,3.102,2006,2.926,2008,3.643,2031,4.646,2170,2.926,2190,3.102,2416,2.926,2459,3.102,2484,3.616,2493,6.411,2515,2.78,2539,3.322,2568,3.322,2580,3.322,2584,3.616,2585,3.616,2587,2.655,2612,3.322,2613,3.102,2629,3.616,2637,2.926,2649,3.322,2657,3.616,2882,3.102,2955,3.978,3030,3.616,3034,3.616,3078,3.322,3112,4.439,3126,3.102,3127,2.926,3206,5.551,3286,3.322,3297,3.322,3299,3.322,3346,3.102,3608,3.102,3639,3.102,3669,3.978,3700,3.322,3703,3.322,3861,3.616,3888,3.616,3889,3.322,3938,2.78,3984,3.322,4004,2.655,4045,3.102,4048,3.102,4174,2.926,4212,3.616,4339,3.322,4619,4.439,4647,3.322,4648,4.063,4649,3.616,4650,3.616,4651,3.102,4652,3.322,4653,4.063,4654,4.063,4655,3.616,4656,5.175,4657,4.063,4658,5.338,4659,4.063,4660,4.063,4661,4.063,4662,4.063,4663,4.063,4664,4.063,4665,4.063,4666,2.926,4667,4.063,4668,3.322,4669,4.063,4670,4.063,4671,4.063,4672,4.063,4673,4.063,4674,4.063,4675,4.063,4676,4.063,4677,4.063,4678,4.063,4679,4.063,4680,4.063,4681,4.063,4682,4.063,4683,3.616,4684,4.063,4685,4.063,4686,4.063,4687,4.063,4688,4.063,4689,3.616,4690,4.063,4691,4.063,4692,3.616,4693,3.616,4694,3.616,4695,4.063,4696,3.616,4697,4.063,4698,4.063,4699,4.063,4700,3.322,4701,4.063,4702,6.043,4703,4.063,4704,4.063,4705,4.063,4706,4.063,4707,4.063,4708,4.063,4709,3.322,4710,4.063,4711,5.814,4712,3.616,4713,4.063]],["title/miscellaneous/typealiases.html",[3921,2.515,4714,5.764]],["body/miscellaneous/typealiases.html",[9,0.316,12,1.436,16,1.164,20,3.559,24,0.007,26,0.448,39,0.7,52,0.925,71,3.77,80,0.004,81,0.005,82,0.004,99,2.407,101,5.197,146,0.727,170,2.004,220,2.157,306,5.442,450,3.372,457,2.529,539,2.903,541,4.892,546,2.62,572,2.818,585,4.159,587,2.903,622,4.068,656,4.899,887,4.206,888,5.728,893,5.853,903,5.853,1072,3.968,1076,3.968,1077,5.156,1086,3.286,1089,3.6,1095,3.968,1096,5.156,1099,5.853,1126,4.206,1127,5.465,1129,4.206,1345,3.968,1350,3.662,1360,5.465,1361,5.853,1388,5.853,1400,4.903,1404,3.968,1406,3.77,1436,3.6,1437,4.678,1700,4.206,1714,6.371,1757,4.504,1790,4.504,1791,4.504,1855,3.77,1875,4.504,1948,4.206,1961,6.371,1962,5.853,2122,5.465,2232,4.504,2251,6.371,2755,4.504,2756,4.504,3729,4.504,3730,5.853,3921,3.452,3924,6.371,3925,4.903,3929,7.078,4331,4.903,4715,5.509,4716,7.159,4717,7.159,4718,5.509,4719,5.509,4720,7.159,4721,7.159,4722,5.509,4723,5.509,4724,5.509,4725,4.903,4726,5.509,4727,4.903,4728,4.903,4729,5.509,4730,7.159,4731,5.509,4732,7.159,4733,5.509,4734,4.903,4735,5.509,4736,5.509,4737,5.509,4738,5.509,4739,3.77,4740,5.509,4741,5.509,4742,5.509,4743,5.509,4744,5.509]],["title/miscellaneous/variables.html",[2651,4.151,3921,2.515]],["body/miscellaneous/variables.html",[1,1.075,9,0.11,10,0.263,12,1.956,14,0.747,24,0.007,25,0.423,26,0.411,29,0.517,30,0.659,32,2.415,33,2.828,34,1.355,39,0.622,49,1.314,61,0.114,63,0.715,64,0.763,73,1.379,80,0.002,81,0.002,82,0.001,83,2.107,86,2.107,88,1.376,91,1.783,99,0.837,107,0.37,109,2.427,115,1.56,116,1.009,117,4.117,118,1.379,124,0.701,125,2.107,126,2.752,128,1.009,136,1.704,143,1.459,184,1.48,191,2.859,208,2.137,213,0.556,224,1.665,226,1.112,229,0.817,230,0.546,240,1.565,245,0.599,255,1.81,271,1.65,275,1.112,316,1.699,337,1.874,339,1.112,341,3.416,343,1.379,382,1.154,383,1.379,391,0.622,392,1.462,393,1.462,395,1.462,396,1.826,420,0.926,422,1.753,424,1.519,446,0.926,477,1.199,486,2.462,487,1.565,525,1.251,526,1.462,527,1.81,530,1.154,534,1.154,537,1.783,539,1.009,541,1.112,544,1.075,546,0.701,552,0.798,560,1.075,572,0.979,574,1.075,575,1.199,587,1.009,602,0.926,603,0.952,604,0.879,605,0.902,606,0.926,614,1.112,615,1.112,658,1.48,665,2.462,681,1.075,714,1.565,715,2.462,718,1.874,735,4.272,740,1.112,747,3.009,749,0.857,750,1.462,751,0.952,752,1.565,753,3.416,756,1.31,757,1.753,760,1.462,764,2.636,765,2.636,766,1.704,767,1.704,770,1.65,771,2.636,772,2.207,773,1.565,774,2.201,775,1.379,776,1.462,783,3.542,786,1.462,789,1.699,804,2.954,806,1.699,821,1.154,868,2.323,877,1.112,878,1.075,879,1.65,889,1.009,909,1.462,911,1.462,916,1.462,917,1.31,924,1.31,925,1.31,930,1.199,931,1.462,932,1.565,936,1.565,938,3.416,939,1.154,940,1.379,941,1.462,942,4.772,944,1.462,945,2.636,960,2.636,961,1.704,962,2.636,963,4.528,964,1.565,965,1.462,966,1.704,967,2.859,968,2.636,969,1.379,970,2.73,971,1.251,972,2.636,973,1.704,974,2.87,975,1.704,976,1.565,977,1.704,978,1.704,979,1.704,980,1.704,981,1.704,983,1.565,986,1.565,987,4.177,991,1.565,997,1.379,998,2.87,999,1.379,1000,1.704,1001,1.251,1002,2.617,1003,2.87,1004,2.427,1005,1.565,1006,2.87,1007,1.704,1008,2.462,1009,1.704,1010,1.704,1011,1.462,1012,2.636,1013,1.704,1014,1.704,1015,1.565,1016,1.565,1017,1.565,1018,1.462,1019,1.462,1020,1.704,1021,1.704,1022,1.704,1023,1.704,1024,4.87,1025,2.636,1026,4.87,1027,1.704,1028,1.565,1029,1.704,1040,1.154,1043,2.636,1051,1.31,1063,1.154,1066,1.075,1081,2.077,1083,2.02,1084,3.034,1086,2.25,1088,1.31,1130,1.31,1132,1.251,1140,1.31,1153,1.31,1157,1.04,1167,1.565,1168,1.704,1169,1.704,1173,1.31,1185,1.565,1191,1.704,1192,1.704,1205,1.462,1207,3.575,1221,1.943,1231,1.565,1232,2.636,1240,1.112,1247,1.704,1265,1.199,1303,2.636,1314,1.251,1326,1.199,1335,1.199,1345,1.379,1350,2.137,1351,2.323,1352,2.636,1357,1.379,1360,1.462,1362,2.462,1363,1.565,1364,1.565,1365,1.565,1366,1.462,1367,1.565,1385,2.207,1386,2.207,1387,2.462,1391,1.462,1392,2.271,1393,2.87,1395,2.462,1398,1.154,1399,2.848,1401,4.123,1404,2.323,1406,2.859,1411,2.87,1413,4.87,1415,2.636,1416,1.704,1417,2.87,1418,1.565,1419,1.704,1420,1.462,1421,1.379,1422,1.565,1423,1.31,1424,1.565,1425,1.462,1426,2.87,1427,1.704,1428,1.04,1429,1.704,1430,1.704,1443,3.416,1450,1.704,1451,2.636,1455,2.323,1496,3.446,1524,2.107,1553,1.565,1554,2.636,1644,1.251,1700,1.462,1709,1.462,1716,2.636,1721,1.65,1742,2.462,1750,1.31,1838,1.462,1888,1.565,1898,1.704,1900,1.704,2003,1.565,2007,1.251,2008,2.02,2019,1.112,2023,2.636,2024,2.636,2025,2.636,2026,2.636,2036,1.565,2037,2.107,2100,1.199,2109,1.704,2197,1.943,2294,1.379,2301,2.462,2391,1.704,2423,4.058,2459,2.462,2476,1.704,2480,1.565,2514,1.565,2515,1.31,2516,1.704,2517,2.87,2518,1.462,2560,2.87,2591,1.462,2596,1.31,2637,3.531,2638,2.73,2651,1.379,2691,1.704,2903,1.462,3047,1.31,3112,1.462,3156,1.565,3163,1.565,3191,2.859,3225,2.87,3266,1.565,3362,2.87,3700,1.565,3709,1.565,3721,1.704,3722,4.363,3723,2.87,3724,3.718,3729,1.565,3730,4.008,3755,1.704,3756,3.718,3757,3.718,3758,3.718,3759,3.718,3760,1.704,3761,2.87,3762,1.704,3763,1.704,3764,2.87,3769,1.704,3770,2.87,3774,4.008,3828,1.462,3921,1.199,3926,2.323,3928,5.615,3932,1.565,3935,2.462,3962,1.565,3996,1.704,4174,1.379,4652,1.565,4668,3.416,4692,2.87,4702,1.704,4725,1.704,4727,2.87,4728,3.718,4745,3.225,4746,4.178,4747,1.914,4748,4.902,4749,6.309,4750,1.914,4751,4.178,4752,1.914,4753,1.914,4754,4.902,4755,4.178,4756,1.914,4757,3.225,4758,1.914,4759,1.914,4760,1.914,4761,1.914,4762,1.914,4763,1.914,4764,1.914,4765,1.914,4766,1.914,4767,1.914,4768,1.704,4769,1.914,4770,1.914,4771,1.914,4772,1.914,4773,1.914,4774,2.636,4775,1.704,4776,1.704,4777,1.704,4778,1.914,4779,1.914,4780,1.914,4781,2.87,4782,1.914,4783,1.914,4784,1.914,4785,1.914,4786,1.914,4787,1.704,4788,1.914,4789,3.718,4790,1.914,4791,1.914,4792,1.914,4793,1.914,4794,1.914,4795,1.914,4796,1.914,4797,1.914,4798,1.914,4799,1.914,4800,1.914,4801,1.914,4802,1.914,4803,1.914,4804,1.914,4805,1.914,4806,1.914,4807,1.914,4808,1.914,4809,1.914,4810,1.914,4811,1.914,4812,1.914,4813,1.914,4814,1.914,4815,1.914,4816,1.914,4817,1.914,4818,1.914,4819,1.914,4820,1.914,4821,3.225,4822,1.914,4823,1.914,4824,1.914,4825,1.914]],["title/additional-documentation/nestjs-application.html",[75,1.508,806,1.818,820,1.626,1840,1.818]],["body/additional-documentation/nestjs-application.html",[7,0.867,24,0.005,25,0.313,32,0.93,64,3.235,65,3.496,68,2.277,75,3.78,80,0.003,81,0.004,82,0.003,88,3.349,89,3.115,148,1.115,170,1.501,172,1.448,181,1.915,208,2.742,226,3.115,239,2.277,271,4.628,276,2.914,296,1.975,338,2.487,339,2.111,340,2.19,375,2.774,446,2.593,457,1.668,485,3.861,523,4.406,548,1.758,555,2.852,602,3.402,606,2.593,688,2.375,728,3.668,757,4.265,770,3.259,776,2.774,806,4.482,820,1.712,821,2.19,822,3.668,823,2.774,853,1.859,877,3.115,879,1.859,880,2.277,889,2.825,899,2.277,917,2.487,918,2.19,930,2.277,967,4.359,997,2.617,1001,4.595,1008,2.774,1040,2.19,1050,3.167,1057,3.861,1066,3.01,1108,2.971,1152,2.971,1153,4.359,1161,3.503,1173,4.359,1240,2.111,1267,2.774,1322,2.617,1324,2.774,1326,2.277,1354,4.595,1414,3.359,1418,2.971,1421,2.617,1436,2.375,1644,4.901,1649,2.487,1729,2.774,1840,2.825,2007,2.375,2008,2.277,2037,3.503,2100,4.699,2106,2.774,2168,3.668,2197,2.19,2295,3.668,2407,3.668,2410,2.487,2439,2.971,2471,2.971,2479,2.971,2483,2.487,2493,2.971,2508,3.234,2515,4.812,2518,4.093,2520,2.971,2530,3.861,2538,5.208,2539,2.971,2583,3.234,2586,4.699,2587,2.375,2637,5.652,2638,5.912,2741,2.971,2744,2.487,2955,6.075,2981,4.093,3004,4.383,3097,4.771,3112,4.093,3143,3.668,3159,2.971,3163,4.383,3191,2.487,3302,5.67,3366,3.234,3399,4.093,3435,4.771,3450,3.234,3774,2.971,3828,2.774,3908,2.971,3935,2.774,3936,2.971,3937,2.617,3939,2.774,3941,2.774,3944,2.375,3945,3.234,3951,4.863,3962,2.971,3984,2.971,3995,5.369,4004,4.163,4011,2.971,4164,4.771,4165,2.487,4173,3.234,4174,4.588,4220,3.234,4249,2.617,4278,3.234,4319,2.617,4328,3.861,4386,2.617,4425,2.971,4469,3.234,4476,3.234,4586,4.383,4607,2.971,4632,2.774,4643,3.234,4689,4.771,4693,5.67,4694,5.67,4739,3.668,4774,4.383,4775,4.771,4776,3.234,4777,3.234,4789,3.234,4826,3.634,4827,3.634,4828,3.634,4829,3.634,4830,3.634,4831,3.634,4832,3.634,4833,3.634,4834,3.634,4835,5.361,4836,3.634,4837,3.634,4838,3.634,4839,5.361,4840,7.032,4841,3.634,4842,4.771,4843,3.634,4844,3.634,4845,2.971,4846,3.634,4847,6.37,4848,3.634,4849,3.234,4850,3.634,4851,3.634,4852,3.634,4853,7.848,4854,3.634,4855,3.634,4856,3.634,4857,3.634,4858,5.361,4859,3.634,4860,3.634,4861,3.634,4862,3.634,4863,5.361,4864,3.634,4865,3.634,4866,4.771,4867,5.361,4868,3.634,4869,3.634,4870,3.634,4871,3.634,4872,3.634,4873,3.634,4874,3.634,4875,3.634,4876,3.634,4877,3.234,4878,3.634,4879,4.771,4880,3.634,4881,3.634,4882,3.634,4883,3.634,4884,6.37,4885,4.771,4886,3.634,4887,3.634,4888,3.634,4889,3.634,4890,3.634,4891,3.634,4892,3.634,4893,5.361,4894,3.634,4895,5.361,4896,3.234,4897,3.634,4898,6.37,4899,5.361,4900,3.634,4901,3.634,4902,3.634,4903,3.234,4904,3.634,4905,3.234,4906,3.634,4907,3.634,4908,3.634,4909,3.634,4910,3.634,4911,3.634,4912,3.634,4913,3.634]],["title/additional-documentation/nestjs-application/software-architecture.html",[820,1.626,1840,1.818,3943,2.255,4012,2.635]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.627,4,0.055,5,0.06,12,1.818,16,1.081,21,0.468,23,0.463,24,0.003,25,0.197,32,0.328,33,0.926,34,0.585,52,0.516,62,0.8,63,0.479,64,2.979,65,1.528,68,2.961,69,0.675,73,0.923,75,3.218,79,0.979,80,0.002,81,0.002,82,0.001,88,3.092,89,1.786,90,0.72,99,0.56,115,3.505,116,2.249,117,2.8,119,0.923,125,1.489,126,1.279,128,1.963,143,0.227,146,0.795,148,0.699,173,1.959,182,1.073,185,0.637,205,0.675,224,0.908,226,1.786,228,4.379,231,0.877,239,2.334,248,1.048,255,0.72,270,5.174,271,0.656,273,0.697,276,1.238,280,0.877,281,1.926,296,0.697,335,0.772,337,5.235,338,0.877,339,2.164,340,4.008,355,0.803,374,3.568,375,1.739,378,3.207,379,0.979,380,3.934,382,0.772,391,0.416,423,0.877,424,0.604,445,1.726,446,1.802,448,0.745,449,0.979,450,1.073,453,0.772,454,0.803,455,2.009,456,2.104,457,2.506,464,0.979,475,1.739,476,2.674,477,2.674,488,1.448,528,1.489,547,0.995,548,1.102,574,1.726,588,0.675,590,0.838,605,0.604,608,1.279,623,0.56,658,1.71,688,0.838,700,0.979,717,0.979,723,1.373,727,0.877,737,1.373,748,0.803,757,1.671,758,0.838,759,4.307,774,3.034,781,4.596,782,3.568,789,3.881,804,0.772,819,3.085,820,1.448,822,4.12,853,3.924,877,1.786,878,2.874,879,4.267,880,2.674,882,1.559,891,2.104,918,1.373,939,3.469,969,0.923,970,4.087,971,0.838,976,1.048,999,0.923,1002,0.803,1004,2.164,1040,1.373,1050,4.194,1051,0.877,1063,1.373,1065,3.932,1066,1.279,1074,0.877,1084,1.165,1085,2.782,1086,0.588,1088,0.877,1097,0.772,1098,0.72,1101,0.838,1109,2.009,1115,3.864,1130,2.104,1154,0.979,1155,2.245,1157,2.025,1158,0.877,1159,4.707,1161,0.838,1174,3.404,1182,0.923,1227,1.141,1230,0.745,1240,0.745,1241,1.048,1243,3.074,1263,4.922,1265,0.803,1299,1.559,1300,0.803,1322,0.923,1326,1.427,1327,0.838,1329,2.683,1333,1.641,1366,0.979,1383,0.979,1392,1.238,1399,0.745,1402,0.877,1414,0.803,1420,0.979,1423,2.104,1436,2.789,1438,0.923,1445,1.862,1455,0.923,1465,2.245,1509,2.027,1649,0.877,1694,4.147,1695,2.848,1721,0.656,1743,0.877,1750,0.877,1782,0.923,1840,0.675,2006,0.923,2007,2.009,2008,1.926,2074,2.009,2110,2.434,2164,2.027,2165,3.258,2168,3.503,2169,1.048,2170,0.923,2180,5.83,2186,2.736,2197,2.848,2252,2.104,2294,0.923,2295,0.877,2296,1.048,2324,1.739,2410,1.559,2411,1.862,2416,2.214,2418,2.513,2423,0.877,2431,1.048,2434,2.736,2439,1.048,2440,1.141,2445,1.141,2450,1.048,2452,2.736,2471,1.048,2478,1.141,2482,3.404,2521,2.736,2525,1.048,2550,1.048,2555,1.862,2566,1.141,2586,0.803,2587,2.434,2594,2.683,2595,1.048,2596,1.559,2598,1.141,2605,2.513,2628,2.027,2632,0.923,2645,1.141,2651,0.923,2652,3.074,2672,1.048,2673,1.862,2675,1.141,2677,1.141,2689,1.141,2708,1.141,2744,0.877,2752,1.048,2756,1.862,2804,2.027,2821,6.829,2827,1.862,2849,2.214,2871,1.141,2874,2.683,2876,5.703,2895,1.141,2902,1.739,2933,2.027,2955,1.559,2977,1.739,2981,0.979,3001,1.048,3006,0.979,3008,1.048,3022,3.074,3035,2.844,3039,0.923,3045,3.316,3051,3.234,3052,0.979,3056,1.141,3071,4.773,3074,1.141,3075,1.862,3078,1.048,3080,1.141,3095,1.862,3100,2.513,3126,2.347,3127,0.923,3128,1.048,3143,1.559,3161,1.048,3190,1.048,3196,0.923,3203,3.798,3213,2.027,3243,2.736,3250,0.923,3260,2.027,3299,1.048,3304,0.979,3315,1.048,3340,2.844,3342,1.048,3351,1.048,3399,0.979,3433,1.141,3439,1.141,3470,2.104,3471,3.798,3488,1.739,3502,1.739,3532,1.048,3564,1.048,3567,1.048,3571,3.316,3572,0.979,3577,2.347,3580,1.048,3593,1.141,3598,1.862,3628,1.141,3639,3.908,3652,1.141,3669,0.877,3678,1.141,3687,1.739,3708,2.027,3908,1.862,3935,2.347,3937,1.641,3938,1.559,3943,5.265,3944,2.789,3951,0.979,3952,2.027,3956,2.683,3958,0.877,3964,1.862,3965,2.844,3972,6.505,3990,0.923,3995,0.979,3999,1.739,4011,1.862,4012,0.979,4022,2.027,4024,1.048,4027,1.141,4032,1.141,4035,1.141,4038,1.141,4048,0.979,4050,1.141,4061,1.141,4073,1.862,4074,3.608,4077,3.864,4080,2.027,4081,1.739,4103,1.141,4108,1.141,4109,4.596,4122,2.844,4129,0.877,4132,1.141,4149,1.048,4151,2.736,4155,1.141,4157,1.141,4163,1.141,4165,2.104,4172,1.141,4179,5.438,4185,1.048,4187,1.048,4188,3.908,4190,1.862,4192,1.048,4194,1.141,4214,0.923,4221,2.844,4225,1.141,4249,0.923,4250,1.141,4267,1.141,4277,1.048,4281,0.923,4295,1.141,4298,1.141,4304,1.141,4308,2.027,4319,0.923,4321,1.141,4328,2.214,4340,1.141,4353,2.027,4354,3.798,4374,1.048,4383,3.316,4384,1.141,4386,0.923,4388,1.141,4396,1.048,4415,1.141,4419,1.141,4421,1.141,4425,1.048,4464,4.206,4494,1.141,4511,1.141,4520,4.185,4542,4.934,4557,1.048,4570,1.141,4571,1.141,4572,4.12,4581,1.048,4620,1.141,4635,1.048,4644,1.048,4647,1.862,4650,1.141,4651,3.608,4656,1.141,4666,0.923,4696,2.027,4712,1.141,4842,1.141,4845,1.048,4914,1.282,4915,1.282,4916,5.566,4917,5.758,4918,2.278,4919,3.074,4920,2.736,4921,4.464,4922,2.278,4923,2.736,4924,5.119,4925,1.282,4926,1.282,4927,2.844,4928,3.316,4929,1.282,4930,1.282,4931,1.282,4932,1.282,4933,1.282,4934,2.278,4935,2.278,4936,1.282,4937,1.282,4938,4.268,4939,1.282,4940,1.282,4941,3.074,4942,2.278,4943,1.282,4944,1.282,4945,1.282,4946,1.282,4947,1.282,4948,1.282,4949,1.282,4950,1.141,4951,2.278,4952,4.726,4953,1.282,4954,1.282,4955,2.278,4956,2.278,4957,3.725,4958,3.074,4959,3.725,4960,1.282,4961,3.316,4962,3.316,4963,1.282,4964,1.282,4965,1.282,4966,1.282,4967,1.282,4968,1.282,4969,2.736,4970,1.282,4971,1.282,4972,1.282,4973,7.246,4974,1.282,4975,7.045,4976,1.282,4977,2.027,4978,1.282,4979,2.278,4980,1.048,4981,4.147,4982,5.758,4983,1.282,4984,2.736,4985,2.027,4986,2.278,4987,1.282,4988,1.282,4989,1.282,4990,1.282,4991,1.282,4992,3.046,4993,2.278,4994,1.282,4995,1.282,4996,1.282,4997,1.282,4998,1.141,4999,1.282,5000,2.513,5001,1.282,5002,1.282,5003,1.141,5004,1.282,5005,1.282,5006,1.282,5007,1.141,5008,1.282,5009,3.074,5010,1.282,5011,1.282,5012,1.282,5013,2.278,5014,1.282,5015,2.278,5016,3.074,5017,1.282,5018,1.282,5019,1.282,5020,2.027,5021,2.278,5022,3.074,5023,1.282,5024,1.282,5025,1.282,5026,1.282,5027,1.282,5028,1.282,5029,1.141,5030,1.282,5031,2.278,5032,1.282,5033,1.282,5034,5.758,5035,1.282,5036,1.141,5037,1.048,5038,1.282,5039,1.282,5040,1.282,5041,1.282,5042,1.282,5043,1.282,5044,1.282,5045,1.282,5046,2.278,5047,3.074,5048,1.282,5049,1.282,5050,1.282,5051,1.282,5052,2.278,5053,1.282,5054,1.282,5055,1.282,5056,1.282,5057,1.282,5058,1.282,5059,2.278,5060,1.282,5061,1.141,5062,1.282,5063,2.278,5064,1.282,5065,1.282,5066,1.282,5067,1.282,5068,1.141,5069,1.282,5070,1.282,5071,2.278,5072,1.282,5073,1.282,5074,1.282,5075,1.282,5076,1.282,5077,1.141,5078,1.282,5079,1.282,5080,1.282,5081,1.141,5082,3.074,5083,1.282,5084,1.282,5085,1.282,5086,1.282,5087,1.282,5088,2.278,5089,1.282,5090,1.141,5091,1.282,5092,3.074,5093,1.282,5094,1.282,5095,2.278,5096,1.282,5097,2.278,5098,1.282,5099,1.282,5100,1.282,5101,1.282,5102,1.282,5103,1.282,5104,1.282,5105,2.278,5106,1.282,5107,1.282,5108,1.282,5109,1.282,5110,1.282,5111,1.282,5112,1.282,5113,1.282,5114,7.841,5115,1.282,5116,1.282,5117,4.268,5118,1.141,5119,1.282,5120,1.282,5121,2.278,5122,1.282,5123,1.282,5124,1.282,5125,1.282,5126,1.282,5127,1.282,5128,1.282,5129,1.141,5130,1.282,5131,1.282,5132,1.141,5133,1.282,5134,1.282,5135,1.282,5136,1.282,5137,2.278,5138,1.282,5139,1.282,5140,2.347,5141,1.282,5142,1.282,5143,1.048,5144,1.282,5145,1.282,5146,4.268,5147,1.282,5148,1.282,5149,1.282,5150,1.282,5151,1.282,5152,1.282,5153,1.282,5154,1.282,5155,1.282,5156,1.282,5157,1.282,5158,1.282,5159,2.278,5160,1.282,5161,1.282,5162,2.278,5163,1.282,5164,1.282,5165,1.282,5166,2.278,5167,1.282,5168,1.282,5169,1.282,5170,1.282,5171,1.282,5172,1.141,5173,2.278,5174,1.282,5175,2.278,5176,1.282,5177,1.282,5178,1.282,5179,1.141,5180,2.278]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[88,1.292,820,1.426,1840,1.595,3943,1.978,4981,2.18]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.177,2,0.476,3,0.067,4,0.056,5,0.152,10,0.659,12,1.589,16,0.493,18,0.557,20,1.161,21,0.711,24,0.007,25,0.62,26,0.185,29,1.647,30,0.804,32,0.598,34,0.723,51,0.191,52,1.158,61,0.178,64,3.508,65,1.89,68,2.381,69,3.915,74,2.381,75,1.02,80,0.004,81,0.003,82,0.002,88,1.622,115,3.163,116,2.533,126,1.311,127,3.471,128,1.23,136,1.091,143,0.852,146,0.308,148,1.167,170,2.429,172,3.116,173,1.072,184,1.745,185,1.89,196,1.598,201,3.289,202,2.381,203,3.621,205,3.445,208,3.12,210,0.452,213,1.104,226,1.356,228,3.011,230,1.084,231,1.598,242,0.996,245,1.189,271,2.459,273,3.553,275,3.219,282,1.782,283,1.909,292,1.526,326,1.782,335,2.29,336,1.682,337,3.219,339,2.793,372,3.141,382,2.29,423,2.601,445,1.311,446,2.68,457,3.001,476,1.463,485,2.738,537,0.996,546,1.76,548,1.838,552,2.004,574,2.134,606,1.129,608,1.311,626,1.194,658,1.072,671,1.782,681,2.134,713,1.598,716,3.334,718,1.356,728,3.289,737,1.407,746,2.897,749,3.217,751,3.032,757,2.066,759,3.87,770,1.194,772,1.598,781,3.67,804,1.407,806,3.214,819,3.675,820,2.264,821,1.407,823,1.782,825,1.909,830,2.078,832,4.096,853,4.079,876,1.526,877,3.544,878,3.671,881,3.289,882,1.598,883,1.598,884,1.598,888,1.682,889,1.23,891,1.598,895,1.463,912,1.598,918,1.407,930,3.012,939,1.407,955,2.078,967,1.598,970,1.526,1002,3.012,1004,3.219,1039,3.93,1041,3.107,1050,3.694,1051,1.598,1057,1.682,1060,1.682,1063,1.407,1065,3.462,1066,2.134,1081,1.89,1154,1.782,1155,2.29,1162,1.782,1174,1.682,1182,1.682,1207,1.526,1230,2.208,1240,2.793,1241,1.909,1242,2.902,1265,2.381,1275,2.699,1333,2.738,1335,1.463,1392,1.269,1399,3.799,1401,1.526,1402,3.289,1453,1.682,1465,2.29,1493,1.782,1495,1.526,1496,2.208,1503,1.526,1511,4.173,1516,1.782,1519,1.598,1532,2.078,1533,2.078,1534,1.909,1535,2.078,1536,2.078,1537,1.909,1545,1.909,1644,1.526,1694,2.738,1695,1.407,1712,2.078,1721,1.944,1743,1.598,1774,1.526,1867,1.909,2031,1.598,2110,1.526,2158,1.909,2180,4.695,2190,1.782,2197,1.407,2371,1.526,2385,4.986,2418,1.909,2423,2.601,2431,3.93,2473,2.078,2483,1.598,2530,2.738,2555,4.53,2578,3.67,2586,2.381,2587,1.526,2594,1.682,2613,1.782,2651,1.682,2652,3.462,2702,2.078,2732,2.078,2741,1.909,2820,2.078,2849,2.738,2874,2.738,2876,1.682,2903,1.782,2904,2.902,3006,1.782,3035,1.782,3039,1.682,3041,1.909,3046,1.909,3047,2.601,3051,1.598,3052,1.782,3071,1.598,3095,3.93,3143,2.601,3155,2.078,3157,2.078,3191,4.173,3232,2.078,3238,1.909,3240,2.078,3250,1.682,3253,2.078,3270,2.078,3271,2.078,3346,1.782,3455,1.782,3488,1.782,3508,2.902,3543,2.078,3567,1.909,3669,1.598,3932,1.909,3938,5.084,3940,1.909,3943,3.141,3944,3.985,3951,1.782,3956,1.682,3958,1.598,3968,1.909,3971,2.078,3972,3.67,3982,2.078,3990,1.682,3991,2.078,3995,4.23,3998,1.909,3999,4.23,4002,2.078,4004,1.526,4034,2.078,4049,1.909,4051,2.078,4081,1.782,4109,1.782,4124,2.078,4129,1.598,4149,1.909,4158,1.909,4159,2.078,4165,1.598,4185,1.909,4188,1.782,4192,1.909,4214,1.682,4221,1.782,4249,2.738,4260,2.078,4281,1.682,4319,1.682,4374,1.909,4386,1.682,4497,4.278,4542,2.902,4572,1.598,4589,2.078,4635,1.909,4651,4.23,4652,3.93,4658,5.352,4666,2.738,4668,3.93,4709,3.93,4739,3.289,4768,2.078,4781,2.078,4787,2.078,4845,1.909,4849,2.078,4916,2.078,4927,1.782,4962,2.078,4975,6.873,4977,2.078,4980,3.107,4981,4.393,4998,2.078,5000,1.909,5007,2.078,5020,2.078,5029,3.383,5036,4.278,5068,3.383,5090,3.383,5129,3.383,5132,2.078,5140,1.782,5181,1.909,5182,2.078,5183,2.335,5184,4.807,5185,2.335,5186,6.135,5187,3.107,5188,2.335,5189,3.801,5190,5.541,5191,2.335,5192,2.335,5193,2.335,5194,2.335,5195,2.335,5196,2.335,5197,2.335,5198,3.801,5199,2.335,5200,2.335,5201,2.335,5202,2.078,5203,3.801,5204,4.807,5205,2.335,5206,2.335,5207,2.335,5208,2.335,5209,2.078,5210,2.335,5211,2.335,5212,2.078,5213,3.801,5214,2.335,5215,1.909,5216,2.335,5217,2.335,5218,2.335,5219,2.335,5220,2.335,5221,2.335,5222,2.335,5223,2.335,5224,3.801,5225,3.801,5226,2.335,5227,2.078,5228,3.383,5229,2.335,5230,2.335,5231,2.335,5232,2.335,5233,2.335,5234,2.335,5235,2.335,5236,2.335,5237,2.335,5238,2.335,5239,2.335,5240,2.335,5241,2.335,5242,2.335,5243,2.335,5244,2.335,5245,2.335,5246,2.335,5247,2.335,5248,2.335,5249,2.335,5250,1.782,5251,2.335,5252,2.335,5253,2.335,5254,2.335,5255,2.335,5256,2.335,5257,2.335,5258,2.335,5259,2.335,5260,2.335,5261,2.335,5262,2.335,5263,2.078,5264,2.335,5265,2.335,5266,2.335,5267,2.078,5268,2.335,5269,2.335,5270,2.335,5271,2.335,5272,2.335,5273,2.335,5274,2.335,5275,2.335,5276,2.335,5277,2.078,5278,2.335]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[820,1.426,1840,1.595,4658,2.18,4927,2.311,5279,2.694]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,2.27,21,0.37,24,0.007,29,1.01,34,1.356,39,0.475,52,0.92,63,1.397,64,3.518,65,3.22,69,4.177,74,2.343,75,3.464,80,0.003,81,0.004,82,0.003,88,2.336,89,3.181,114,3.057,117,1.674,127,2.343,136,1.078,143,0.97,146,0.494,182,1.761,213,1.086,220,1.649,230,1.066,245,2.373,248,4.476,255,2.099,273,2.975,276,2.975,292,2.443,326,4.18,337,4.759,338,4.432,339,2.173,340,2.253,372,2.443,375,4.18,378,2.343,379,2.855,380,2.443,396,2.392,416,1.859,446,2.648,450,1.761,453,2.253,457,2.973,476,2.343,485,2.693,537,1.596,549,2.032,552,2.7,561,3.746,658,2.513,688,2.443,717,4.945,727,2.559,737,4.296,759,2.099,782,2.443,789,1.97,804,2.253,806,2.885,819,5.061,853,1.913,878,4.81,883,2.559,884,2.559,912,2.559,969,2.693,970,2.443,982,2.343,997,2.693,1004,3.181,1050,3.773,1057,2.693,1060,2.693,1140,3.746,1153,2.559,1157,2.032,1173,2.559,1220,2.855,1240,3.181,1267,2.855,1327,4.232,1428,2.032,1432,2.559,1452,2.559,1465,2.253,1493,2.855,1649,2.559,1750,2.559,1782,2.693,1793,3.328,1826,3.328,1888,3.057,2031,2.559,2074,2.443,2110,2.443,2169,3.057,2180,2.443,2185,4.873,2257,2.855,2410,2.559,2481,2.855,2482,2.693,2587,3.578,2594,2.693,2638,2.443,2682,5.765,2704,3.328,2870,2.855,2874,4.665,2902,2.855,2904,2.855,3014,3.057,3022,2.693,3047,2.559,3050,4.18,3196,2.693,3250,5.465,3340,2.855,3351,3.057,3470,3.746,3508,4.18,3532,3.057,3572,2.855,3669,3.746,3687,2.855,3799,3.057,3838,2.855,3926,2.693,3938,2.559,3939,2.855,3943,4.659,3944,3.578,3956,2.693,3958,2.559,3965,2.855,4045,2.855,4049,4.476,4074,6.053,4081,2.855,4122,4.18,4129,2.559,4165,3.746,4188,2.855,4214,3.943,4281,2.693,4319,3.943,4328,3.943,4386,2.693,4520,3.057,4542,2.855,4561,3.328,4572,2.559,4607,3.057,4619,2.855,4631,4.873,4632,2.855,4647,3.057,4658,6.597,4666,3.943,4700,3.057,4739,2.559,4923,3.328,4927,4.18,4928,3.328,4975,5.793,5061,3.328,5081,3.328,5118,3.328,5143,3.057,5181,3.057,5186,4.873,5202,4.873,5250,2.855,5263,3.328,5267,3.328,5279,3.328,5280,3.739,5281,3.739,5282,3.739,5283,3.739,5284,3.739,5285,3.739,5286,3.739,5287,3.739,5288,5.475,5289,3.739,5290,3.739,5291,3.739,5292,3.739,5293,3.739,5294,3.739,5295,3.739,5296,3.739,5297,3.739,5298,3.739,5299,3.739,5300,3.739,5301,3.739,5302,3.739,5303,3.328,5304,3.739,5305,3.739,5306,3.328,5307,3.739,5308,3.328,5309,3.739,5310,3.739,5311,3.739,5312,3.739,5313,3.739,5314,3.739,5315,3.739,5316,3.739,5317,4.873,5318,3.739,5319,3.739,5320,3.739,5321,3.739,5322,3.739,5323,3.739,5324,3.739,5325,3.739,5326,3.739,5327,3.739,5328,3.739,5329,3.739,5330,3.739,5331,3.739,5332,3.739,5333,3.739,5334,3.739,5335,3.739,5336,3.739,5337,3.739,5338,3.739,5339,3.739,5340,3.739,5341,3.739,5342,3.739,5343,3.739,5344,3.739,5345,3.739,5346,3.739,5347,3.739,5348,3.057,5349,3.739,5350,3.328,5351,3.739,5352,3.739,5353,3.739,5354,3.739,5355,3.057]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[374,1.978,820,1.426,1840,1.595,4572,2.071,4921,2.474]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.142,18,1.08,24,0.007,25,0.391,26,0.378,32,2.09,39,1.138,51,0.362,61,0.123,64,3.099,75,1.978,80,0.003,81,0.004,82,0.004,88,3.072,89,2.63,90,2.541,91,1.932,96,4.293,99,2.741,114,3.701,115,3.035,116,3.794,117,3.656,125,2.958,126,2.541,128,4.302,146,0.828,170,2.286,185,3.119,210,0.876,213,1.314,226,2.63,239,4.511,268,3.701,271,2.315,273,3.913,275,2.63,335,2.728,337,4.744,338,3.097,339,3.645,340,2.728,369,3.931,372,2.958,374,4.1,378,2.836,380,5.08,386,3.456,394,1.765,455,2.958,457,2.88,484,4.1,592,2.836,723,3.78,770,2.315,783,4.957,789,4.724,803,4.029,804,3.78,805,2.728,806,3.306,807,3.26,815,3.701,819,2.728,820,2.955,821,4.339,853,3.209,879,2.315,881,3.097,912,3.097,939,2.728,970,4.705,971,5.77,1001,4.1,1005,3.701,1050,2.25,1066,3.522,1109,4.1,1114,4.029,1115,3.701,1117,4.029,1121,4.029,1123,4.029,1124,4.029,1155,2.728,1157,3.41,1174,3.26,1230,2.63,1242,3.456,1323,4.029,1326,2.836,1333,4.519,1335,3.931,1392,2.46,1465,2.728,1544,4.79,1640,4.029,1801,4.029,2254,4.029,2402,3.701,2435,3.456,2586,2.836,2596,3.097,3006,3.456,3039,3.26,3256,4.029,3304,3.456,3443,5.129,3937,3.26,3968,3.701,4004,2.958,4170,4.029,4294,4.029,4572,3.097,4885,4.029,4921,5.129,5037,3.701,5077,4.029,5187,3.701,5212,4.029,5215,3.701,5250,3.456,5277,4.029,5355,3.701,5356,4.527,5357,7.774,5358,4.527,5359,4.527,5360,7.774,5361,4.029,5362,4.527,5363,4.527,5364,7.2,5365,4.527,5366,4.527,5367,4.527,5368,6.274,5369,4.527,5370,4.527,5371,4.527,5372,4.527,5373,4.029,5374,4.527,5375,6.274,5376,4.527,5377,4.527,5378,4.527,5379,4.527,5380,4.527,5381,4.527,5382,4.527,5383,4.527,5384,4.527,5385,4.527,5386,4.527,5387,4.527]],["title/additional-documentation/nestjs-application/testing.html",[820,1.891,1161,2.623,1840,2.115]],["body/additional-documentation/nestjs-application/testing.html",[0,0.067,1,0.961,2,0.349,12,1.002,13,1.399,21,0.451,23,0.258,24,0.007,25,0.332,26,0.221,32,1.166,33,1.373,34,0.557,51,0.147,52,0.287,55,0.416,64,3.228,69,2.026,74,1.837,75,2.239,80,0.004,81,0.002,82,0.002,88,2.549,107,0.331,115,0.828,117,3.376,125,2.513,126,2.877,128,0.902,136,1.456,143,0.908,170,1.97,172,1.168,173,1.765,182,0.806,184,1.765,185,1.912,202,1.837,213,2.296,214,1.523,215,1.523,221,0.806,224,0.682,226,3.965,228,0.93,229,0.73,230,1.593,231,2.006,235,1.523,245,2.504,255,2.159,271,4.608,273,1.593,275,0.994,276,2.09,280,2.006,282,1.306,301,1.703,303,2.159,336,1.233,337,2.234,339,1.703,369,1.072,376,1.399,378,1.837,391,0.556,396,0.748,422,0.93,424,0.806,445,0.961,446,2.89,448,0.994,449,1.306,456,1.171,457,2.352,484,1.118,523,2.409,544,0.961,546,2.045,579,1.118,592,1.072,604,0.786,605,0.806,608,2.159,623,1.281,626,0.875,688,4.118,703,1.233,716,0.828,748,1.072,749,2.04,751,0.851,757,4.895,759,2.877,761,4.973,770,0.875,773,4.189,774,2.7,775,3.281,776,3.912,781,1.306,782,2.977,786,1.306,789,1.545,804,2.317,806,0.902,817,1.916,818,2.609,819,3.6,821,1.031,853,2.33,859,1.233,876,1.118,878,0.961,879,1.967,891,2.006,910,1.837,912,4.312,918,1.766,924,1.171,939,4.241,940,1.233,944,2.238,965,1.306,971,1.118,982,4.808,999,1.233,1001,3.652,1002,2.854,1004,3.247,1019,2.238,1040,1.031,1042,1.399,1047,1.171,1050,3.499,1060,1.233,1064,1.523,1083,1.072,1084,0.875,1097,1.031,1098,1.646,1108,1.399,1109,1.118,1152,1.399,1155,1.766,1157,2.476,1158,2.006,1161,5.399,1220,1.306,1230,0.994,1267,1.306,1275,4.233,1300,1.072,1303,2.397,1324,1.306,1325,1.523,1326,1.072,1327,1.118,1328,1.523,1329,3.281,1333,1.233,1335,2.409,1392,0.93,1403,1.399,1405,2.238,1406,2.006,1412,1.523,1414,1.072,1421,1.233,1423,1.171,1432,3.824,1435,2.238,1438,1.233,1439,1.523,1453,1.233,1454,1.399,1463,3.21,1465,1.031,1488,1.306,1489,2.238,1493,2.238,1495,1.118,1500,1.523,1505,1.399,1511,1.171,1520,1.118,1522,1.072,1557,1.523,1634,2.513,1644,3.348,1649,3.506,1695,1.031,1703,1.523,1721,0.875,1743,3.118,1750,2.631,1774,1.118,1790,1.399,1791,1.399,1855,1.171,1999,2.111,2037,2.513,2110,1.118,2117,1.118,2159,1.399,2165,1.306,2170,4.741,2180,4.301,2197,1.766,2252,2.631,2257,2.936,2294,4.025,2295,1.171,2296,1.399,2385,1.399,2407,1.171,2416,1.233,2423,2.006,2462,1.523,2477,2.238,2481,1.306,2482,1.233,2483,2.006,2515,2.006,2530,4.025,2546,1.523,2562,1.523,2579,2.609,2580,3.144,2586,4.724,2587,3.348,2591,3.478,2594,1.233,2596,2.006,2613,1.306,2638,1.118,2649,1.399,2652,3.281,2699,2.609,2716,1.399,2717,1.399,2734,4.56,2744,1.171,2752,1.399,2755,2.397,2774,5.318,2799,1.523,2821,1.306,2837,1.523,2843,1.399,2854,1.399,2870,2.936,2876,1.233,2882,1.306,2904,1.306,2942,1.523,2952,1.523,2971,1.523,3022,2.111,3037,1.523,3039,4.025,3041,1.399,3046,1.399,3047,2.006,3048,1.399,3051,3.824,3071,2.006,3084,1.523,3100,1.399,3127,2.111,3128,1.399,3172,3.144,3189,1.399,3193,2.397,3196,1.233,3198,1.523,3206,1.399,3250,2.111,3258,1.523,3266,3.144,3342,1.399,3380,3.423,3399,1.306,3432,1.399,3443,1.399,3456,2.238,3462,1.399,3470,3.506,3488,1.306,3495,5.318,3502,2.238,3577,1.306,3603,1.523,3607,1.399,3633,1.523,3669,1.171,3684,1.399,3709,1.399,3799,1.399,3828,2.238,3866,1.523,3889,1.399,3926,4.303,3938,3.118,3939,3.912,3944,1.118,3947,1.523,3955,1.523,3958,1.171,3961,1.523,3965,1.306,3972,1.306,3990,2.111,3998,1.399,4012,1.306,4024,1.399,4033,1.523,4045,2.238,4048,1.306,4052,1.523,4073,1.399,4074,2.936,4077,1.399,4109,1.306,4119,1.523,4122,2.238,4128,1.523,4129,1.171,4158,1.399,4165,3.118,4166,1.523,4179,2.397,4187,1.399,4190,1.399,4209,1.523,4214,1.233,4218,1.523,4221,1.306,4249,1.233,4261,1.523,4274,1.523,4277,1.399,4281,1.233,4286,1.523,4328,2.111,4339,1.399,4345,1.523,4355,6.074,4396,1.399,4517,1.523,4581,1.399,4586,1.399,4587,1.523,4605,4.055,4619,1.306,4651,2.936,4655,1.523,4658,1.233,4666,3.281,4683,1.523,4700,1.399,4709,1.399,4734,1.523,4739,1.171,4866,1.523,4877,1.523,4879,1.523,4896,1.523,4920,1.523,4950,1.523,4961,1.523,4969,2.609,4975,5.211,4980,1.399,4981,3.69,4984,1.523,4985,1.523,4992,1.399,5000,1.399,5003,4.055,5037,1.399,5140,1.306,5143,3.144,5179,2.609,5181,3.725,5182,1.523,5187,1.399,5209,1.523,5215,1.399,5227,1.523,5228,1.523,5250,3.912,5303,1.523,5306,2.609,5308,1.523,5317,1.523,5350,1.523,5355,2.397,5361,1.523,5373,1.523,5388,2.932,5389,1.711,5390,1.711,5391,1.711,5392,1.711,5393,1.711,5394,1.711,5395,1.711,5396,1.711,5397,1.711,5398,1.711,5399,1.711,5400,1.711,5401,1.711,5402,2.932,5403,1.711,5404,1.711,5405,1.711,5406,1.711,5407,1.711,5408,1.711,5409,1.711,5410,1.711,5411,1.711,5412,1.711,5413,1.711,5414,1.711,5415,1.711,5416,1.711,5417,1.711,5418,1.711,5419,1.711,5420,1.711,5421,1.711,5422,1.711,5423,1.711,5424,1.711,5425,1.711,5426,1.711,5427,1.711,5428,1.711,5429,1.711,5430,1.711,5431,1.523,5432,3.846,5433,1.711,5434,3.846,5435,2.932,5436,5.124,5437,2.932,5438,3.846,5439,4.556,5440,1.711,5441,1.711,5442,2.932,5443,1.711,5444,1.711,5445,1.711,5446,1.711,5447,1.711,5448,1.711,5449,1.711,5450,1.711,5451,5.588,5452,1.711,5453,1.711,5454,1.711,5455,1.711,5456,1.711,5457,1.711,5458,1.711,5459,1.711,5460,1.711,5461,1.711,5462,1.711,5463,1.711,5464,2.932,5465,1.711,5466,2.932,5467,1.711,5468,1.711,5469,1.711,5470,2.932,5471,1.711,5472,1.711,5473,3.846,5474,2.932,5475,2.932,5476,1.711,5477,1.711,5478,4.556,5479,1.711,5480,1.711,5481,1.711,5482,1.711,5483,1.711,5484,1.711,5485,1.711,5486,2.932,5487,1.711,5488,2.932,5489,1.711,5490,2.932,5491,1.711,5492,1.711,5493,1.711,5494,1.711,5495,1.711,5496,2.932,5497,2.932,5498,1.711,5499,1.711,5500,2.932,5501,1.711,5502,1.711,5503,2.932,5504,1.711,5505,1.711,5506,1.711,5507,1.711,5508,1.711,5509,1.711,5510,2.932,5511,4.556,5512,1.711,5513,1.711,5514,1.711,5515,1.711,5516,1.711,5517,1.711,5518,2.932,5519,1.711,5520,1.711,5521,1.711,5522,1.711,5523,1.711,5524,1.711,5525,1.711,5526,1.711,5527,1.711,5528,1.711,5529,1.711,5530,2.932,5531,1.711,5532,1.711,5533,1.711,5534,1.711,5535,1.711,5536,1.711,5537,1.711,5538,1.711,5539,1.711,5540,1.711,5541,1.711,5542,1.711,5543,1.711,5544,1.711,5545,1.711,5546,1.711,5547,1.711,5548,1.711,5549,1.711,5550,1.711,5551,1.711,5552,1.711,5553,1.711,5554,1.711,5555,1.711,5556,1.711,5557,1.711,5558,1.711,5559,1.711,5560,1.711,5561,1.711,5562,1.711,5563,1.711]],["title/additional-documentation/nestjs-application/decisions.html",[820,1.891,1840,2.115,5348,3.282]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.559,16,1.29,24,0.006,29,1.649,52,1.026,54,3.218,55,1.483,64,3.326,69,4.028,80,0.004,81,0.005,82,0.004,115,2.954,270,3.991,281,3.826,340,3.68,453,4.607,457,2.804,476,3.826,606,3.698,623,2.669,769,4.663,770,3.124,774,3.218,806,3.218,879,3.124,883,5.231,884,4.179,910,3.826,939,3.68,1044,3.826,1050,3.036,1175,5.453,1230,3.548,1334,5.436,1398,3.68,1414,5.229,1432,4.179,1453,4.399,1692,5.837,1695,3.68,1743,5.231,2197,4.607,2410,4.179,2586,3.826,2605,6.25,2672,4.993,2744,4.179,2827,4.993,2849,4.399,2929,5.436,2981,6.371,3004,4.993,3137,5.436,3191,4.179,3335,5.436,3526,5.436,3937,4.399,3943,3.991,4129,4.179,4557,4.993,4632,4.663,4981,4.399,4992,4.993,5140,4.663,5172,5.436,5348,6.25,5431,5.436,5564,6.107,5565,6.107,5566,6.107,5567,6.107,5568,6.107,5569,6.107,5570,6.107,5571,6.107,5572,6.107,5573,7.645,5574,6.107,5575,6.107,5576,6.107,5577,6.107,5578,6.107,5579,6.107,5580,6.107,5581,6.107,5582,6.107,5583,6.107,5584,6.107,5585,6.107,5586,6.107]],["title/additional-documentation/nestjs-application/vscode.html",[820,1.891,1840,2.115,3941,3.064]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.158,24,0.006,65,4.035,74,4.217,75,3.546,80,0.005,81,0.006,82,0.005,271,4.152,355,4.217,374,4.399,457,3.09,757,3.658,806,4.276,889,4.276,930,5.085,2168,4.606,2197,4.056,2289,5.991,2295,4.606,2324,5.139,2481,5.139,2515,5.554,2578,5.139,2586,4.217,2625,5.504,2637,4.848,2977,5.139,3047,4.606,3238,6.635,3941,6.196,3974,7.223,4004,4.399,4174,4.848,4283,5.991,4622,7.755,4649,5.991,4739,4.606,4774,5.504,4903,5.991,4905,5.991,5587,6.732,5588,6.732,5589,6.732,5590,6.732,5591,6.732,5592,6.732,5593,6.732,5594,6.732,5595,6.732]],["title/additional-documentation/nestjs-application/git.html",[820,1.891,1840,2.115,3942,3.282]],["body/additional-documentation/nestjs-application/git.html",[24,0.006,80,0.005,81,0.006,82,0.005,382,4.464,475,5.656,605,3.49,1155,4.464,1157,4.026,1392,4.026,1401,4.841,3608,5.656,3703,7.022,3942,7.416,3954,6.593,5596,7.408,5597,7.408,5598,7.408,5599,7.408]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":1428,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3856,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3890,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3901,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":3819,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":3810,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3818,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3880,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3913,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3905,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3873,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3865,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3904,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3858,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":3711,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3738,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3740,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3754,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3742,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3718,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3728,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3710,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3746,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3725,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3735,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":3737,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3739,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1463,"title":{},"body":{"classes/MongoSharedConnection.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3881,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3893,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3843,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3830,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3876,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":5486,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3840,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3920,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3891,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":3814,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":3782,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":5488,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":3811,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":3846,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":3783,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3822,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3713,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":3752,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":3717,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3715,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":3743,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3749,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3741,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":3753,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1838,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":3712,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2647,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["119",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":3883,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2781,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["1499",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2642,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":4837,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2632,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3841,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":3033,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2766,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":4237,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":2591,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":3844,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3857,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3877,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3900,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":3807,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3825,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":3809,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2542,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":4009,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2532,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22",{"_index":2617,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":3664,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":3375,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":2801,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3027,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3053,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3025,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3023,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3018,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3009,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3005,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2973,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":2926,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":2925,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":2923,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":2921,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":2918,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":2839,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4645,"title":{},"body":{"overview.html":{}}}],["2710",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2499,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["29",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":4685,"title":{},"body":{"todo.html":{}}}],["3",{"_index":2870,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3887,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3895,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5530,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3884,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":3875,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3918,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3896,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":3750,"title":{},"body":{"coverage.html":{}}}],["3/27",{"_index":3736,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":3734,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2796,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":4894,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":4887,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":4646,"title":{},"body":{"overview.html":{}}}],["33",{"_index":3714,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":3456,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":3816,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3909,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3836,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3853,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3785,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":3820,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":3777,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":3784,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":3837,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":3793,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":4830,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":3747,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":3768,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":3732,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":4696,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":5385,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1005,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":2906,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2716,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":3804,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3806,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3839,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3879,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":3859,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":3748,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3745,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3716,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":5376,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":2444,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["5416",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":4841,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":4836,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":3731,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":2717,"title":{},"body":{"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3824,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3795,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":2763,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3897,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3885,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3733,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":1919,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3180,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3132,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":3767,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":3230,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":4678,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4315,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4334,"title":{},"body":{"license.html":{}}}],["7",{"_index":2176,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":3826,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":3791,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":3788,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3835,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":3787,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":3786,"title":{},"body":{"dependencies.html":{}}}],["7.6.17",{"_index":3790,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":3227,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3135,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3181,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3158,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3049,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3113,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3195,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3099,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3221,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2989,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2982,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2975,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3061,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3114,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3024,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3916,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":3797,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":3848,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":4789,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2985,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":4868,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3019,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":2894,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2993,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":3744,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2968,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":2922,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":2924,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":2927,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":3751,"title":{},"body":{"coverage.html":{}}}],["9003",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":4861,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1843,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3981,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":732,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":955,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":979,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":993,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5183,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":980,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":995,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":4869,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":635,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["_timeout",{"_index":2297,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":2219,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["a.m",{"_index":4001,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":5427,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4374,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3999,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4259,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4613,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":335,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":5105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":486,"title":{},"body":{"classes/Course.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4451,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4450,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4665,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":3611,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":759,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3190,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3203,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1949,"title":{},"body":{"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4299,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4617,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4079,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4258,"title":{},"body":{"license.html":{}}}],["according",{"_index":2673,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1083,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":60,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["accumulator",{"_index":1978,"title":{},"body":{"classes/Scope.html":{}}}],["accumulator.push(queryelement",{"_index":1983,"title":{},"body":{"classes/Scope.html":{}}}],["achieve",{"_index":4620,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4200,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4499,"title":{},"body":{"license.html":{}}}],["act",{"_index":5426,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":916,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2625,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1229,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":4121,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4538,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5288,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4520,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4354,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4100,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1392,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":4810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1240,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["addgroupsthatmatchcourse",{"_index":524,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["addid",{"_index":1280,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["addid(entity",{"_index":1289,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["adding",{"_index":2566,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":820,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":3968,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":4854,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addqrquery",{"_index":640,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["addqrquery(arrayofobjects",{"_index":649,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["addquery",{"_index":641,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["addquery(query",{"_index":655,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["addqueryifvalueisdefined",{"_index":642,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["addqueryifvalueisdefined(testedvalue",{"_index":659,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["address",{"_index":4571,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4096,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3213,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2434,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":1250,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1257,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1233,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1235,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":5314,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2471,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":4235,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4380,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4606,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4381,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4007,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4480,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4197,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":5495,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":5497,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach",{"_index":5421,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":5419,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":3450,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4249,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4286,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4970,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":4639,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4555,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4593,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5285,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4508,"title":{},"body":{"license.html":{}}}],["aims",{"_index":4914,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":3796,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1189,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":4715,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":4487,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2481,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":2110,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2324,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":5417,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":355,"title":{},"body":{"classes/BusinessError.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4062,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4311,"title":{},"body":{"license.html":{}}}],["always",{"_index":4992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":2756,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqp",{"_index":3798,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":1374,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4885,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3912,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":4452,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":5441,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4055,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5192,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4962,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":5520,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ansible",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["answered",{"_index":2255,"title":{},"body":{"injectables/TaskUC.html":{}}}],["anti",{"_index":4223,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":4271,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4108,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5241,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":115,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":3948,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":3949,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":3953,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":114,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":4761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":740,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1701,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1725,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1723,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":741,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1718,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1715,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":4938,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1518,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1529,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2112,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2346,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":83,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1068,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":139,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":121,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":984,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1002,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":386,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":385,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":384,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":4713,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":147,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4113,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":4863,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":75,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"injectables/CourseUC.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":3937,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":5255,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4576,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1153,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":4762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4952,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3964,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4254,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4612,"title":{},"body":{"license.html":{}}}],["apps",{"_index":2476,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":4784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":4728,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":4754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":4718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course",{"_index":4747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.entity.ts",{"_index":4752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":4751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":4750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":4757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":4753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":4719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":4721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../find",{"_index":3925,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3928,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":4758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":4725,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":4746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":4756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":4727,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3924,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":4724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":4726,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.entity.ts",{"_index":4722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../scope.ts",{"_index":3929,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":4755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":4748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../status.type.ts",{"_index":4723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../string",{"_index":3930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":4745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":4749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.uc.ts",{"_index":4729,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../testhelper.ts",{"_index":3923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":4717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":4731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":4849,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":4897,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":4791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":4902,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":4800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":932,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":371,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":811,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":813,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2398,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":802,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":941,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1092,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":869,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":3721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1151,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1107,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1118,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1116,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1122,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1113,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1120,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1342,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1318,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1037,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2403,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":3726,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1167,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":3729,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1163,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1194,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1231,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1197,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":204,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":236,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":824,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":1385,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/types.ts",{"_index":4733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":887,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":875,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts",{"_index":392,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:101",{"_index":439,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:105",{"_index":434,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:112",{"_index":462,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:117",{"_index":469,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:122",{"_index":467,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:127",{"_index":460,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:136",{"_index":444,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:144",{"_index":471,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:150",{"_index":441,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:33",{"_index":425,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:36",{"_index":419,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:40",{"_index":427,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:48",{"_index":429,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:52",{"_index":432,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:56",{"_index":431,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:60",{"_index":418,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:64",{"_index":415,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:85",{"_index":440,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:89",{"_index":436,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:93",{"_index":442,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/course.entity.ts:97",{"_index":438,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/learnroom/entity/coursegroup.entity.ts",{"_index":692,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:12",{"_index":697,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:18",{"_index":695,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:28",{"_index":699,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:33",{"_index":698,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/modules/learnroom/learnroom.facade.ts",{"_index":1259,"title":{},"body":{"injectables/LearnroomFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/learnroom.facade.ts:13",{"_index":1262,"title":{},"body":{"injectables/LearnroomFacade.html":{}}}],["apps/server/src/modules/learnroom/learnroom.facade.ts:7",{"_index":1261,"title":{},"body":{"injectables/LearnroomFacade.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":1274,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/repo/course.repo.ts",{"_index":617,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/repo/course.repo.ts:11",{"_index":648,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/modules/learnroom/repo/course.repo.ts:23",{"_index":619,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/modules/learnroom/repo/course.repo.ts:26",{"_index":621,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/modules/learnroom/repo/coursegroup.repo.ts",{"_index":704,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/repo/coursegroup.repo.ts:11",{"_index":712,"title":{},"body":{"classes/CoursegroupScope.html":{}}}],["apps/server/src/modules/learnroom/repo/coursegroup.repo.ts:19",{"_index":706,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/modules/learnroom/repo/coursegroup.repo.ts:22",{"_index":707,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts",{"_index":673,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:10",{"_index":1070,"title":{},"body":{"interfaces/ICoursegroupRepo.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:14",{"_index":678,"title":{},"body":{"injectables/CourseUC.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:20",{"_index":680,"title":{},"body":{"injectables/CourseUC.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:6",{"_index":1069,"title":{},"body":{"interfaces/ICourseRepo.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts",{"_index":1278,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:14",{"_index":1288,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:16",{"_index":1287,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:18",{"_index":1286,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:26",{"_index":1290,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:32",{"_index":1293,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:38",{"_index":1296,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:42",{"_index":1298,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:46",{"_index":1297,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/learnroom/utils/testhelper.ts:50",{"_index":1295,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":149,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":1345,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":1349,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":1371,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":1376,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":1378,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":714,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1553,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1700,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1708,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":1727,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":1702,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1707,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":1717,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1719,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":1726,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":1724,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":1722,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":1713,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":1706,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":1730,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":1704,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":1728,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":1710,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1943,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2083,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2321,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2365,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1486,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":1494,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":1504,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":1508,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":1515,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":1499,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2279,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":540,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1482,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1473,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1475,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1476,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1478,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1479,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:50",{"_index":1480,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:54",{"_index":1481,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:57",{"_index":1477,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:60",{"_index":1474,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:63",{"_index":1483,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:65",{"_index":1472,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:75",{"_index":1484,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":1072,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1935,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":2277,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":2358,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1571,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:30",{"_index":1579,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:44",{"_index":1577,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:57",{"_index":1583,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":1581,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1936,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2078,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2360,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1635,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1734,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1650,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1674,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:21",{"_index":1656,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:34",{"_index":1664,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:41",{"_index":1658,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1757,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:110",{"_index":1787,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1764,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:134",{"_index":1768,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:145",{"_index":1779,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:165",{"_index":1785,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:183",{"_index":1778,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:193",{"_index":1781,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1766,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:55",{"_index":1770,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:86",{"_index":1776,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2195,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":2203,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":2200,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":2202,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2204,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2201,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2207,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2206,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":2205,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2096,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:23",{"_index":2098,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/domain/task",{"_index":2211,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":526,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":926,"title":{},"body":{"classes/FileTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":1315,"title":{},"body":{"classes/LessonTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/status.type.ts",{"_index":4741,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":2038,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:16",{"_index":2057,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:19",{"_index":2053,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:22",{"_index":2048,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:25",{"_index":2058,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":2046,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":2055,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:36",{"_index":2049,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:39",{"_index":2050,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:42",{"_index":2051,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":2045,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":2084,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:14",{"_index":2092,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:17",{"_index":2089,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:20",{"_index":2093,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:23",{"_index":2088,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:26",{"_index":2091,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:7",{"_index":2087,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":2378,"title":{},"body":{"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2120,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:7",{"_index":2123,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2063,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":2071,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:17",{"_index":2073,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:25",{"_index":2069,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:7",{"_index":2067,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2145,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":2156,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:31",{"_index":2154,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:73",{"_index":2151,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:8",{"_index":2149,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":3755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2140,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2232,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:19",{"_index":2249,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:22",{"_index":2238,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:34",{"_index":2244,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:50",{"_index":2242,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:64",{"_index":2240,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":1875,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":1879,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":1878,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":1876,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":1883,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":1881,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":1880,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":1882,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":1877,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":2340,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":2343,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:17",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:24",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:27",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:9",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":1126,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:20",{"_index":1904,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:24",{"_index":1905,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:34",{"_index":1901,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1139,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:18",{"_index":2332,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:21",{"_index":2333,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:24",{"_index":2334,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:30",{"_index":2337,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:36",{"_index":2330,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":1885,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":1887,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":1907,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:12",{"_index":1916,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:17",{"_index":1914,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:22",{"_index":1918,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:8",{"_index":1912,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2374,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:10",{"_index":2376,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:7",{"_index":2375,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":1924,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":1929,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":1927,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2379,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2384,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2382,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":2350,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":2353,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":2355,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2372,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":3760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1997,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1998,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2003,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/$1",{"_index":4799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":84,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":334,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":346,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":349,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":348,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":347,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":344,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":350,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":351,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":2394,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":2396,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":3762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":778,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":752,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2292,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2302,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2300,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2299,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2304,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2306,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1837,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1844,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1847,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1854,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1858,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1861,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1860,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1859,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1857,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1866,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":3763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":3765,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":285,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":287,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":286,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":288,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1095,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1082,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":4736,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":4740,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":4742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":313,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":309,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":311,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":315,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":322,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":318,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":320,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":304,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":302,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":307,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":3769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":1948,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:57",{"_index":1950,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:59",{"_index":1958,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:67",{"_index":1955,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:71",{"_index":1956,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:76",{"_index":1954,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:81",{"_index":1953,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:83",{"_index":1951,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:85",{"_index":1952,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":3950,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3167,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3943,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5253,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":4634,"title":{},"body":{"license.html":{}}}],["archives",{"_index":5302,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":5423,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":5316,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":3805,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":5471,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":950,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4946,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":4597,"title":{},"body":{"license.html":{}}}],["around",{"_index":4647,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4517,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4528,"title":{},"body":{"license.html":{}}}],["array",{"_index":1132,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/MongoSharedConnection.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(constraint",{"_index":142,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(input",{"_index":1971,"title":{},"body":{"classes/Scope.html":{}}}],["array.isarray(user.permissions",{"_index":851,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrayofobjects",{"_index":654,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["arrayofquerys",{"_index":1986,"title":{},"body":{"classes/Scope.html":{}}}],["arrays",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":4232,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1104,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["asking",{"_index":3294,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4052,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":5519,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4469,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":5227,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4180,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4589,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":4616,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4419,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":3258,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":4622,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":157,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":160,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":4429,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2995,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":4403,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1179,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1187,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":4663,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1164,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":209,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":825,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":833,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":841,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":843,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":837,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":835,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":839,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1171,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1192,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1191,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1524,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":1530,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1088,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2423,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1525,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authguard",{"_index":1165,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1166,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":171,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4402,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":456,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":207,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1639,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1788,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":196,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":202,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4396,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4494,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4532,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4408,"title":{},"body":{"license.html":{}}}],["auto",{"_index":4882,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":5388,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":2697,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":3455,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":5393,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":918,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":2579,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":4930,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":245,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":5442,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4030,"title":{},"body":{"license.html":{}}}],["aws",{"_index":3686,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3134,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1130,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/TaskSubmissionMetadataService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":4972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1648,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad",{"_index":472,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["bad_request",{"_index":5327,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1871,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1874,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":336,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":3915,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":152,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":880,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":260,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":543,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":542,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baserepo",{"_index":289,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":1669,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":1667,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":1668,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":1670,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":1673,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":1671,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":1672,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":1665,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":1666,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4190,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":2908,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":168,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":3812,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":4812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":4813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4064,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4075,"title":{},"body":{"license.html":{}}}],["before",{"_index":608,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":5485,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":5473,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":4864,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3982,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4210,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5527,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":376,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2296,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3189,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4526,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4218,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4058,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":4739,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":4619,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1265,"title":{},"body":{"injectables/LearnroomFacade.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2961,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":2652,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4288,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":2167,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["blackbox",{"_index":5397,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":5404,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":5301,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1516,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3907,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":458,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":3766,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3727,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstraps",{"_index":5472,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":3248,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":5465,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2432,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":2560,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":5296,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":4643,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":4641,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":283,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":5015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":967,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":2179,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4866,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":2677,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":4653,"title":{},"body":{"todo.html":{}}}],["business",{"_index":337,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":86,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":100,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":104,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":108,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":5375,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1736,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1738,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1737,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1740,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":1131,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":1908,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":3335,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":782,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1439,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":3470,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":787,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1000,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3022,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5226,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3047,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":5350,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":5380,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4265,"title":{},"body":{"license.html":{}}}],["case",{"_index":819,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/Scope.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4074,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":944,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":948,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2311,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2314,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4953,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4976,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":2841,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1330,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":167,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":4433,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1073,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":4393,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4443,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":2580,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":3815,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2416,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changecolor",{"_index":400,"title":{},"body":{"classes/Course.html":{}}}],["changecolor(color",{"_index":433,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["changed",{"_index":1322,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changedescription",{"_index":401,"title":{},"body":{"classes/Course.html":{}}}],["changedescription(description",{"_index":435,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["changelog",{"_index":2408,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changename",{"_index":402,"title":{},"body":{"classes/Course.html":{}}}],["changename(name",{"_index":437,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["changes",{"_index":2410,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2520,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":2645,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4371,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4042,"title":{},"body":{"license.html":{}}}],["chat",{"_index":2804,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":276,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1042,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3992,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3996,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":3399,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":5342,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":3957,"title":{},"body":{"index.html":{}}}],["children",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":3462,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4579,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3886,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4216,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4224,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4615,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4484,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4496,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classids",{"_index":483,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["classname",{"_index":871,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1156,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3250,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":3206,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":4322,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":5355,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":4898,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":2932,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":340,"title":{},"body":{"classes/BusinessError.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1404,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3997,"title":{},"body":{"index.html":{}}}],["close",{"_index":1435,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["close(force",{"_index":1446,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["closed",{"_index":5500,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":4611,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3037,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":3935,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":2585,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":3682,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2009,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3863,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3851,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":4676,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":197,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":198,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":200,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":199,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":365,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":366,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":872,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":874,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":873,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1271,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_exports",{"_index":1272,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1273,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1339,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1340,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1341,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1630,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1633,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1631,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1632,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":2000,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2001,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2135,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":2136,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":2137,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2368,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2369,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2370,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":3367,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":88,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":3380,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1053,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4942,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":4557,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":4783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["collections",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":393,"title":{},"body":{"classes/Course.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["columnnames",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":671,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":2108,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":4069,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4272,"title":{},"body":{"license.html":{}}}],["command",{"_index":5320,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":4143,"title":{},"body":{"license.html":{}}}],["comment",{"_index":2039,"title":{},"body":{"classes/Submission.html":{}}}],["commentschema",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":4357,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3161,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4509,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3994,"title":{},"body":{"index.html":{}}}],["common",{"_index":3838,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4185,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4026,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5229,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":964,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4280,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4287,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4541,"title":{},"body":{"license.html":{}}}],["compile",{"_index":776,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4169,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3204,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3991,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":5059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1333,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":4465,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4207,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4895,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":2821,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":3972,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":3821,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":2264,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":4116,"title":{},"body":{"license.html":{}}}],["concept",{"_index":2555,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5186,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4572,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5249,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":3823,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":5408,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4535,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2257,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1401,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":4769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3119,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2006,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2029,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2030,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2028,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":4825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":4904,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":4831,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":373,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5185,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":1445,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":3973,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1437,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connection.ts",{"_index":1443,"title":{},"body":{"classes/MongoSharedConnection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection.ts:13",{"_index":1449,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connection.ts:22",{"_index":1447,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connectionoptions",{"_index":4716,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":1455,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connections.length",{"_index":1464,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections.push(this",{"_index":1458,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections.splice(connections.indexof(this",{"_index":1462,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connector",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2708,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":4454,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4596,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2227,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{},"changelog.html":{}}}],["considered",{"_index":4421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":5347,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":2946,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3008,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":4842,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":4253,"title":{},"body":{"license.html":{}}}],["const",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4199,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":140,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":905,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":1373,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(courserepo",{"_index":675,"title":{},"body":{"injectables/CourseUC.html":{}}}],["constructor(courseuc",{"_index":1260,"title":{},"body":{"injectables/LearnroomFacade.html":{}}}],["constructor(data",{"_index":1856,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":300,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":831,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2400,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":2395,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":1763,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(private",{"_index":242,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/LearnroomFacade.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":413,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["constructor(protected",{"_index":323,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["constructor(readonly",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":921,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":1926,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(taskrepo",{"_index":2236,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":812,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":342,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":2381,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":2352,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":95,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":4545,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4340,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":2721,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":4542,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4935,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3160,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3987,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":1694,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":548,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":151,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":156,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":4506,"title":{},"body":{"license.html":{}}}],["context",{"_index":789,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3003,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":4365,"title":{},"body":{"license.html":{}}}],["contract",{"_index":4934,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":4418,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4551,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4033,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4493,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4495,"title":{},"body":{"license.html":{}}}],["control",{"_index":3580,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4498,"title":{},"body":{"license.html":{}}}],["controller",{"_index":749,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":1531,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":2113,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2286,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":2347,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5198,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dto",{"_index":1584,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":2386,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2080,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":1638,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2142,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":1641,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":751,"title":{},"body":{"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4136,"title":{},"body":{"license.html":{}}}],["convention",{"_index":5400,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":4980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":4123,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4530,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4372,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4131,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4417,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4025,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4019,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3055,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4086,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4021,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4010,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4093,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4213,"title":{},"body":{"license.html":{}}}],["core",{"_index":372,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2012,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":5381,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1640,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":5359,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":364,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":3039,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":4591,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3495,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4172,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2458,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":4309,"title":{},"body":{"license.html":{}}}],["count",{"_index":632,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":622,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1682,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":4485,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":4743,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3065,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4120,"title":{},"body":{"license.html":{}}}],["country",{"_index":4522,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4944,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":391,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.id",{"_index":1312,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["course.setgroupsthatmatchcourse(coursesgroups",{"_index":691,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["course_default_color",{"_index":665,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/TaskMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courseentities",{"_index":2023,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursefeatures",{"_index":481,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["coursegroup",{"_index":420,"title":{"classes/Coursegroup.html":{}},"body":{"classes/Course.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"classes/LearnroomTestHelper.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":479,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["coursegroupid",{"_index":2047,"title":{},"body":{"classes/Submission.html":{}}}],["coursegroupinfo",{"_index":525,"title":{"classes/CourseGroupInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegrouprepo",{"_index":676,"title":{"injectables/CoursegroupRepo.html":{}},"body":{"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["coursegroups",{"_index":478,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICoursegroupProperties.html":{},"injectables/TaskSubmissionMetadataService.html":{},"changelog.html":{}}}],["coursegroups.filter((group",{"_index":520,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["coursegroupscope",{"_index":708,"title":{"classes/CoursegroupScope.html":{}},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"coverage.html":{}}}],["coursegroupsofuser",{"_index":2076,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":532,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":539,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["coursemodel",{"_index":4819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":2198,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":544,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":609,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":616,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":488,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/LearnroomFacade.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courses.foreach((course",{"_index":690,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["courseschema",{"_index":3756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursescope",{"_index":627,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["coursesgroups",{"_index":686,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["coursesofuser",{"_index":2160,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["coursetaskinfo",{"_index":530,"title":{"classes/CourseTaskInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursetyps",{"_index":1292,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["courseuc",{"_index":672,"title":{"injectables/CourseUC.html":{}},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["court",{"_index":4550,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4610,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4512,"title":{},"body":{"license.html":{}}}],["cover",{"_index":5306,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2100,"title":{"coverage.html":{}},"body":{"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":4785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":4786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":4788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4105,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5525,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1004,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1532,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1492,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1765,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcourse",{"_index":1281,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcourse(type",{"_index":1291,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup",{"_index":1282,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup(course",{"_index":1294,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcurrenttestuser",{"_index":3761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1327,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["createerrorresponse",{"_index":945,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":952,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":3719,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":983,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":3720,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":991,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":972,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1007,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":990,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1011,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":986,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":583,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":1415,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":1434,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":713,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createorqueryfromlist",{"_index":636,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createorqueryfromlist(arrayofobjects",{"_index":1976,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["createparamdecorator((data",{"_index":4766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":1362,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":1368,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1251,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1256,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":969,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createstudentcourse",{"_index":1283,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createsubstitutioncourse",{"_index":1284,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createteachercourse",{"_index":1285,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createtestmodule",{"_index":771,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":717,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1048,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4148,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":374,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5251,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":5319,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3827,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2521,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1029,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1031,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":4446,"title":{},"body":{"license.html":{}}}],["current",{"_index":1709,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1421,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1496,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1535,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1534,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentvalue",{"_index":1979,"title":{},"body":{"classes/Scope.html":{}}}],["currentvalue[selectedkey",{"_index":1981,"title":{},"body":{"classes/Scope.html":{}}}],["custom",{"_index":821,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":5377,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4301,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4564,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4306,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":377,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1337,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":4921,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":4960,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":4278,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":4594,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3194,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":1050,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":5041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":939,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2032,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1387,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:11",{"_index":1389,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["database.module.ts:48",{"_index":1407,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:58",{"_index":1409,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1386,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":2164,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":4834,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":798,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":4822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":2552,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1436,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":933,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":934,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":935,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":4735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":5094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":5280,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":2163,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1108,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1112,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1123,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3974,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4879,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4236,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1224,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":2675,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":5348,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":356,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4409,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":1059,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3932,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":4915,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":2478,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4226,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default.color",{"_index":491,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":490,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.groups",{"_index":492,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":489,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":4833,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultmessage",{"_index":118,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":726,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2298,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":4588,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4059,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4547,"title":{},"body":{"license.html":{}}}],["define",{"_index":273,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":4845,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":282,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":127,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2578,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":764,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":768,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":750,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1488,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1498,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1767,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":1497,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2562,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1551,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":2895,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":5392,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4377,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4510,"title":{},"body":{"license.html":{}}}],["depend",{"_index":5317,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":1267,"title":{},"body":{"injectables/LearnroomFacade.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":901,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":4518,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2962,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1105,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":5413,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":5414,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":124,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":4936,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":4927,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4317,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4024,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":4925,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4570,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2399,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2401,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3970,"title":{},"body":{"index.html":{}}}],["details",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":966,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":4795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":4794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3074,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":4349,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":4858,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3936,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":5401,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":2561,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3127,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4003,"title":{},"body":{"index.html":{}}}],["di",{"_index":5210,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":2004,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":2598,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3860,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":4704,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4569,"title":{},"body":{"license.html":{}}}],["different",{"_index":1695,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4400,"title":{},"body":{"license.html":{}}}],["digits",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1366,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4211,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4323,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4109,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":2181,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":4659,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":603,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3125,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":4246,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4580,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4398,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":5283,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5291,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":589,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":613,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4533,"title":{},"body":{"license.html":{}}}],["display",{"_index":4279,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":550,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":2199,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":725,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4133,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":3400,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":4850,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":5424,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4573,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4017,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4626,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4536,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4087,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2508,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":4692,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3188,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":718,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2955,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":4805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2412,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1660,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doesn't",{"_index":1424,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":2107,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":4658,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domain/task",{"_index":2143,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["domains",{"_index":3829,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":280,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":2170,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3170,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":5432,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":5437,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":5452,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":5447,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":5455,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4351,"title":{},"body":{"license.html":{}}}],["down",{"_index":5395,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":4462,"title":{},"body":{"license.html":{}}}],["driven",{"_index":5279,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":1400,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["driver.ts",{"_index":1467,"title":{},"body":{"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["driver.ts:7",{"_index":1471,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["dropdown",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":5308,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":716,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5190,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1593,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2128,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1614,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1609,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1595,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2130,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2126,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1889,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1589,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1891,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1941,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1618,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":1897,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":1607,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":1895,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":1597,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1599,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2134,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1605,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1601,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1603,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1591,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1622,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1616,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1612,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":959,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":958,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":2345,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":1541,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1041,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":4814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":2085,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":2971,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":2913,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":279,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":4300,"title":{},"body":{"license.html":{}}}],["duration",{"_index":780,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":777,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":3078,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4348,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4181,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1351,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1018,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1020,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":1021,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1644,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3051,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4104,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4919,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":890,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":4608,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4243,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4227,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4624,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":5394,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4478,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4629,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1661,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":303,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1140,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":5292,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4296,"title":{},"body":{"license.html":{}}}],["employer",{"_index":4636,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1750,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1742,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":656,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":5310,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1047,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1043,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1055,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":3764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4125,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":4067,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2530,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2546,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3100,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2288,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5281,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4248,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":3951,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1249,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["ensuretokeniswhitelisted(false",{"_index":1253,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":4543,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4270,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4559,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":333,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":327,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entitiyids",{"_index":257,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":52,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity._id",{"_index":1307,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["entity.id",{"_index":1305,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["entity.ts",{"_index":5189,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":301,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2034,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":250,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":254,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitys",{"_index":689,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["entityschema",{"_index":277,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":5147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1218,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":480,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":3922,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":736,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":2650,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":4669,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3128,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4202,"title":{},"body":{"license.html":{}}}],["err",{"_index":2315,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":5453,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":117,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1114,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":809,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":942,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":947,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":951,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":953,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":985,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":870,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":130,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1024,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1014,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":387,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":367,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1013,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":109,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":996,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":363,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":981,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":3831,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":602,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":607,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":1015,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":4886,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":4969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4166,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4948,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":465,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/LearnroomFacade.html":{},"changelog.html":{}}}],["etc",{"_index":3639,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":5382,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":5383,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":3498,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2430,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":2682,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4016,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3041,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1227,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4103,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4179,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2612,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":804,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":978,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":973,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":975,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1009,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1067,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":943,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":977,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":971,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":1358,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":4933,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":1364,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4338,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2884,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":3224,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":4503,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4205,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4552,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4160,"title":{},"body":{"license.html":{}}}],["execute",{"_index":523,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1649,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":4853,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4115,"title":{},"body":{"license.html":{}}}],["execution",{"_index":2294,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":786,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4479,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4244,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2473,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1173,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":5343,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1220,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exp",{"_index":1178,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":5454,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":5435,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":5457,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5516,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":5438,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":5521,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":5428,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4355,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5515,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":5451,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":3246,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":5284,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":5443,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1196,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1190,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":902,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4196,"title":{},"body":{"license.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":5204,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":3253,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":205,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":4656,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":899,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4582,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1017,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":4428,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1044,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":1242,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":4765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4283,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4135,"title":{},"body":{"license.html":{}}}],["external",{"_index":2876,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1169,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1142,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":2331,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":2186,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1064,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1212,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":4415,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":731,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":1263,"title":{},"body":{"injectables/LearnroomFacade.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":5410,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4565,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4206,"title":{},"body":{"license.html":{}}}],["factory",{"_index":5387,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":2843,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":119,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":2882,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":4604,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4201,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":422,"title":{},"body":{"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4343,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3986,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4101,"title":{},"body":{"license.html":{}}}],["fast",{"_index":5303,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":3899,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4352,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":208,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":845,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":206,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":907,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":919,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":203,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":868,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":961,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":914,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":3776,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":3778,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":3779,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":900,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":3780,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":3781,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":201,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":886,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":893,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":832,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":903,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2435,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3985,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":485,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":4263,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":4907,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":5318,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":2402,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":4655,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":4951,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":2054,"title":{},"body":{"classes/Submission.html":{}}}],["filename",{"_index":4870,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["filenames",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":930,"title":{},"body":{"classes/FileTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":925,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":805,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1554,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1560,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1558,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1564,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1756,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":808,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":643,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["filters",{"_index":1563,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":5349,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":4438,"title":{},"body":{"license.html":{}}}],["find",{"_index":889,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":892,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1489,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1501,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1654,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallassignedbyteacher",{"_index":2146,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallassignedbyteacher(userid",{"_index":2150,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbystudent",{"_index":2147,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbystudent(userid",{"_index":2152,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyuserid",{"_index":618,"title":{},"body":{"injectables/CourseRepo.html":{},"interfaces/ICourseRepo.html":{}}}],["findallbyuserid(userid",{"_index":620,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["findallforteam",{"_index":2281,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2282,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":1758,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1769,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopen",{"_index":2233,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopen(currentuser",{"_index":2239,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenbystudent",{"_index":2192,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbyteacher",{"_index":2234,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenbyteacher(userid",{"_index":2241,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforstudent",{"_index":2235,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforstudent(userid",{"_index":2243,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":5512,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourses",{"_index":705,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["findbycourses(courses",{"_index":682,"title":{},"body":{"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["findbyid",{"_index":1909,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":1913,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":1910,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":1915,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findcourseswithgroupsbyuserid",{"_index":674,"title":{},"body":{"injectables/CourseUC.html":{},"injectables/LearnroomFacade.html":{}}}],["findcourseswithgroupsbyuserid(userid",{"_index":679,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{}}}],["finding",{"_index":1078,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1652,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1657,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1490,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1506,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1653,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1663,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1759,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1775,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2033,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":5098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":2254,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1774,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1090,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":5029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4584,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2493,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":4883,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2417,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3034,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":5481,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1562,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":4186,"title":{},"body":{"license.html":{}}}],["flush",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":5324,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":5524,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3995,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":5184,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":3572,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":2168,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":4901,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":639,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":628,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4242,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":4763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1061,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":1448,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"license.html":{}}}],["forcearray",{"_index":3771,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["forcearray(arrayofobjects).reduce(reducer",{"_index":1987,"title":{},"body":{"classes/Scope.html":{}}}],["forcearray(input",{"_index":1970,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["forcefullsync",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5518,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":3598,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":484,"title":{},"body":{"classes/Course.html":{},"classes/ErrorResponse.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":3302,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4291,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1346,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1347,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2037,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4013,"title":{},"body":{"license.html":{}}}],["framework",{"_index":4917,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4011,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4031,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3842,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["fulfilled",{"_index":5066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4230,"title":{},"body":{"license.html":{}}}],["full",{"_index":2744,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":982,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":375,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4961,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4366,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3926,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4319,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":4899,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":4884,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":2482,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4177,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3048,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":3962,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":4890,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":3237,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":5020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1507,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2283,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('dashboard",{"_index":2097,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":2342,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":896,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getallsubmissionsbyuser",{"_index":2064,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getallsubmissionsbyuser(userid",{"_index":2068,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getcolor",{"_index":403,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getcourseofuser",{"_index":2148,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getcourseofuser(userid",{"_index":2155,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getdescription",{"_index":404,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getdetails",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getentitypermissions",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getgroups",{"_index":405,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gethello",{"_index":754,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getname",{"_index":406,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getnewspermissions",{"_index":1760,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1777,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getparentid",{"_index":693,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["getpermittedentities",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":235,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":826,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":834,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":827,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":836,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1957,"title":{},"body":{"classes/Scope.html":{}}}],["getrequiredpermissions",{"_index":1761,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1780,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getservice",{"_index":920,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":906,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getsubmissionsbytask",{"_index":2065,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytask(task",{"_index":2070,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist",{"_index":2066,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["getsubmissionsbytaskslist(tasks",{"_index":2072,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["gettargetfilters",{"_index":1762,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1783,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":2303,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2406,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":828,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":838,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":829,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":840,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":830,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":842,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2380,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":2383,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":3942,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":3850,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":3870,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":3862,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":2518,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4260,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1495,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":876,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4266,"title":{},"body":{"license.html":{}}}],["global",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":931,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":807,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1033,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1152,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":936,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1036,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4006,"title":{},"body":{"license.html":{}}}],["go",{"_index":2595,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":4700,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4081,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5299,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":1353,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":5431,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4390,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4082,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2040,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":2041,"title":{},"body":{"classes/Submission.html":{}}}],["graded",{"_index":2210,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{}}}],["gradedusers",{"_index":2216,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["gradedusers.add(submission.student.id",{"_index":2225,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["gradedusers.size",{"_index":2231,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["gradefileids",{"_index":2042,"title":{},"body":{"classes/Submission.html":{}}}],["grant",{"_index":4410,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4191,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4457,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1268,"title":{},"body":{"injectables/LearnroomFacade.html":{},"modules.html":{}}}],["gratis",{"_index":4318,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4618,"title":{},"body":{"license.html":{}}}],["group",{"_index":463,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"interfaces/ICourseProperties.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["group.getparentid",{"_index":521,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["grouping",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":395,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskRepo.html":{},"miscellaneous/variables.html":{}}}],["groupsofcourse",{"_index":519,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gt",{"_index":1754,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2184,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1545,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":4768,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5213,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":4844,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hack",{"_index":473,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["halper",{"_index":2323,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3006,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":338,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":3299,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":999,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":378,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":4945,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5248,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":5505,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4967,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":72,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["haspermissions",{"_index":252,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["haswritepermission",{"_index":407,"title":{},"body":{"classes/Course.html":{}}}],["haswritepermission(userid",{"_index":443,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["haswritepermissions",{"_index":447,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["having",{"_index":4204,"title":{},"body":{"license.html":{}}}],["header",{"_index":1185,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4066,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":5470,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":965,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":3155,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":5444,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":5430,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hence",{"_index":5076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":275,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":4500,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":423,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/LessonTaskInfo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":5325,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":4932,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4941,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2952,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3861,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3864,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":4435,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4397,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":2166,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":2732,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2056,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":2094,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":4947,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3045,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3196,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":4627,"title":{},"body":{"license.html":{}}}],["host",{"_index":949,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1030,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4325,"title":{},"body":{"license.html":{}}}],["hot",{"_index":4693,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":4344,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2007,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["htmlcontent",{"_index":162,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":164,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4015,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":4640,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":341,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":5374,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":5214,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":4675,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":5312,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":2584,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":4909,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":5322,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5252,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":4910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":4912,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":4908,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":4661,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":4913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":120,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":357,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":5378,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["i.e",{"_index":5070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1177,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":694,"title":{"interfaces/ICoursegroupProperties.html":{}},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["icoursegrouprepo",{"_index":677,"title":{"interfaces/ICoursegroupRepo.html":{}},"body":{"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":414,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icourserepo",{"_index":625,"title":{"interfaces/ICourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1071,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":1081,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1867,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1869,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.tohexstring",{"_index":1306,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["id.ts",{"_index":4720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identical",{"_index":1245,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":4524,"title":{},"body":{"license.html":{}}}],["identified",{"_index":5384,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":815,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1244,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":5407,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3104,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":237,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"changelog.html":{}}}],["ierrortype",{"_index":343,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":5336,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":5345,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":5338,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifindoptions",{"_index":1094,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["iframe",{"_index":2964,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":1391,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"controllers/TaskController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoredtasks",{"_index":2153,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ignoreexpiration",{"_index":1213,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":1106,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":898,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":915,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":885,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":3952,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":455,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":4165,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5215,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1174,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":630,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4546,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":445,"title":{},"body":{"classes/Course.html":{},"injectables/CourseUC.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":4491,"title":{},"body":{"license.html":{}}}],["imports",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":4420,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4549,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1749,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2099,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{}}}],["improvements",{"_index":4060,"title":{},"body":{"license.html":{}}}],["improves",{"_index":5389,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5191,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":4598,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4601,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4014,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4595,"title":{},"body":{"license.html":{}}}],["include",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Scope.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4161,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4119,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":3193,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4290,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1049,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4065,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4566,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4347,"title":{},"body":{"license.html":{}}}],["increase",{"_index":2777,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":5046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":4416,"title":{},"body":{"license.html":{}}}],["independant",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":5352,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4281,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@property",{"_index":426,"title":{},"body":{"classes/Course.html":{}}}],["index()@property({fieldname",{"_index":428,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":2335,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":4652,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":2657,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":4460,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4426,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2854,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4098,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4358,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":4815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":66,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1079,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":5330,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":538,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":527,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["info.entity.ts:10",{"_index":2359,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:11",{"_index":1316,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:14",{"_index":535,"title":{},"body":{"classes/CourseGroupInfo.html":{}}}],["info.entity.ts:15",{"_index":667,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":929,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:17",{"_index":533,"title":{},"body":{"classes/CourseGroupInfo.html":{}}}],["info.entity.ts:18",{"_index":666,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:19",{"_index":928,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:21",{"_index":668,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:25",{"_index":670,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:28",{"_index":669,"title":{},"body":{"classes/CourseTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":529,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:8",{"_index":664,"title":{},"body":{"classes/CourseTaskInfo.html":{},"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:9",{"_index":927,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.mapper",{"_index":1586,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1937,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1939,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1731,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":1944,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1946,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2367,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1945,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4331,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":822,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":5202,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":4458,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4488,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4112,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["inheritances",{"_index":1693,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{}}}],["inital",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":5361,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1328,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4482,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":4821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":681,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('coursegrouprepo",{"_index":684,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["inject('courserepo",{"_index":683,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["inject('mail_service_options",{"_index":1380,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":1431,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1433,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":210,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":881,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1324,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":155,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":154,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":3955,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1155,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4173,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4362,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4375,"title":{},"body":{"license.html":{}}}],["instance",{"_index":910,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":963,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":3684,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":2587,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3971,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4255,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2734,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4034,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4247,"title":{},"body":{"license.html":{}}}],["interact",{"_index":4631,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4561,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4128,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4132,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":784,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":785,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":772,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":368,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4302,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4475,"title":{},"body":{"license.html":{}}}],["interface",{"_index":146,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1209,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":148,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4367,"title":{},"body":{"license.html":{}}}],["internal",{"_index":574,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":5328,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":954,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":989,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":451,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["interpreter",{"_index":4171,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4184,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5297,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":882,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":3567,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":3532,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":4826,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":4648,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":4276,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5298,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1100,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1127,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2005,"title":{},"body":{"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1087,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1089,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1125,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4193,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1565,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":962,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1003,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":743,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":721,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdefined",{"_index":3772,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefined(input",{"_index":1963,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefined(key",{"_index":1974,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object",{"_index":1973,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object[key",{"_index":1975,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(selectedkey",{"_index":1984,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(targetkey",{"_index":1985,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(testeddefinedvalue",{"_index":1968,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue",{"_index":3773,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedobjectvalue(currentvalue",{"_index":1980,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue(object",{"_index":1972,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery",{"_index":637,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(input",{"_index":1964,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(query",{"_index":1969,"title":{},"body":{"classes/Scope.html":{}}}],["iserv",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":960,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":998,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1566,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1570,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1848,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1845,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1839,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismember",{"_index":408,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismember(userid",{"_index":459,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismongoid",{"_index":1567,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":77,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":5179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":5416,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":744,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1561,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2327,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1555,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2326,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1559,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isprivilegedmember",{"_index":518,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["ispublished",{"_index":1815,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1181,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":745,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":719,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":734,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":730,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":409,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["isstudent(userid",{"_index":461,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["issubstitutionteacher",{"_index":410,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["issubstitutionteacher(userid",{"_index":466,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["issue",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1188,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3004,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istanbul",{"_index":1390,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"controllers/TaskController.html":{}}}],["isteacher",{"_index":411,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["isteacher(userid",{"_index":468,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["istechnicalerror",{"_index":968,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1006,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1338,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionstatus",{"_index":2122,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["iswhitelisted",{"_index":1234,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1237,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":2594,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":5415,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":5434,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":5436,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5511,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":4146,"title":{},"body":{"license.html":{}}}],["items",{"_index":1129,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["iterations",{"_index":2253,"title":{},"body":{"injectables/TaskUC.html":{}}}],["itself",{"_index":4378,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1077,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1138,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["jest",{"_index":2515,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":3774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":5513,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":4803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3979,"title":{},"body":{"index.html":{}}}],["job",{"_index":5117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":3471,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":2929,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":3845,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3828,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":3112,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.stringify(e.constraints",{"_index":1022,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":3847,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1183,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":5529,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1207,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":1162,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":191,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1216,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1215,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1211,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1168,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1193,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":178,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":179,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1247,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1452,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":4851,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4167,"title":{},"body":{"license.html":{}}}],["key",{"_index":1821,"title":{},"body":{"injectables/NewsUc.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["keyof",{"_index":4744,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4124,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4022,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4048,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":4514,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4521,"title":{},"body":{"license.html":{}}}],["known",{"_index":2904,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":487,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":3989,"title":{},"body":{"index.html":{}}}],["language",{"_index":2550,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4284,"title":{},"body":{"license.html":{}}}],["last",{"_index":2366,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1091,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":592,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":1773,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":4903,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":4674,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4114,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4090,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4486,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":4939,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":4651,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":2629,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":3849,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3852,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":3351,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4633,"title":{},"body":{"license.html":{}}}],["lean",{"_index":3866,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":2141,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["learnroom.facade",{"_index":1276,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["learnroomentities",{"_index":2026,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["learnroomfacade",{"_index":1258,"title":{"injectables/LearnroomFacade.html":{}},"body":{"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["learnroommodule",{"_index":1270,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["learnroomtesthelper",{"_index":1277,"title":{"classes/LearnroomTestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{}}}],["leave",{"_index":4710,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2293,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":877,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":4891,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":4871,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":4701,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":4824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4054,"title":{},"body":{"license.html":{}}}],["lern",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":3628,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":2086,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonid",{"_index":2090,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":4820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":1317,"title":{},"body":{"classes/LessonTaskInfo.html":{},"changelog.html":{}}}],["lessonschema",{"_index":3757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":2172,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["lessontaskinfo",{"_index":1314,"title":{"classes/LessonTaskInfo.html":{}},"body":{"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["letter",{"_index":5224,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4071,"title":{},"body":{"license.html":{}}}],["level",{"_index":3488,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":5412,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4399,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4111,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4159,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4339,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4005,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4094,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4095,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4097,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4028,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4461,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4407,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":4455,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1102,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":4592,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2514,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":2590,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":605,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":4790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2525,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4182,"title":{},"body":{"license.html":{}}}],["links",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":4689,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":234,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":541,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4483,"title":{},"body":{"license.html":{}}}],["living",{"_index":5295,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":4667,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5199,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":5309,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":5463,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":2853,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":2735,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":4843,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":4856,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":4892,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":3157,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":956,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":1109,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1117,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":4690,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":3969,"title":{},"body":{"index.html":{}}}],["logger",{"_index":783,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":946,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":791,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":1026,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1023,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1010,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":5448,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":1320,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1343,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":388,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":957,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":369,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":5368,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":380,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":779,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":792,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":788,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2180,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":2169,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2741,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5233,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":4650,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3990,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3020,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1172,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":4599,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4602,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4943,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5225,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1755,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4293,"title":{},"body":{"license.html":{}}}],["made",{"_index":4061,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":165,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":1379,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":1356,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":1369,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":150,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":158,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":1344,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2027,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":1348,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":1355,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":1375,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":2431,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":911,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":5096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":3315,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":3243,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2628,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4163,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1243,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4221,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2325,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":5506,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":4985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":2827,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":2439,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":3799,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":4654,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":4501,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":5445,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3075,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User.html":{}}}],["manytomany('role",{"_index":1133,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":536,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":531,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":2849,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1572,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1576,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5206,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":5207,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1573,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1578,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":2385,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5205,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1528,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2105,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":5528,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":4981,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":5007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1574,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1580,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1938,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2079,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(task",{"_index":2121,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":1886,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["maptoresponse(userinfo",{"_index":2361,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1575,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1582,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4544,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4405,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4414,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4092,"title":{},"body":{"license.html":{}}}],["master",{"_index":3001,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":823,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":354,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":5502,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4208,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4379,"title":{},"body":{"license.html":{}}}],["materials",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":2689,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1849,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1853,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1842,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":2209,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{}}}],["maxworkers",{"_index":4801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":1420,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":4695,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":2348,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":2341,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":4422,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4000,"title":{},"body":{"index.html":{}}}],["means",{"_index":3956,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4229,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3959,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4252,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4264,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4147,"title":{},"body":{"license.html":{}}}],["member",{"_index":848,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1406,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4144,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4583,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4127,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2190,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":4471,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":482,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{}}}],["messuring",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4195,"title":{},"body":{"license.html":{}}}],["meta",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3889,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.service",{"_index":2144,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["metadata.service.ts",{"_index":2212,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{},"coverage.html":{}}}],["metadata.service.ts:6",{"_index":2214,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["method",{"_index":891,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{}}}],["metic",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3093,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":3346,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3854,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":3593,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1645,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1647,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1410,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":4688,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1426,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1429,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1430,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1395,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":1403,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1416,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1427,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1411,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2307,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":153,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":1850,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1851,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1852,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1841,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":5231,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3921,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":4404,"title":{},"body":{"license.html":{}}}],["missing",{"_index":909,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1748,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3855,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3163,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":5420,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":5478,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":5466,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":5468,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2538,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":737,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1826,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4088,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4150,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3614,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":4269,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":2899,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4056,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4117,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3109,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":4828,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":170,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":5509,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":5508,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":4787,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":5462,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5239,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5234,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":4770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":4797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1412,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":5477,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":5476,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2010,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5245,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5243,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5244,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/learnroom",{"_index":2250,"title":{},"body":{"injectables/TaskUC.html":{}}}],["modules/learnroom/entity",{"_index":2022,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/learnroom/learnroom.module",{"_index":2017,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2016,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity",{"_index":2018,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":2015,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":2020,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2013,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/entity",{"_index":2021,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2014,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":474,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"dependencies.html":{}}}],["mongo",{"_index":1398,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoclient",{"_index":1450,"title":{},"body":{"classes/MongoSharedConnection.html":{},"miscellaneous/variables.html":{}}}],["mongoclient.connect(this.config.getclienturl",{"_index":1456,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["mongoconnection",{"_index":1444,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["mongod",{"_index":1418,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongod.geturi",{"_index":1419,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodatabasemodule",{"_index":1384,"title":{"modules/MongoDatabaseModule.html":{}},"body":{"modules/MongoDatabaseModule.html":{},"modules.html":{}}}],["mongodatabasemoduleoptions",{"_index":1388,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1414,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongodriver",{"_index":1468,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["mongomemorydatabasemodule",{"_index":1405,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":5491,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1413,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2031,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["mongosharedconnection",{"_index":1442,"title":{"classes/MongoSharedConnection.html":{}},"body":{"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["mongosharedconnection(this.config",{"_index":1470,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["mongoshareddriver",{"_index":1397,"title":{"classes/MongoSharedDriver.html":{}},"body":{"modules/MongoDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["monitoring",{"_index":5073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3872,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1465,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":4444,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":5391,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":2475,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":3947,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":4670,"title":{},"body":{"todo.html":{}}}],["move",{"_index":2158,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":3130,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":765,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":974,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":3439,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1065,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":329,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":3998,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1511,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":4709,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3874,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3892,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4282,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2183,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":3340,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":4188,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":700,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":2165,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1001,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":4699,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":4847,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":4852,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":4865,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":4867,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":4880,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":4881,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":4846,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":4855,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":4859,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":4857,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":4862,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":4775,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":4874,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":4875,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":4878,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":4777,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":4776,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":4876,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3526,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":913,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":760,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":806,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":4900,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":763,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":3789,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":3792,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":742,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":762,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":5467,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":1319,"title":{},"body":{"injectables/Logger.html":{}}}],["net",{"_index":3967,"title":{},"body":{"index.html":{}}}],["network",{"_index":4027,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":5290,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":546,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1594,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":1642,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2280,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2284,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":1615,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1798,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1596,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1590,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":715,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2329,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":739,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":720,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2328,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":729,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":738,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":733,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1619,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1598,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1600,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1602,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":1604,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1592,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":586,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1617,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1611,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":241,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:100",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:106",{"_index":2278,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:30",{"_index":580,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":570,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":576,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":577,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:54",{"_index":578,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:57",{"_index":573,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:60",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:63",{"_index":582,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:65",{"_index":571,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:75",{"_index":584,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:94",{"_index":1947,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":1823,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1646,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1796,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1791,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1716,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1733,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1790,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1485,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1807,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":1688,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":1696,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":1684,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":1502,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":1500,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":1538,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":1813,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1542,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":1810,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1527,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1536,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1540,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1537,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1550,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1629,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1634,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1526,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":1679,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstargetfilter",{"_index":1655,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetinfo",{"_index":585,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetmodel",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":601,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":244,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":610,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":1522,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1817,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1803,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":604,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2312,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":799,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":2182,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":3700,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3945,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3869,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3871,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":3126,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4313,"title":{},"body":{"license.html":{}}}],["none",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1831,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":2902,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4342,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":4823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":3723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":844,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":2035,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":4456,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4138,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4134,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4445,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4441,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4394,"title":{},"body":{"license.html":{}}}],["november",{"_index":4008,"title":{},"body":{"license.html":{}}}],["now",{"_index":727,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":801,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":2637,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":867,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/TaskRepo.html":{}}}],["number",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4575,"title":{},"body":{"license.html":{}}}],["numberofstudentsintaskscourse",{"_index":2228,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["numbers",{"_index":4737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2672,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":4829,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":5170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":3178,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2958,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":1721,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Scope.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["object.assign(this",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":1822,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.keys(input).length",{"_index":1965,"title":{},"body":{"classes/Scope.html":{}}}],["object.values(constraint",{"_index":145,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":747,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["objectid().tohexstring",{"_index":1303,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid.isvalid(value",{"_index":1873,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":5250,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4556,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4327,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4231,"title":{},"body":{"license.html":{}}}],["observable",{"_index":790,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4312,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":976,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":4453,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3014,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":2187,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["odered",{"_index":1771,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":4732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4053,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4333,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4316,"title":{},"body":{"license.html":{}}}],["official",{"_index":4152,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":2188,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":5321,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":5399,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2450,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":3601,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1361,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":4922,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1230,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":5230,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":493,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["oneweekago",{"_index":2174,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2175,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1408,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":284,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":1454,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3191,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":4860,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":4605,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4320,"title":{},"body":{"license.html":{}}}],["operates",{"_index":5390,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4168,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3670,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":464,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":4076,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":4563,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2484,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":5269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1425,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":5379,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":5370,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1350,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.exchange",{"_index":1365,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":1805,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":1370,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1096,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":1367,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1097,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1690,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":4467,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4099,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":4924,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":2928,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":3617,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1432,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":4911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":1678,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":5482,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":5313,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/LearnroomTestHelper.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1396,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orquery",{"_index":1962,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["others",{"_index":1060,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otheruserid",{"_index":1279,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["otherwise",{"_index":1423,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5221,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":5409,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":4672,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":3304,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":4214,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2605,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5526,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overlaps",{"_index":2191,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["overridden",{"_index":5372,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":3266,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":803,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":381,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4734,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":4644,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":2837,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4497,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1712,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":5242,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":4835,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":3297,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":4275,"title":{},"body":{"license.html":{}}}],["packages",{"_index":4662,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4162,"title":{},"body":{"license.html":{}}}],["page",{"_index":1840,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1846,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":862,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1098,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5195,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":5260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1503,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1520,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1543,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2119,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":3878,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":4630,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4432,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4507,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":2799,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":243,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":1547,"title":{},"body":{"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2287,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":5458,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":5456,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5194,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":1797,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":1544,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":895,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1625,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1626,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1794,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1628,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1627,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1624,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":5193,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":3056,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":3232,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1519,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":3813,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":5123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3944,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2322,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4156,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4126,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4187,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4321,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4473,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5222,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1057,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":2109,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":1206,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1210,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"classes/Account.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":2878,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1517,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1514,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":4431,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4492,"title":{},"body":{"license.html":{}}}],["path",{"_index":924,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":4798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2480,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":748,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1203,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1195,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1223,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4537,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4329,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4332,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5209,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":2778,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4178,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4440,"title":{},"body":{"license.html":{}}}],["permission",{"_index":450,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1836,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":253,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1835,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.includes(this.permissions.studentdashboard",{"_index":2275,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions.includes(this.permissions.teacherdashboard",{"_index":2273,"title":{},"body":{"injectables/TaskUC.html":{}}}],["permissions.refid",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":4257,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4289,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4070,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":2258,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":4370,"title":{},"body":{"license.html":{}}}],["persist",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":305,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":5275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":308,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":310,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":312,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":326,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1383,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":5369,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":5402,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":2686,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":4554,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5289,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4297,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4310,"title":{},"body":{"license.html":{}}}],["pick",{"_index":3026,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4046,"title":{},"body":{"license.html":{}}}],["pin",{"_index":2704,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1039,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2404,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5212,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1870,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":2644,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":5265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":163,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":161,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":475,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3833,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4477,"title":{},"body":{"license.html":{}}}],["point",{"_index":722,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":4625,"title":{},"body":{"license.html":{}}}],["policy",{"_index":3543,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":3070,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1692,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":591,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":4840,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4336,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":4307,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4273,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2252,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1493,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":4682,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4241,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3977,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4029,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":4687,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4020,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4085,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":3939,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4474,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":5373,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":5418,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":1487,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1331,"title":{},"body":{"injectables/Logger.html":{}}}],["preparing",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":3963,"title":{},"body":{"index.html":{}}}],["present",{"_index":3156,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4142,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4401,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":3366,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":278,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3187,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":4476,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4041,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4539,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["primaryrolesearchoperation",{"_index":1128,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":1903,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":5480,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":4923,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":5323,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":4442,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":394,"title":{},"body":{"classes/Course.html":{},"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1254,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":3607,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":2977,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4363,"title":{},"body":{"license.html":{}}}],["process",{"_index":3342,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4529,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4170,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":5366,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4298,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2539,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4540,"title":{},"body":{"license.html":{}}}],["program",{"_index":4036,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4251,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4637,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4157,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4047,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4212,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4238,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4534,"title":{},"body":{"license.html":{}}}],["project",{"_index":2411,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3882,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3092,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4145,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4137,"title":{},"body":{"license.html":{}}}],["promise",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":766,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1809,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":1930,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":2349,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":5439,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3832,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4107,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4459,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4118,"title":{},"body":{"license.html":{}}}],["proper",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3036,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1651,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":1902,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({default",{"_index":417,"title":{},"body":{"classes/Course.html":{}}}],["property({fieldname",{"_index":696,"title":{},"body":{"classes/Coursegroup.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["property({persist",{"_index":421,"title":{},"body":{"classes/Course.html":{}}}],["propertydecorator",{"_index":3934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":416,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.classids",{"_index":501,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.color",{"_index":509,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.content",{"_index":595,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.courseid",{"_index":702,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.creator",{"_index":599,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":497,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":597,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.email",{"_index":1150,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.features",{"_index":511,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.firstname",{"_index":1146,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1148,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["props.name",{"_index":495,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.permissions",{"_index":1135,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.roles",{"_index":1137,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["props.school",{"_index":598,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.schoolid",{"_index":499,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.studentids",{"_index":503,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.substitutionteacherids",{"_index":507,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":600,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.teacherids",{"_index":505,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":593,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4049,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1469,"title":{},"body":{"classes/MongoSharedDriver.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4222,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4262,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":4916,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4383,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":4587,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":774,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":239,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1335,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1329,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":379,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4395,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4437,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4577,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4578,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":758,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4406,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4078,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":3661,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":2568,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":728,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedlessons",{"_index":2193,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pull",{"_index":3159,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4176,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4345,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4527,"title":{},"body":{"license.html":{}}}],["push",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3669,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3140,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":4449,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4586,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1743,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1747,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":658,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1621,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1620,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1623,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5256,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":1959,"title":{},"body":{"classes/Scope.html":{}}}],["queryelement",{"_index":1982,"title":{},"body":{"classes/Scope.html":{}}}],["queryobject",{"_index":1961,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["queryorder",{"_index":2157,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":2189,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.desc",{"_index":2194,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryordermap",{"_index":1677,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["querys",{"_index":2111,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1354,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":4838,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":4832,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":1352,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":1363,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":1360,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":5074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3834,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":448,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4294,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":4516,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4386,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/LearnroomFacade.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":5305,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":5479,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":1394,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["reason",{"_index":4525,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4308,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":4447,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4044,"title":{},"body":{"license.html":{}}}],["received",{"_index":4277,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":4463,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4531,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":4369,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4523,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":166,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4153,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/Scope.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":4681,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1246,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1255,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":4621,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2445,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reducer",{"_index":1977,"title":{},"body":{"classes/Scope.html":{}}}],["reduces",{"_index":3080,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4931,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":2462,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5287,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":590,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":579,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":1453,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4040,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4089,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3888,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5294,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4558,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4391,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":3960,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4274,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4189,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3225,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":5329,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3017,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":5507,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":4436,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":5517,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":5311,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2981,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4215,"title":{},"body":{"license.html":{}}}],["release",{"_index":2699,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4083,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4072,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4267,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4084,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":4694,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":4515,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4326,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4038,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4560,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4562,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4392,"title":{},"body":{"license.html":{}}}],["remove",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":314,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":317,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":319,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":299,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":321,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":2256,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{}}}],["removeing",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3147,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":4600,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2960,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":2871,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2613,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":5358,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":4684,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":169,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":1275,"title":{},"body":{"modules/LearnroomModule.html":{},"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":5484,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5201,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1789,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1637,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":3435,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":5386,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":5499,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4666,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3938,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4360,"title":{},"body":{"license.html":{}}}],["representation",{"_index":4888,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":879,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1225,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1226,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2301,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2036,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1159,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2308,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":2903,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1248,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1170,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":937,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":4804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":4802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1063,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1816,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4268,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4328,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":917,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4102,"title":{},"body":{"license.html":{}}}],["reset",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2388,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2392,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2393,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1221,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":1884,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2391,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyidlist",{"_index":1925,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":1928,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":1911,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":1917,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1659,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":2351,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":2354,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolving",{"_index":1266,"title":{},"body":{"injectables/LearnroomFacade.html":{}}}],["resource",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":5496,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4245,"title":{},"body":{"license.html":{}}}],["respond",{"_index":4705,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":1505,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1035,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5197,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5196,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5254,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":4464,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":2691,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":4848,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":4706,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":781,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1819,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":4239,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4423,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3537,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query",{"_index":1960,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":3770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":4068,"title":{},"body":{"license.html":{}}}],["results",{"_index":82,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4373,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1509,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":143,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2196,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":5433,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":4929,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5211,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3993,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":4609,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4567,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":5293,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3697,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4050,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3894,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":4585,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":3260,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1086,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"classes/User.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1141,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":1900,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":1899,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":1933,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2387,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1143,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@property",{"_index":2336,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":3362,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":1906,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1084,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":1932,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":1898,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":1923,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":4376,"title":{},"body":{"license.html":{}}}],["room",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":274,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":4771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3102,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":4796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2959,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":5504,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":756,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3200,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":2459,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":1359,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["royalty",{"_index":4481,"title":{},"body":{"license.html":{}}}],["rss",{"_index":575,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":5315,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":2874,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":2638,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":5461,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2295,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":2593,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":5469,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":793,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":795,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":4623,"title":{},"body":{"license.html":{}}}],["safety",{"_index":3966,"title":{},"body":{"index.html":{}}}],["sale",{"_index":4490,"title":{},"body":{"license.html":{}}}],["same",{"_index":476,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":849,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":912,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":5474,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5228,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":5475,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":5363,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2907,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":4660,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":249,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":238,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":4877,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["savequery",{"_index":1992,"title":{},"body":{"classes/Scope.html":{}}}],["saying",{"_index":4324,"title":{},"body":{"license.html":{}}}],["sc",{"_index":2456,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":5044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":3508,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5200,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":2702,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":4811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":396,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":572,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schoolinfo.id",{"_index":1940,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1942,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1585,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1608,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1711,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":614,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":612,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1074,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":724,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2008,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":769,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":623,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1680,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1681,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.findbycourses(courses",{"_index":710,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["scope.forallgrouptypes(userid",{"_index":631,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":634,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["scope.request",{"_index":904,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1828,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2290,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2291,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":1321,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1735,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:22",{"_index":1741,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1739,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:57",{"_index":644,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope:67",{"_index":657,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope:71",{"_index":660,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope:76",{"_index":653,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope:81",{"_index":647,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope:83",{"_index":645,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope:85",{"_index":646,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1825,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1802,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":857,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1510,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4174,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":3808,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2752,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1144,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@property({fieldname",{"_index":2338,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":5371,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4110,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4057,"title":{},"body":{"license.html":{}}}],["secret",{"_index":73,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1214,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":4220,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4292,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2418,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":3097,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seeddata",{"_index":5422,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":4697,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":4679,"title":{},"body":{"todo.html":{}}}],["selectedkey",{"_index":651,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["selection",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":3708,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4505,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4489,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4091,"title":{},"body":{"license.html":{}}}],["send",{"_index":1372,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{}}}],["send(data",{"_index":1377,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":5337,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":818,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3030,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":3794,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3032,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":4335,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1326,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":3984,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3052,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":5351,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":4928,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":2159,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":3946,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":4657,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":3137,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":3898,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":4893,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":770,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":2011,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":4698,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":4677,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1996,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":3724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":5357,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1999,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":3626,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4164,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":853,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":860,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5514,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5247,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":856,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":846,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":888,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":897,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":894,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":922,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":923,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5203,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":878,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":4590,"title":{},"body":{"license.html":{}}}],["session",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1157,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(permissions",{"_index":1934,"title":{},"body":{"injectables/RoleUC.html":{}}}],["setcontext",{"_index":1336,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":4807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupsthatmatchcourse",{"_index":412,"title":{},"body":{"classes/Course.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["setgroupsthatmatchcourse(coursegroups",{"_index":470,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["sets",{"_index":3084,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2305,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":767,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":4764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":3238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":4806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1040,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":4809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4225,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4032,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1399,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1521,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":1569,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5216,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":57,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/JwtPayload.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1675,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/pipes",{"_index":5240,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":624,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{}}}],["shared/repo/base.repo",{"_index":1676,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":5217,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5237,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5220,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharedclient",{"_index":1451,"title":{},"body":{"classes/MongoSharedConnection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedclient?.close(force",{"_index":1466,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["sharetoken",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":3868,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1772,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2933,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":4638,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4361,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4080,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":4712,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":5429,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":3961,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4553,"title":{},"body":{"license.html":{}}}],["single",{"_index":1066,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":1101,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1062,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":4703,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":3198,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":992,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3902,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":3678,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4012,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4346,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4203,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4217,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":453,"title":{},"body":{"classes/Course.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":4635,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":3117,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":5364,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":5367,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sorted",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["sortedsubmissions",{"_index":2217,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["sorting",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["sorting.ts",{"_index":4673,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1103,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.desc",{"_index":1806,"title":{},"body":{"injectables/NewsUc.html":{}}}],["sortordermap",{"_index":1099,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5188,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":2583,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1714,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4940,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4305,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4039,"title":{},"body":{"license.html":{}}}],["spec",{"_index":1393,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":4774,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":4779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4384,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4023,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3095,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4155,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4574,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1422,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":4568,"title":{},"body":{"license.html":{}}}],["split",{"_index":4978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":5510,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":5501,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":4781,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":4772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":352,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":353,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":796,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":5489,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sso",{"_index":78,"title":{},"body":{"classes/Account.html":{}}}],["st",{"_index":1967,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["stabilisation",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":4937,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1008,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4151,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4154,"title":{},"body":{"license.html":{}}}],["start",{"_index":4004,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2407,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":3454,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["starts",{"_index":4839,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":994,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":3256,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3172,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4194,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stategue",{"_index":1264,"title":{},"body":{"injectables/LearnroomFacade.html":{}}}],["statement",{"_index":4425,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":3709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4256,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":2117,"title":{},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":2185,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4051,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":5396,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5282,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1438,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2437,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2452,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":5503,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":3730,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":4759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1205,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":4926,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1332,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1568,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":3906,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":883,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5181,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5182,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1334,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":4671,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1300,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2247,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentfiles",{"_index":2043,"title":{},"body":{"classes/Submission.html":{}}}],["studentid",{"_index":2052,"title":{},"body":{"classes/Submission.html":{}}}],["studentids",{"_index":397,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["students",{"_index":528,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3976,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4002,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4950,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1182,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sub.task",{"_index":2271,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subdividing",{"_index":4470,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":159,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":4502,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4219,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2019,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.grade",{"_index":2222,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submission.gradecomment",{"_index":2223,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submission.gradefileids.length",{"_index":2224,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submission.task.id",{"_index":2220,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{}}}],["submissionrepo",{"_index":2062,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["submissions",{"_index":2060,"title":{},"body":{"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"changelog.html":{}}}],["submissions.filter((sub",{"_index":2270,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissions].sort((a",{"_index":2218,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submissionschema",{"_index":3758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":2259,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionsofstudent.map((submission",{"_index":2262,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionstatusfortask",{"_index":2213,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submitted",{"_index":2208,"title":{},"body":{"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{}}}],["submittedusers",{"_index":2215,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submittedusers.add(submission.student.id",{"_index":2226,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submittedusers.has(submission.student.id",{"_index":2221,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["submittedusers.size",{"_index":2230,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["subprograms",{"_index":4183,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4314,"title":{},"body":{"license.html":{}}}],["subset",{"_index":4873,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["subsitutionteacher",{"_index":1301,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":4356,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4468,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":430,"title":{},"body":{"classes/Course.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteacherids",{"_index":398,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["substitutionteachers",{"_index":662,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{}}}],["succeed",{"_index":5450,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":3443,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4073,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4513,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4364,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":4711,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":4649,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":4872,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":5464,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4387,"title":{},"body":{"license.html":{}}}],["support",{"_index":1175,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1184,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":2440,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":4827,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":3615,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1176,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4037,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4548,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4424,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4603,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4642,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2106,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":4816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":4817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":2649,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1820,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":3071,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":3076,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":3571,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":306,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":2289,"title":{},"body":{"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":2817,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3775,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3958,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":3046,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":2517,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":4341,"title":{},"body":{"license.html":{}}}],["tap",{"_index":794,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":865,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2081,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2082,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":1746,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1833,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1744,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1745,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":735,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":863,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":1587,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":1606,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":1720,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetkey",{"_index":652,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["targetmodel",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1784,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1829,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":855,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":859,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1832,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":864,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":537,"title":{"classes/Task.html":{}},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course.students.length",{"_index":2229,"title":{},"body":{"injectables/TaskSubmissionMetadataService.html":{}}}],["task.course?.color",{"_index":2131,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":2129,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":2132,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":2127,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2059,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":2124,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskSubmissionMetadataService.html":{}}}],["task.name",{"_index":2125,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":2133,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2246,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task_dashboard_view_v3",{"_index":2248,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{}}}],["taskcontroller",{"_index":2095,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskentities",{"_index":2024,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskmapper",{"_index":2104,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":2118,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodel",{"_index":4818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":2002,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":2138,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2103,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2115,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2074,"title":{},"body":{"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map",{"_index":2116,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks.map((task",{"_index":2265,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskschema",{"_index":3759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksubmissionmetadata",{"_index":2237,"title":{},"body":{"injectables/TaskUC.html":{}}}],["tasksubmissionmetadataservice",{"_index":2139,"title":{"injectables/TaskSubmissionMetadataService.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["tasksubmissions",{"_index":2269,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskswithsubmissions",{"_index":2261,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskuc",{"_index":2101,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithsubmissionstatus",{"_index":2251,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["teacher",{"_index":1299,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2245,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacherids",{"_index":399,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["teachers",{"_index":663,"title":{},"body":{"classes/CourseTaskInfo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["team",{"_index":588,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teamid",{"_index":2285,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teaminfo",{"_index":587,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teammembers",{"_index":2044,"title":{},"body":{"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":615,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":611,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":1636,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1075,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":4683,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":4906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":970,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4228,"title":{},"body":{"license.html":{}}}],["technology",{"_index":4918,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":4896,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4139,"title":{},"body":{"license.html":{}}}],["template",{"_index":1016,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":452,"title":{},"body":{"classes/Course.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"changelog.html":{}}}],["term",{"_index":4192,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":4430,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4448,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4439,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4427,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3050,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":757,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":773,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":753,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":755,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":4773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":5304,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":5405,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":5425,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":688,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testeddefinedvalue",{"_index":3931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testedvalue",{"_index":661,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["testenvironment",{"_index":4793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":1161,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":761,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":5490,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":5498,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":5494,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":5493,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":5492,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":4780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":4778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":2820,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5235,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5218,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5236,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":272,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4077,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":3307,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":5187,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1989,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":1988,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":1991,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":1990,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2318,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addid(course",{"_index":1308,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(coursegroup",{"_index":1313,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addqrquery(courses",{"_index":709,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["this.addquery",{"_index":1753,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1751,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(orquery",{"_index":1995,"title":{},"body":{"classes/Scope.html":{}}}],["this.addquery(queries[0",{"_index":1752,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(savequery",{"_index":1994,"title":{},"body":{"classes/Scope.html":{}}}],["this.addqueryifvalueisdefined(userid",{"_index":629,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":1381,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1180,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1818,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":5331,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1795,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1834,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1830,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.cache",{"_index":1921,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.classids",{"_index":500,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.client",{"_index":1459,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.client.db(this.config.get('dbname",{"_index":1461,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.code",{"_index":358,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":508,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.content",{"_index":594,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.coursegrouprepo.findbycourses(courses",{"_index":687,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["this.courseid",{"_index":701,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.courserepo.findallbyuserid(userid",{"_index":685,"title":{},"body":{"injectables/CourseUC.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{}}}],["this.courseuc.findcourseswithgroupsbyuserid(userid",{"_index":1269,"title":{},"body":{"injectables/LearnroomFacade.html":{}}}],["this.createcourse(coursetyps.student",{"_index":1309,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.subsitutionteacher",{"_index":1311,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.teacher",{"_index":1310,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createerrorresponse(error",{"_index":1034,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1862,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.db",{"_index":1460,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.description",{"_index":496,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":362,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":596,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(coursegroupinfo",{"_index":2077,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(coursetaskinfo",{"_index":2161,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":2173,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":2178,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(course",{"_index":633,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":711,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{}}}],["this.em.findandcount(news",{"_index":1689,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2075,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1685,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":1920,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2377,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":330,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(entity",{"_index":324,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(n",{"_index":328,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":325,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.populate(coursenews",{"_index":1699,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":1691,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":1686,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":1697,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(teamnews",{"_index":1698,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":331,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":332,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1149,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":258,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":259,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":246,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":247,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":866,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":854,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":858,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5246,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.features",{"_index":510,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.findallopenbyteacher(id",{"_index":2274,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallopenforstudent(id",{"_index":2276,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":1922,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1683,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1145,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["this.getconnectionoptions",{"_index":1457,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.getcourseofuser(userid",{"_index":2171,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":251,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1811,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1804,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1827,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":847,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.groups",{"_index":522,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.isstudent(userid",{"_index":515,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.issubstitutionteacher(userid",{"_index":517,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.isteacher(userid",{"_index":516,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1219,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1147,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"classes/UserInfo.html":{}}}],["this.limit",{"_index":1865,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1793,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":5365,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1800,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1812,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1801,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":5340,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1792,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":5362,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":797,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":800,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":361,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1441,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":494,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.findall(targets",{"_index":1808,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1814,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":1799,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":1824,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1533,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1552,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1539,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1548,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1549,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.routingkey",{"_index":1382,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":1440,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.otheruserid",{"_index":1304,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.permissions",{"_index":1134,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.propertiestopopulate",{"_index":1687,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.request.app.get('feathersapp",{"_index":908,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":1931,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles",{"_index":1136,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":2390,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.schoolid",{"_index":498,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{}}}],["this.skip",{"_index":1864,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.studentids",{"_index":502,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.studentids.includes(userid",{"_index":512,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.submissionrepo.getallsubmissionsbyuser(userid",{"_index":2260,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.submissionrepo.getsubmissionsbytaskslist(tasks",{"_index":2268,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.substitutionteacherids",{"_index":506,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.substitutionteacherids.includes(userid",{"_index":514,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.taskrepo.findallassignedbyteacher(userid",{"_index":2267,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallbystudent(userid",{"_index":2263,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.tasksubmissionmetadata.submissionstatusfortask(submissionsofstudent",{"_index":2266,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.tasksubmissionmetadata.submissionstatusfortask(tasksubmissions",{"_index":2272,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopen(currentuser",{"_index":2114,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacherids",{"_index":504,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.teacherids.includes(userid",{"_index":513,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":4680,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":5446,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":360,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1863,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":359,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":5339,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":1222,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userid",{"_index":1302,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":5344,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":2389,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":5335,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":5333,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":2357,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":3687,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4389,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":3432,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4129,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":255,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2309,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2317,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2316,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":3603,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":248,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":3978,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3980,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":723,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1158,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2320,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2313,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2310,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1160,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2319,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":2942,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":3433,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1703,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":5440,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":3910,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":63,"title":{"todo.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1557,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":5460,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3940,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":5356,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1855,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1115,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4412,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4411,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4413,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3035,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4130,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4368,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4466,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":5307,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1051,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1868,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1054,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":3817,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1052,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1323,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":3954,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4330,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":5270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":4388,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4234,"title":{},"body":{"license.html":{}}}],["tries",{"_index":3633,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":3652,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":424,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":997,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":4668,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["tt",{"_index":650,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{}}}],["two",{"_index":3577,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1186,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICoursegroupRepo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1093,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":4714,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1732,"title":{},"body":{"classes/NewsResponse.html":{},"classes/Scope.html":{}}}],["typeorm",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1402,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":3722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1546,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":606,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4353,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":884,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":4782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":626,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/CoursegroupScope.html":{},"injectables/LearnroomFacade.html":{},"modules/LearnroomModule.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5208,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1523,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":2102,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2356,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":3908,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":5135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":814,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":240,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":256,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":3318,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":5300,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2477,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":4920,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":5449,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":5406,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1028,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3207,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4949,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":817,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2586,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":3911,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":987,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":988,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4359,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5523,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4198,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4106,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2577,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":4385,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1080,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1252,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":1643,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":5353,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":454,"title":{},"body":{"classes/Course.html":{},"injectables/CourseUC.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICoursegroupRepo.html":{},"injectables/LearnroomFacade.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":2596,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1491,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1786,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1512,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1729,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":1513,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":581,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":3663,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1076,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1662,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3903,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2061,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":5286,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5223,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":816,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":1357,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":940,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":2831,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":3914,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3270,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":810,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":457,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedglobals",{"_index":938,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1417,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":4628,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":4760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usequeryifvalueisdefined",{"_index":638,"title":{},"body":{"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["usequeryifvalueisdefined(testeddefinedvalue",{"_index":1966,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["usequeryifvalueisdefined(testedvalue",{"_index":1993,"title":{},"body":{"classes/Scope.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{}},"body":{"classes/Account.html":{},"modules/AuthModule.html":{},"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseTaskInfo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":5334,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.createdat",{"_index":1893,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["user.facade",{"_index":2373,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":1890,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.id",{"_index":1888,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":1892,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.ldapdn",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":852,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5238,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":1896,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":850,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":5232,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":1894,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1228,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":4989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":5326,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":5332,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":5346,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":2339,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentities",{"_index":2025,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":1199,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUC.html":{},"classes/Coursegroup.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseRepo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/LearnroomFacade.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":5522,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":861,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["userinfo",{"_index":560,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo.firstname",{"_index":2363,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":2362,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":2364,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1588,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1610,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1613,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1705,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":177,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2371,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1085,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":5341,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":2177,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["usertaskinfo",{"_index":534,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseTaskInfo.html":{},"classes/FileTaskInfo.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useruc",{"_index":2344,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":3502,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":775,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":446,"title":{},"body":{"classes/Course.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":3271,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":5459,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":3240,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":3649,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":4808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":4702,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":4889,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":4707,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1058,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1154,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1241,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1239,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":116,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1232,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1238,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1236,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":85,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2405,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1038,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1046,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":2397,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":96,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":141,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":131,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":144,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":370,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1045,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":746,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":5219,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1872,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CourseTaskInfo.html":{},"classes/Coursegroup.html":{},"classes/CoursegroupScope.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonTaskInfo.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskSubmissionMetadataService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":4730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":2755,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":3564,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":2651,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":4018,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1110,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1119,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1124,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":2774,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":5483,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2998,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2479,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4035,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":3965,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":2197,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1782,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":4382,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4434,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3867,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":4686,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3975,"title":{},"body":{"index.html":{}}}],["void",{"_index":316,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseScope.html":{},"classes/CoursegroupScope.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4285,"title":{},"body":{"license.html":{}}}],["vor",{"_index":2869,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":703,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":3941,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":4708,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":4905,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3917,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4240,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4614,"title":{},"body":{"license.html":{}}}],["want",{"_index":4045,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1111,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1121,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":2162,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":4141,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4140,"title":{},"body":{"license.html":{}}}],["watch",{"_index":4691,"title":{},"body":{"todo.html":{}}}],["way",{"_index":477,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/LearnroomFacade.html":{},"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4295,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":4632,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":4122,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":5403,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":4472,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":5119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1325,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4350,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1056,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1217,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":2483,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4337,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4158,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4063,"title":{},"body":{"license.html":{}}}],["wil",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3286,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":3703,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3208,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3988,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4233,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4043,"title":{},"body":{"license.html":{}}}],["within",{"_index":339,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3143,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":4664,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":3983,"title":{},"body":{"index.html":{}}}],["work",{"_index":281,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4175,"title":{},"body":{"license.html":{}}}],["workers",{"_index":2516,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflows",{"_index":5354,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":3608,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":5398,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1556,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4504,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":5487,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":5411,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":5052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":449,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1025,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1032,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":5161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1012,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1027,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4581,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4303,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1019,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":4792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3919,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":4304,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":345,"title":{},"body":{"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskMapper.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":4519,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":5360,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lasttriedFailedLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: User})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\t// TODO not use partial see INewsProperties, use Object.assign for related entities only.\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { UserModule } from '../user';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                name\n                            \n                            \n                                schoolId\n                            \n                            \n                                studentIds\n                            \n                            \n                                substitutionTeacherIds\n                            \n                            \n                                teacherIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeColor\n                            \n                            \n                                changeDescription\n                            \n                            \n                                changeName\n                            \n                            \n                                getColor\n                            \n                            \n                                getDescription\n                            \n                            \n                                getGroups\n                            \n                            \n                                getName\n                            \n                            \n                                hasWritePermission\n                            \n                            \n                                isMember\n                            \n                            \n                                    Private\n                                isStudent\n                            \n                            \n                                    Private\n                                isSubstitutionTeacher\n                            \n                            \n                                    Private\n                                isTeacher\n                            \n                            \n                                setGroupsThatMatchCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Coursegroup[] | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({persist: false, default: undefined, hidden: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeColor\n                        \n                    \n                \n            \n            \n                \nchangeColor(color: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeDescription\n                        \n                    \n                \n            \n            \n                \nchangeDescription(description: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeName\n                        \n                    \n                \n            \n            \n                \nchangeName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDescription\n                        \n                    \n                \n            \n            \n                \ngetDescription()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGroups\n                        \n                    \n                \n            \n            \n                \ngetGroups()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     [] | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getName\n                        \n                    \n                \n            \n            \n                \ngetName()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:136\n                \n            \n\n\n            \n                \n                    Important using hasWritePermissions and isMember as read and write permission interpretation,\nis only a temporary solution until we have implement an authorization interface that can used.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMember\n                        \n                    \n                \n            \n            \n                \nisMember(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    isStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:112\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isSubstitutionTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupsThatMatchCourse\n                        \n                    \n                \n            \n            \n                \nsetGroupsThatMatchCourse(coursegroups: Coursegroup[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/course.entity.ts:144\n                \n            \n\n\n            \n                \n                    Important it is a bad hack for the moment please do not do it in the same way.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    coursegroups\n                                    \n                                            Coursegroup[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Coursegroup } from './coursegroup.entity';\n\n/*\nenum CourseFeatures {\n\tMESSENGER = 'messenger',\n}\n*/\ninterface ICourseProperties {\n\tname: string;\n\tdescription?: string;\n\tschoolId: EntityId;\n\t// classIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionTeacherIds?: EntityId[];\n\tstudentIds?: EntityId[];\n\t// TODO: color format\n\tcolor?: string;\n\t// features?: CourseFeatures[];\n}\n\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n\tgroups: [],\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname!: string;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription!: string;\n\n\t@Index()\n\t@Property()\n\tschoolId: EntityId;\n\n\t// @Index()\n\t// @Property()\n\t// classIds: EntityId[];\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Index()\n\t@Property()\n\tteacherIds: EntityId[];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: EntityId[];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor!: string;\n\n\t@Property({ persist: false, default: DEFAULT.groups, hidden: true })\n\t// private groups: Coursegroup[];\n\tprivate groups: Coursegroup[] | undefined = undefined;\n\n\t// OneToMany()\n\t// @Property()\n\t// features: CourseFeatures[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\t// this.classIds = props.classIds || [];\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\t\t// this.features = props.features || [];\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.description || DEFAULT.description;\n\t}\n\n\tchangeDescription(description: string): void {\n\t\tthis.description = description;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name || DEFAULT.name;\n\t}\n\n\tchangeName(name: string): void {\n\t\tthis.name = name;\n\t}\n\n\tgetColor(): string {\n\t\treturn this.color || DEFAULT.color;\n\t}\n\n\tchangeColor(color: string): void {\n\t\tthis.color = color;\n\t}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tprivate isStudent(userId: EntityId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tprivate isTeacher(userId: EntityId): boolean {\n\t\tconst isTeacher = this.teacherIds.includes(userId);\n\t\treturn isTeacher;\n\t}\n\n\tprivate isSubstitutionTeacher(userId: EntityId): boolean {\n\t\tconst isSubstitutionTeacher = this.substitutionTeacherIds.includes(userId);\n\t\treturn isSubstitutionTeacher;\n\t}\n\n\tisMember(userId: EntityId): boolean {\n\t\tconst isMember = this.isStudent(userId) || this.isTeacher(userId) || this.isSubstitutionTeacher(userId);\n\t\treturn isMember;\n\t}\n\n\t/**\n\t * Important using hasWritePermissions and isMember as read and write permission interpretation,\n\t * is only a temporary solution until we have implement an authorization interface that can used.\n\t */\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst isPrivilegedMember = this.isTeacher(userId) || this.isSubstitutionTeacher(userId);\n\t\treturn isPrivilegedMember;\n\t}\n\n\t/**\n\t * Important it is a bad hack for the moment please do not do it in the same way.\n\t */\n\tsetGroupsThatMatchCourse(coursegroups: Coursegroup[]): void {\n\t\tconst { id } = this;\n\t\tconst groupsOfCourse = coursegroups.filter((group) => id === group.getParentId());\n\t\tthis.groups = groupsOfCourse;\n\t}\n\n\tgetGroups(): Coursegroup[] | undefined {\n\t\t// TODO: if it is already execute addGroupsThatMatchCourse\n\t\treturn this.groups;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroupInfo.html":{"url":"classes/CourseGroupInfo.html","title":"class - CourseGroupInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroupInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '../../../shared/domain';\nimport { CourseTaskInfo } from './course-task-info.entity';\nimport { UserTaskInfo } from './user-task-info.entity';\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:100\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/repo/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/repo/course.repo.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/repo/course.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nimport { Course } from '../entity';\nimport { ICourseRepo } from '../uc';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: userId };\n\t\tconst isTeacher = { teacherIds: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: userId };\n\t\tconst $or = [isStudent, isTeacher, isSubstitutionTeacher];\n\t\tthis.addQueryIfValueIsDefined(userId, { $or });\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo implements ICourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/repo/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                            \n                                createOrQueryFromList\n                            \n                            \n                                isDefinedQuery\n                            \n                            \n                                useQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQrQuery\n                            \n                            \n                                addQuery\n                            \n                            \n                                addQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createOrQueryFromList\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : isDefinedQuery\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n                \n                    \n                        Default value : useQueryIfValueIsDefined\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:81\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/repo/course.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQrQuery\n                        \n                    \n                \n            \n            \n                \naddQrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:76\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \naddQueryIfValueIsDefined(testedValue: TT, query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedValue\n                                    \n                                            TT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nimport { Course } from '../entity';\nimport { ICourseRepo } from '../uc';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: userId };\n\t\tconst isTeacher = { teacherIds: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: userId };\n\t\tconst $or = [isStudent, isTeacher, isSubstitutionTeacher];\n\t\tthis.addQueryIfValueIsDefined(userId, { $or });\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo implements ICourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseTaskInfo.html":{"url":"classes/CourseTaskInfo.html","title":"class - CourseTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : COURSE_DEFAULT_COLOR\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'substitutionIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'teacherIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-task-info.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\nexport const COURSE_DEFAULT_COLOR = '#ACACAC';\n\n@Entity({ tableName: 'courses' })\nexport class CourseTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string = COURSE_DEFAULT_COLOR;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t// TODO: combine teachers and substitutionTeachers\n\t@ManyToMany({ fieldName: 'teacherIds', type: UserTaskInfo })\n\tteachers = new Collection(this);\n\n\t@ManyToMany({ fieldName: 'substitutionIds', type: UserTaskInfo })\n\tsubstitutionTeachers = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseUC.html":{"url":"injectables/CourseUC.html","title":"injectable - CourseUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findCoursesWithGroupsByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: ICourseRepo, coursegroupRepo: ICoursegroupRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        ICourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        coursegroupRepo\n                                                  \n                                                        \n                                                                        ICoursegroupRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCoursesWithGroupsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCoursesWithGroupsByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Course, Coursegroup } from '../entity';\n\nexport interface ICourseRepo {\n\tfindAllByUserId(userId: EntityId): Promise>;\n}\n\nexport interface ICoursegroupRepo {\n\tfindByCourses(courses: Course[]): Promise>;\n}\n\n@Injectable()\nexport class CourseUC {\n\tconstructor(\n\t\t@Inject('CourseRepo') readonly courseRepo: ICourseRepo,\n\t\t@Inject('CoursegroupRepo') readonly coursegroupRepo: ICoursegroupRepo\n\t) {}\n\n\tasync findCoursesWithGroupsByUserId(userId: EntityId): Promise> {\n\t\tconst [courses, count] = await this.courseRepo.findAllByUserId(userId);\n\t\tconst [coursesgroups] = await this.coursegroupRepo.findByCourses(courses);\n\t\t/**\n\t\t * Important setGroupsThatMatchCourse is a temporary solution until we tested application only entitys\n\t\t */\n\t\tcourses.forEach((course) => course.setGroupsThatMatchCourse(coursesgroups));\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coursegroup.html":{"url":"classes/Coursegroup.html","title":"class - Coursegroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coursegroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                studentIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                            \n                                isMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICoursegroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICoursegroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMember\n                        \n                    \n                \n            \n            \n                \nisMember(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/entity/coursegroup.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: EntityId;\n\tstudentIds?: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t// TODO: only id is needed at the moment\n\t// @ManyToOne({ fieldName: 'courseId' })\n\t// course: Course;\n\t@Property()\n\tcourseId: EntityId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: EntityId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): EntityId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursegroupRepo.html":{"url":"injectables/CoursegroupRepo.html","title":"injectable - CoursegroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoursegroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/repo/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/repo/coursegroup.repo.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourses(courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/repo/coursegroup.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nimport { Coursegroup, Course } from '../entity';\nimport { ICoursegroupRepo } from '../uc';\n\nclass CoursegroupScope extends Scope {\n\tfindByCourses(courses: Course[]): CoursegroupScope {\n\t\tthis.addQrQuery(courses, 'id', 'courseId');\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CoursegroupRepo implements ICoursegroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourses(courses: Course[]): Promise> {\n\t\tconst scope = new CoursegroupScope();\n\t\tscope.findByCourses(courses);\n\t\tconst [coursegroups, count] = await this.em.findAndCount(Coursegroup, scope.query);\n\t\treturn [coursegroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursegroupScope.html":{"url":"classes/CoursegroupScope.html","title":"class - CoursegroupScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursegroupScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/repo/coursegroup.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                            \n                                createOrQueryFromList\n                            \n                            \n                                isDefinedQuery\n                            \n                            \n                                useQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByCourses\n                            \n                            \n                                addQrQuery\n                            \n                            \n                                addQuery\n                            \n                            \n                                addQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createOrQueryFromList\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : isDefinedQuery\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n                \n                    \n                        Default value : useQueryIfValueIsDefined\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:81\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByCourses\n                        \n                    \n                \n            \n            \n                \nfindByCourses(courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/repo/coursegroup.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CoursegroupScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQrQuery\n                        \n                    \n                \n            \n            \n                \naddQrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:76\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \naddQueryIfValueIsDefined(testedValue: TT, query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedValue\n                                    \n                                            TT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nimport { Coursegroup, Course } from '../entity';\nimport { ICoursegroupRepo } from '../uc';\n\nclass CoursegroupScope extends Scope {\n\tfindByCourses(courses: Course[]): CoursegroupScope {\n\t\tthis.addQrQuery(courses, 'id', 'courseId');\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CoursegroupRepo implements ICoursegroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourses(courses: Course[]): Promise> {\n\t\tconst scope = new CoursegroupScope();\n\t\tscope.findByCourses(courses);\n\t\tconst [coursegroups, count] = await this.em.findAndCount(Coursegroup, scope.query);\n\t\treturn [coursegroups, count];\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeacherIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacherIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeacherIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacherIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Coursegroup } from './coursegroup.entity';\n\n/*\nenum CourseFeatures {\n\tMESSENGER = 'messenger',\n}\n*/\ninterface ICourseProperties {\n\tname: string;\n\tdescription?: string;\n\tschoolId: EntityId;\n\t// classIds?: EntityId[];\n\tteacherIds?: EntityId[];\n\tsubstitutionTeacherIds?: EntityId[];\n\tstudentIds?: EntityId[];\n\t// TODO: color format\n\tcolor?: string;\n\t// features?: CourseFeatures[];\n}\n\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n\tgroups: [],\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname!: string;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription!: string;\n\n\t@Index()\n\t@Property()\n\tschoolId: EntityId;\n\n\t// @Index()\n\t// @Property()\n\t// classIds: EntityId[];\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t@Index()\n\t@Property()\n\tteacherIds: EntityId[];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: EntityId[];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor!: string;\n\n\t@Property({ persist: false, default: DEFAULT.groups, hidden: true })\n\t// private groups: Coursegroup[];\n\tprivate groups: Coursegroup[] | undefined = undefined;\n\n\t// OneToMany()\n\t// @Property()\n\t// features: CourseFeatures[];\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\t// this.classIds = props.classIds || [];\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\t\t// this.features = props.features || [];\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetDescription(): string {\n\t\treturn this.description || DEFAULT.description;\n\t}\n\n\tchangeDescription(description: string): void {\n\t\tthis.description = description;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name || DEFAULT.name;\n\t}\n\n\tchangeName(name: string): void {\n\t\tthis.name = name;\n\t}\n\n\tgetColor(): string {\n\t\treturn this.color || DEFAULT.color;\n\t}\n\n\tchangeColor(color: string): void {\n\t\tthis.color = color;\n\t}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tprivate isStudent(userId: EntityId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tprivate isTeacher(userId: EntityId): boolean {\n\t\tconst isTeacher = this.teacherIds.includes(userId);\n\t\treturn isTeacher;\n\t}\n\n\tprivate isSubstitutionTeacher(userId: EntityId): boolean {\n\t\tconst isSubstitutionTeacher = this.substitutionTeacherIds.includes(userId);\n\t\treturn isSubstitutionTeacher;\n\t}\n\n\tisMember(userId: EntityId): boolean {\n\t\tconst isMember = this.isStudent(userId) || this.isTeacher(userId) || this.isSubstitutionTeacher(userId);\n\t\treturn isMember;\n\t}\n\n\t/**\n\t * Important using hasWritePermissions and isMember as read and write permission interpretation,\n\t * is only a temporary solution until we have implement an authorization interface that can used.\n\t */\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst isPrivilegedMember = this.isTeacher(userId) || this.isSubstitutionTeacher(userId);\n\t\treturn isPrivilegedMember;\n\t}\n\n\t/**\n\t * Important it is a bad hack for the moment please do not do it in the same way.\n\t */\n\tsetGroupsThatMatchCourse(coursegroups: Coursegroup[]): void {\n\t\tconst { id } = this;\n\t\tconst groupsOfCourse = coursegroups.filter((group) => id === group.getParentId());\n\t\tthis.groups = groupsOfCourse;\n\t}\n\n\tgetGroups(): Coursegroup[] | undefined {\n\t\t// TODO: if it is already execute addGroupsThatMatchCourse\n\t\treturn this.groups;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseRepo.html":{"url":"interfaces/ICourseRepo.html","title":"interface - ICourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findAllByUserId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \nfindAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Course, Coursegroup } from '../entity';\n\nexport interface ICourseRepo {\n\tfindAllByUserId(userId: EntityId): Promise>;\n}\n\nexport interface ICoursegroupRepo {\n\tfindByCourses(courses: Course[]): Promise>;\n}\n\n@Injectable()\nexport class CourseUC {\n\tconstructor(\n\t\t@Inject('CourseRepo') readonly courseRepo: ICourseRepo,\n\t\t@Inject('CoursegroupRepo') readonly coursegroupRepo: ICoursegroupRepo\n\t) {}\n\n\tasync findCoursesWithGroupsByUserId(userId: EntityId): Promise> {\n\t\tconst [courses, count] = await this.courseRepo.findAllByUserId(userId);\n\t\tconst [coursesgroups] = await this.coursegroupRepo.findByCourses(courses);\n\t\t/**\n\t\t * Important setGroupsThatMatchCourse is a temporary solution until we tested application only entitys\n\t\t */\n\t\tcourses.forEach((course) => course.setGroupsThatMatchCourse(coursesgroups));\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoursegroupProperties.html":{"url":"interfaces/ICoursegroupProperties.html","title":"interface - ICoursegroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoursegroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: EntityId;\n\tstudentIds?: EntityId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: EntityId[];\n\n\t// TODO: only id is needed at the moment\n\t// @ManyToOne({ fieldName: 'courseId' })\n\t// course: Course;\n\t@Property()\n\tcourseId: EntityId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: EntityId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): EntityId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoursegroupRepo.html":{"url":"interfaces/ICoursegroupRepo.html","title":"interface - ICoursegroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoursegroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        findByCourses\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByCourses\n                        \n                    \n                \n            \n            \n                \nfindByCourses(courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Course, Coursegroup } from '../entity';\n\nexport interface ICourseRepo {\n\tfindAllByUserId(userId: EntityId): Promise>;\n}\n\nexport interface ICoursegroupRepo {\n\tfindByCourses(courses: Course[]): Promise>;\n}\n\n@Injectable()\nexport class CourseUC {\n\tconstructor(\n\t\t@Inject('CourseRepo') readonly courseRepo: ICourseRepo,\n\t\t@Inject('CoursegroupRepo') readonly coursegroupRepo: ICoursegroupRepo\n\t) {}\n\n\tasync findCoursesWithGroupsByUserId(userId: EntityId): Promise> {\n\t\tconst [courses, count] = await this.courseRepo.findAllByUserId(userId);\n\t\tconst [coursesgroups] = await this.coursegroupRepo.findByCourses(courses);\n\t\t/**\n\t\t * Important setGroupsThatMatchCourse is a temporary solution until we tested application only entitys\n\t\t */\n\t\tcourses.forEach((course) => course.setGroupsThatMatchCourse(coursesgroups));\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { UserFacade } from '../../user';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted(false, { accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LearnroomFacade.html":{"url":"injectables/LearnroomFacade.html","title":"injectable - LearnroomFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LearnroomFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findCoursesWithGroupsByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseUC: CourseUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/learnroom.facade.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseUC\n                                                  \n                                                        \n                                                                        CourseUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCoursesWithGroupsByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCoursesWithGroupsByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/learnroom.facade.ts:13\n                \n            \n\n\n            \n                \n                    Important the facade stategue is only a temporary solution until we established a better way for resolving the dependency graph\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Course } from './entity';\nimport { CourseUC } from './uc';\n\n@Injectable()\nexport class LearnroomFacade {\n\tconstructor(private readonly courseUC: CourseUC) {}\n\n\t/**\n\t * Important the facade stategue is only a temporary solution until we established a better way for resolving the dependency graph\n\t */\n\tasync findCoursesWithGroupsByUserId(userId: EntityId): Promise> {\n\t\tconst [courses, count] = await this.courseUC.findCoursesWithGroupsByUserId(userId);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_exports\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nLearnroomFacade \n\nLearnroomFacade \n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomFacade  -->\n\nLearnroomModule->LearnroomFacade \n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nCourseUC\n\nCourseUC\n\nLearnroomModule -->\n\nCourseUC->LearnroomModule\n\n\n\n\n\nCoursegroupRepo\n\nCoursegroupRepo\n\nLearnroomModule -->\n\nCoursegroupRepo->LearnroomModule\n\n\n\n\n\nLearnroomFacade\n\nLearnroomFacade\n\nLearnroomModule -->\n\nLearnroomFacade->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            CourseUC\n                        \n                        \n                            CoursegroupRepo\n                        \n                        \n                            LearnroomFacade\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LearnroomFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CourseUC } from './uc';\nimport { CourseRepo, CoursegroupRepo } from './repo';\nimport { LearnroomFacade } from './learnroom.facade';\n\n@Module({\n\tcontrollers: [],\n\tproviders: [LearnroomFacade, CourseUC, CourseRepo, CoursegroupRepo],\n\texports: [LearnroomFacade],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LearnroomTestHelper.html":{"url":"classes/LearnroomTestHelper.html","title":"class - LearnroomTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LearnroomTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/utils/testHelper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUserId\n                            \n                            \n                                schoolId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addId\n                            \n                            \n                                    Private\n                                createCourse\n                            \n                            \n                                createCoursegroup\n                            \n                            \n                                createStudentCourse\n                            \n                            \n                                createSubstitutionCourse\n                            \n                            \n                                createTeacherCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: Course | Coursegroup)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Course | Coursegroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCourse(type: CourseTyps)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                CourseTyps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCoursegroup\n                        \n                    \n                \n            \n            \n                \ncreateCoursegroup(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Coursegroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createStudentCourse\n                        \n                    \n                \n            \n            \n                \ncreateStudentCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubstitutionCourse\n                        \n                    \n                \n            \n            \n                \ncreateSubstitutionCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeacherCourse\n                        \n                    \n                \n            \n            \n                \ncreateTeacherCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/utils/testHelper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\n\nimport { EntityId } from '@shared/domain';\n\nimport { Course, Coursegroup } from '../entity';\n\nenum CourseTyps {\n\tteacher = 'teacherIds',\n\tstudent = 'studentIds',\n\tsubsitutionTeacher = 'substitutionTeacherIds',\n}\n\nexport class LearnroomTestHelper {\n\tuserId: EntityId;\n\n\totherUserId: EntityId;\n\n\tschoolId: EntityId;\n\n\tconstructor() {\n\t\tthis.userId = new ObjectId().toHexString();\n\t\tthis.otherUserId = new ObjectId().toHexString();\n\t\tthis.schoolId = new ObjectId().toHexString();\n\t}\n\n\tprivate addId(entity: Course | Coursegroup) {\n\t\tconst id = new ObjectId();\n\t\tentity.id = id.toHexString();\n\t\tentity._id = id;\n\t}\n\n\tprivate createCourse(type: CourseTyps): Course {\n\t\tconst course = new Course({ [type]: [this.userId], schoolId: this.schoolId, name: '' });\n\t\tthis.addId(course);\n\t\treturn course;\n\t}\n\n\tcreateStudentCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.student);\n\t}\n\n\tcreateTeacherCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.teacher);\n\t}\n\n\tcreateSubstitutionCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.subsitutionTeacher);\n\t}\n\n\tcreateCoursegroup(course: Course): Coursegroup {\n\t\tconst coursegroup = new Coursegroup({ studentIds: [this.userId], courseId: course.id });\n\t\tthis.addId(coursegroup);\n\t\treturn coursegroup;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { CourseTaskInfo } from './course-task-info.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoDatabaseModule.html":{"url":"modules/MongoDatabaseModule.html","title":"module - MongoDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-database.module.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */\n// TODO add spec when this will be really used\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { MongoSharedDriver } from './mongo-shared-driver';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '../../../config';\nimport { MongoDatabaseModuleOptions } from '../types';\n\n@Module({})\nexport class MongoDatabaseModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoDatabaseModule,\n\t\t\timports: [\n\t\t\t\tMikroOrmModule.forRoot({\n\t\t\t\t\t...(options || {}),\n\t\t\t\t\tdriver: MongoSharedDriver,\n\t\t\t\t\tclientUrl: DB_URL,\n\t\t\t\t\tuser: DB_USERNAME,\n\t\t\t\t\tpassword: DB_PASSWORD,\n\t\t\t\t}),\n\t\t\t],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { MongoDatabaseModuleOptions } from '../types';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoSharedConnection.html":{"url":"classes/MongoSharedConnection.html","title":"class - MongoSharedConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoSharedConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MongoConnection\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(force?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoConnection } from '@mikro-orm/mongodb';\nimport { MongoClient } from 'mongodb';\n\n// the shared mongo client\nlet sharedClient: MongoClient | undefined;\n\n// keep a list of references to all open mikro-orm mongo connections\nconst connections: Array = [];\n\nexport class MongoSharedConnection extends MongoConnection {\n\tasync connect(): Promise {\n\t\tif (!sharedClient) {\n\t\t\tsharedClient = await MongoClient.connect(this.config.getClientUrl(), this.getConnectionOptions());\n\t\t}\n\t\tconnections.push(this);\n\t\tthis.client = sharedClient;\n\t\tthis.db = this.client.db(this.config.get('dbName'));\n\t}\n\n\tasync close(force?: boolean): Promise {\n\t\t// remove from list of references\n\t\tconnections.splice(connections.indexOf(this), 1);\n\t\tif (connections.length === 0) {\n\t\t\t// close client when there are no more references\n\t\t\tawait sharedClient?.close(force);\n\t\t\tsharedClient = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoSharedDriver.html":{"url":"classes/MongoSharedDriver.html","title":"class - MongoSharedDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoSharedDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    MongoDriver\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                connection\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new MongoSharedConnection(this.config)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MongoDriver } from '@mikro-orm/mongodb';\nimport { MongoSharedConnection } from './mongo-shared-connection';\n\nexport class MongoSharedDriver extends MongoDriver {\n\tprotected readonly connection = new MongoSharedConnection(this.config);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetInfo\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:50\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:54\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetInfo, NewsTargetModel } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:21\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:41\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:34\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { CourseNews, News, SchoolNews, TeamNews } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                            \n                                createOrQueryFromList\n                            \n                            \n                                isDefinedQuery\n                            \n                            \n                                useQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQrQuery\n                            \n                            \n                                addQuery\n                            \n                            \n                                addQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createOrQueryFromList\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : isDefinedQuery\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:85\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n                \n                    \n                        Default value : useQueryIfValueIsDefined\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:81\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQrQuery\n                        \n                    \n                \n            \n            \n                \naddQrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:76\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \naddQueryIfValueIsDefined(testedValue: TT, query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedValue\n                                    \n                                            TT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:55\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResolvedUser } from '../controller/dto';\nimport { User, Role } from '../entity';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByIdList\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { IPermissionsAndRoles } from '../entity';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                            \n                                createOrQueryFromList\n                            \n                            \n                                isDefinedQuery\n                            \n                            \n                                useQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQrQuery\n                            \n                            \n                                addQuery\n                            \n                            \n                                addQueryIfValueIsDefined\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createOrQueryFromList\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n                \n                    \n                        Default value : isDefinedQuery\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n                \n                    \n                        Default value : useQueryIfValueIsDefined\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:81\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQrQuery\n                        \n                    \n                \n            \n            \n                \naddQrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \naddQueryIfValueIsDefined(testedValue: TT, query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedValue\n                                    \n                                            TT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\ntype QueryObject = Record>;\ntype OrQuery = { $or: QueryObject[] };\n\nexport function isDefined(input: T): boolean {\n\treturn input !== null && input !== undefined;\n}\n\nexport function isDefinedQuery(input: T): boolean {\n\treturn isDefined(input) && typeof input === 'object' && Object.keys(input).length > 0;\n}\n\n// TODO: EmptyResultQuery only include _id maybe undefined is better in this case\nexport function useQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST): ST | EmptyResultQueryType {\n\tlet result: ST | EmptyResultQueryType = query;\n\n\tif (!isDefined(testedDefinedvalue)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\tif (!isDefinedQuery(query)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\treturn result;\n}\n\nexport function forceArray(input: Array): Array {\n\treturn Array.isArray(input) ? input : [];\n}\n\nfunction isDefinedObjectValue(object: T, key: string): boolean {\n\treturn isDefined(object) && isDefined(key) && isDefined(object[key]);\n}\n\nexport function createOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string): OrQuery {\n\tconst reducer = (accumulator: QueryObject[], currentValue: T) => {\n\t\tif (isDefinedObjectValue(currentValue, selectedKey)) {\n\t\t\tconst value = currentValue[selectedKey] as Partial;\n\t\t\tconst queryElement = { [targetKey]: value };\n\t\t\taccumulator.push(queryElement);\n\t\t}\n\t\treturn accumulator;\n\t};\n\n\tif (isDefined(selectedKey) && isDefined(targetKey)) {\n\t\tconst arrayOfQuerys = forceArray(arrayOfObjects).reduce(reducer, []);\n\t\treturn { $or: arrayOfQuerys };\n\t}\n\treturn { $or: [] };\n}\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n\n\taddQueryIfValueIsDefined(testedValue: TT, query: FilterQuery): void {\n\t\tconst saveQuery = useQueryIfValueIsDefined(testedValue, query);\n\t\tthis.addQuery(saveQuery);\n\t}\n\n\taddQrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string): void {\n\t\tconst orQuery = createOrQueryFromList(arrayOfObjects, selectedKey, targetKey) as FilterQuery;\n\t\tthis.addQuery(orQuery);\n\t}\n\n\tuseQueryIfValueIsDefined = useQueryIfValueIsDefined;\n\n\tcreateOrQueryFromList = createOrQueryFromList;\n\n\tisDefinedQuery = isDefinedQuery;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/learnroom/learnroom.module';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\n\nimport {\n\tTask,\n\tLessonTaskInfo,\n\tCourseTaskInfo,\n\tSubmission,\n\tFileTaskInfo,\n\tUserTaskInfo,\n\tCourseGroupInfo,\n} from './modules/task/entity';\n\nimport { User, Role, Account } from './modules/user/entity';\n\nimport { Course, Coursegroup } from './modules/learnroom/entity';\n\nconst courseEntities = [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo];\nconst taskEntities = [Task, LessonTaskInfo, CourseTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo];\nconst userEntities = [User, Role, Account];\nconst learnroomEntities = [Course, Coursegroup];\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\t\tLearnroomModule,\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [...courseEntities, ...taskEntities, ...userEntities, ...learnroomEntities],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFileIds\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroupInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFileIds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'teamMembers', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo;\n\n\t@ManyToOne({ fieldName: 'courseGroupId' })\n\tcourseGroup: CourseGroupInfo;\n\n\t@ManyToMany({ fieldName: 'teamMembers', type: UserTaskInfo })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number;\n\n\t@Property()\n\tgradeComment: string;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFileIds = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllSubmissionsByUser\n                            \n                            \n                                    Async\n                                getSubmissionsByTask\n                            \n                            \n                                    Async\n                                getSubmissionsByTasksList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSubmissionsByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSubmissionsByUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSubmissionsByTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSubmissionsByTasksList\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissionsByTasksList(tasks: Task[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Counted, EntityId } from '../../../shared/domain';\nimport { CourseGroupInfo, Submission, Task } from '../entity';\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync getSubmissionsByTask(task: Task): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask,\n\t\t});\n\t\treturn [submissions, count];\n\t}\n\n\tasync getSubmissionsByTasksList(tasks: Task[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: tasks },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync getAllSubmissionsByUser(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroupInfo, { students: userId });\n\t\tconst result = await this.em.findAndCount(Submission, {\n\t\t\t$or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }],\n\t\t});\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTargetInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTargetInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TargetInfoResponse } from '../controller/dto/target-info.response';\nimport { NewsTargetInfo } from '../entity';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTargetInfo): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { CourseTaskInfo } from './course-task-info.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: CourseTaskInfo;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* istanbul ignore file */\n// TODO add tests to improve coverage\n\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\t// const [tasks, total] = await this.taskUc.findAllOpen(currentUser, paginationQuery);\n\t\tconst [tasks, total] = await this.taskUc.findAllOpen(currentUser, paginationQuery);\n\t\tconst taskresponses = tasks.map(({ task, status }) => {\n\t\t\treturn TaskMapper.mapToResponse(task, status);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task, status?: ISubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ISubmissionStatus\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task, COURSE_DEFAULT_COLOR, ISubmissionStatus } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task, status?: ISubmissionStatus): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color || COURSE_DEFAULT_COLOR;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = status || {};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nLearnroomModule->TaskModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskSubmissionMetadataService\n\nTaskSubmissionMetadataService\n\nTaskModule -->\n\nTaskSubmissionMetadataService->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubmissionRepo\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskSubmissionMetadataService\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LearnroomModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { LearnroomModule } from '../learnroom';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { SubmissionRepo, TaskRepo } from './repo';\nimport { TaskSubmissionMetadataService } from './domain/task-submission-metadata.service';\n\n@Module({\n\timports: [LearnroomModule],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, SubmissionRepo, TaskSubmissionMetadataService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllAssignedByTeacher\n                            \n                            \n                                    Async\n                                findAllByStudent\n                            \n                            \n                                    Async\n                                getCourseOfUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllAssignedByTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAssignedByTeacher(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByStudent(userId: EntityId, undefined: IPagination, ignoredTasks: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ignoredTasks\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCourseOfUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCourseOfUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { EntityManager, QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { Task, CourseTaskInfo, LessonTaskInfo } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// TODO: move to seperate repo\n\tasync getCourseOfUser(userId: EntityId): Promise {\n\t\tconst coursesOfUser = await this.em.find(CourseTaskInfo, {\n\t\t\t$or: [\n\t\t\t\t{\n\t\t\t\t\tstudents: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tteachers: userId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tsubstitutionTeachers: userId,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\treturn coursesOfUser;\n\t}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllByStudent(\n\t\tuserId: EntityId,\n\t\t{ limit, skip }: IPagination = {},\n\t\tignoredTasks: EntityId[] = []\n\t): Promise> {\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst coursesOfUser = await this.getCourseOfUser(userId);\n\n\t\tconst lessonsOfStudent = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: coursesOfUser },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: ignoredTasks } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfUser } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n\n\tasync findAllAssignedByTeacher(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// TODO: merge overlaps with findAllOpenByStudent\n\t\t// TODO: use Query Builder\n\t\tconst coursesOfUser = await this.getCourseOfUser(userId);\n\n\t\tconst publishedLessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: coursesOfUser },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst [usersTasks, count] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ course: { $in: coursesOfUser } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: publishedLessons } }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { createdAt: QueryOrder.DESC } }\n\t\t);\n\t\treturn [usersTasks, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus?: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskSubmissionMetadataService.html":{"url":"injectables/TaskSubmissionMetadataService.html","title":"injectable - TaskSubmissionMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskSubmissionMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/domain/task-submission-metadata.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                submissionStatusForTask\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        submissionStatusForTask\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/domain/task-submission-metadata.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ISubmissionStatus, Submission, Task } from '../entity';\n\n@Injectable()\nexport class TaskSubmissionMetadataService {\n\tsubmissionStatusForTask = (submissions: Submission[], task: Task): ISubmissionStatus => {\n\t\tconst submittedUsers = new Set();\n\t\tconst gradedUsers = new Set();\n\n\t\tconst sortedSubmissions = [...submissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt  {\n\t\t\tif (submission.task.id === task.id) {\n\t\t\t\tif (\n\t\t\t\t\t!submittedUsers.has(submission.student.id) &&\n\t\t\t\t\t(submission.grade || submission.gradeComment || submission.gradeFileIds.length)\n\t\t\t\t) {\n\t\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t\t}\n\t\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t\t}\n\t\t});\n\t\t// TODO: consider coursegroups\n\t\tconst numberOfStudentsInTasksCourse = task.course.students.length;\n\n\t\treturn {\n\t\t\tsubmitted: submittedUsers.size,\n\t\t\tmaxSubmissions: numberOfStudentsInTasksCourse,\n\t\t\tgraded: gradedUsers.size,\n\t\t};\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpen\n                            \n                            \n                                    Async\n                                findAllOpenByTeacher\n                            \n                            \n                                    Async\n                                findAllOpenForStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, submissionRepo: SubmissionRepo, taskSubmissionMetadata: TaskSubmissionMetadataService, learnroomFacade: LearnroomFacade)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        submissionRepo\n                                                  \n                                                        \n                                                                        SubmissionRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskSubmissionMetadata\n                                                  \n                                                        \n                                                                        TaskSubmissionMetadataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        learnroomFacade\n                                                  \n                                                        \n                                                                        LearnroomFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpen\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpen(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpenByTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllOpenForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tteacherDashboard: 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\t\tstudentDashboard: 'TASK_DASHBOARD_VIEW_V3',\n\t}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\n// import { LearnroomFacade } from '@modules/learnroom';\nimport { EntityId, IPagination, Counted, ICurrentUser } from '@shared/domain';\nimport { TaskRepo, SubmissionRepo } from '../repo';\nimport { TaskSubmissionMetadataService } from '../domain/task-submission-metadata.service';\nimport { ISubmissionStatus, Task } from '../entity';\nimport { LearnroomFacade } from '../../learnroom';\n\nexport type TaskWithSubmissionStatus = {\n\ttask: Task;\n\tstatus: ISubmissionStatus;\n};\n\n@Injectable()\nexport class TaskUC {\n\tpermissions = {\n\t\tteacherDashboard: 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\t\tstudentDashboard: 'TASK_DASHBOARD_VIEW_V3',\n\t};\n\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly submissionRepo: SubmissionRepo,\n\t\tprivate readonly taskSubmissionMetadata: TaskSubmissionMetadataService,\n\t\tprivate readonly learnroomFacade: LearnroomFacade\n\t) {}\n\n\t// TODO: Combine student and teacher logic if it is possible in next iterations\n\t// TODO: Add for students in status -> student has finished, teacher has answered\n\t// TODO: After it, the permission check can removed\n\tasync findAllOpenForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [submissionsOfStudent] = await this.submissionRepo.getAllSubmissionsByUser(userId);\n\t\tconst tasksWithSubmissions = submissionsOfStudent.map((submission) => submission.task.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByStudent(userId, pagination, tasksWithSubmissions);\n\t\tconst computedTasks = tasks.map((task) => ({\n\t\t\ttask,\n\t\t\tstatus: this.taskSubmissionMetadata.submissionStatusForTask(submissionsOfStudent, task),\n\t\t}));\n\t\treturn [computedTasks, total];\n\t}\n\n\tasync findAllOpenByTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst [tasks, total] = await this.taskRepo.findAllAssignedByTeacher(userId, pagination);\n\t\tconst [submissions] = await this.submissionRepo.getSubmissionsByTasksList(tasks);\n\n\t\tconst computedTasks = tasks.map((task) => {\n\t\t\tconst taskSubmissions = submissions.filter((sub) => sub.task === task);\n\t\t\treturn {\n\t\t\t\ttask,\n\t\t\t\tstatus: this.taskSubmissionMetadata.submissionStatusForTask(taskSubmissions, task),\n\t\t\t};\n\t\t});\n\t\treturn [computedTasks, total];\n\t}\n\n\tasync findAllOpen(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tconst {\n\t\t\tuser: { id, permissions },\n\t\t} = currentUser;\n\n\t\tlet response: Counted;\n\t\tif (permissions.includes(this.permissions.teacherDashboard)) {\n\t\t\tresponse = await this.findAllOpenByTeacher(id, pagination);\n\t\t} else if (permissions.includes(this.permissions.studentDashboard)) {\n\t\t\tresponse = await this.findAllOpenForStudent(id, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { User } from '../entity';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store \nBC-119 - remove malfunction S3 lifecycle migration\n\n26.9.1\n\nSC-9192 - enable cors for nestjs app routes\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n26.9.0\n\nSC-9231 - add permissions to SuperHero to edit admin role \nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nChanged\n\nOPS-2491 - Change the hydra service url\n\n26.8.0\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            class\n            MongoSharedConnection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            variable\n            connections\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            variable\n            sharedClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts\n            \n            class\n            MongoSharedDriver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/entity/course.entity.ts\n            \n            class\n            Course\n            \n                11 %\n                (3/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/entity/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/entity/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/entity/coursegroup.entity.ts\n            \n            class\n            Coursegroup\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/entity/coursegroup.entity.ts\n            \n            interface\n            ICoursegroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/learnroom.facade.ts\n            \n            injectable\n            LearnroomFacade\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/repo/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/repo/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/repo/coursegroup.repo.ts\n            \n            class\n            CoursegroupScope\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/repo/coursegroup.repo.ts\n            \n            injectable\n            CoursegroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/uc/course.uc.ts\n            \n            injectable\n            CourseUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/uc/course.uc.ts\n            \n            interface\n            ICoursegroupRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/uc/course.uc.ts\n            \n            interface\n            ICourseRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/learnroom/utils/testHelper.ts\n            \n            class\n            LearnroomTestHelper\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/domain/task-submission-metadata.service.ts\n            \n            injectable\n            TaskSubmissionMetadataService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            class\n            CourseGroupInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            class\n            CourseTaskInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-task-info.entity.ts\n            \n            variable\n            COURSE_DEFAULT_COLOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            courseEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            learnroomEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            taskEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            userEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            createOrQueryFromList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            forceArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedObjectValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            useQueryIfValueIsDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.17\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.0\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CourseTyps   (apps/.../testHelper.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/learnroom/utils/testHelper.ts\n    \n        \n            \n                \n                    \n                        \n                        CourseTyps\n                    \n                \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacherIds\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : studentIds\n                            \n                        \n                        \n                            \n                                 subsitutionTeacher\n                            \n                        \n                        \n                            \n                                Value : substitutionTeacherIds\n                            \n                        \n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createOrQueryFromList   (apps/.../scope.ts)\n                        \n                        \n                            forceArray   (apps/.../scope.ts)\n                        \n                        \n                            isDefined   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedObjectValue   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedQuery   (apps/.../scope.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                        \n                            useQueryIfValueIsDefined   (apps/.../scope.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n            \n                \ncreateOrQueryFromList(arrayOfObjects, selectedKey, targetKey)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OrQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceArray\n                        \n                    \n                \n            \n            \n                \nforceArray(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefined\n                        \n                    \n                \n            \n            \n                \nisDefined(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedObjectValue\n                        \n                    \n                \n            \n            \n                \nisDefinedObjectValue(object, key)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n            \n                \nisDefinedQuery(input)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \nuseQueryIfValueIsDefined(testedDefinedvalue, query)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedDefinedvalue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ST | EmptyResultQueryType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_exports\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLearnroomFacade \n\nLearnroomFacade \n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomFacade  -->\n\nLearnroomModule->LearnroomFacade \n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nLearnroomModule->TaskModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nCourseUC\n\nCourseUC\n\nLearnroomModule -->\n\nCourseUC->LearnroomModule\n\n\n\n\n\nCoursegroupRepo\n\nCoursegroupRepo\n\nLearnroomModule -->\n\nCoursegroupRepo->LearnroomModule\n\n\n\n\n\nLearnroomFacade\n\nLearnroomFacade\n\nLearnroomModule -->\n\nLearnroomFacade->LearnroomModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nSubmissionRepo\n\nSubmissionRepo\n\nTaskModule -->\n\nSubmissionRepo->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskSubmissionMetadataService\n\nTaskSubmissionMetadataService\n\nTaskModule -->\n\nTaskSubmissionMetadataService->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    27 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    54 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    32 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with  \n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../role.entity.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../status.type.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTargetInfo   (apps/.../news.types.ts)\n                        \n                        \n                            OrQuery   (apps/.../scope.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            QueryObject   (apps/.../scope.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskWithSubmissionStatus   (apps/.../task.uc.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryObject\n                \n            \n            \n                \n                        Record>\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/user/entity/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/status.type.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetInfo\n                \n            \n            \n                \n                        SchoolInfo | TeamInfo | CourseInfo\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/task/uc/task.uc.ts\n    \n    \n        \n            \n                \n                    \n                    TaskWithSubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            connections   (apps/.../mongo-shared-connection.ts)\n                        \n                        \n                            COURSE_DEFAULT_COLOR   (apps/.../course-task-info.entity.ts)\n                        \n                        \n                            courseEntities   (apps/.../server.module.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            learnroomEntities   (apps/.../server.module.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            sharedClient   (apps/.../mongo-shared-connection.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskEntities   (apps/.../server.module.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                            userEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        connections\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharedClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoClient | undefined\n\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/task/entity/course-task-info.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COURSE_DEFAULT_COLOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ACACAC'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        learnroomEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Course, Coursegroup]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Task, LessonTaskInfo, CourseTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [User, Role, Account]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CourseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : courseSchema\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LessonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : lessonSchema\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SubmissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : submissionSchema\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TaskSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : taskSchema\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : taskModel\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : courseModel\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : lessonModel\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst schoolId = new ObjectId().toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school: schoolId });\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId: user.id, roles: roleIds, schoolId, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/learnroom/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n\tgroups: [],\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login). \n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details. \n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/ \n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\n It will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\n A request is received\n A hook initializes the request context\n A hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\n After the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
