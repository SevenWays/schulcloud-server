---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME-redis-master
  labels:
    app: $SERVICE_NAME-redis
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: $SERVICE_NAME-redis
      role: master
      tier: backend
  template:
    metadata:
      name: $SERVICE_NAME-redis
      labels:
        app: $SERVICE_NAME-redis
        role: master
        tier: backend
    spec:
      containers:
        - name: $SERVICE_NAME-redis
          image: redis:6.0.10-alpine3.12
          resources:
            requests:
              cpu: 1000m
              memory: 1000Mi
          ports:
          - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME-redis-slave
  labels:
    app: $SERVICE_NAME-redis
spec:
  selector:
    matchLabels:
      app: $SERVICE_NAME-redis
      role: slave
      tier: backend
  replicas: 2
  template:
    metadata:
      labels:
        app: $SERVICE_NAME-redis
        role: slave
        tier: backend
    spec:
      containers:
      - name: $SERVICE_NAME-slave
        image: redis:6.0.10-alpine3.12
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # Using `GET_HOSTS_FROM=dns` requires your cluster to
          # provide a dns service. As of Kubernetes 1.3, DNS is a built-in
          # service launched automatically. However, if the cluster you are using
          # does not have a built-in DNS service, you can instead
          # access an environment variable to find the master
          # service's host. To do so, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 6379